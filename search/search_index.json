{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Accueil","text":"<p>Actu SIO1</p> <p> Th\u00e8me en cours d'\u00e9tude : UML</p> <p>Actu SIO2</p> <p> Stage du 8 janvier 2024 au 23 f\u00e9vrier 2024</p> <p>les essentiels</p> <ul> <li>Lien vers le BO</li> </ul>"},{"location":"1_Base_de_donnees/sommaire/","title":"sommaire","text":"<ol> <li>Introduction au Base de donn\u00e9es</li> <li>Langage de Manipulation de donn\u00e9es</li> <li>Langage de Cr\u00e9ation de donn\u00e9es</li> <li>SQL Complexe</li> </ol> <p>Sources</p> <p>N. Defay, Lyc\u00e9e Bellepierre, La r\u00e9union (licence Creative Commons BY-NC-SA)  E. Burel, Lyc\u00e9e Saint sauveur, redon  Fr\u00e9d\u00e9ric DI GALLO, \u00ab Cours de base de donn\u00e9es \u00bb, cycle probatoire CNAM BORDEAUX 1999-2000  Dr. Brahim BELATTAR, \u00ab Bases de donn\u00e9es \u00e0 l\u2019usage de l\u2019\u00e9tudiant \u00bb, LISA - Dpt d\u2019informatique - Facult\u00e9 des sciences de l\u2019Ing\u00e9nieur - Univ. de Batna, 2002   Philippe LACURIE, \u00ab Les bases de donn\u00e9es \u00bb, ALSI BTS IG 1\u00e8re ann\u00e9e, 2005  Alain VAN SANTE et Michel AUGUSTE, \u00ab Variations p\u00e9dagogiques autour de l\u2019enseignement du mod\u00e8le relationnel et des SGBDR en 1\u00e8re STG \u00bb, R\u00e9seau CERTA 2005 Pierre VETTER, \u00ab Introduction aux bases de donn\u00e9es \u00bb, B1 SUPINFO, 2011  Wikip\u00e9dia, \u00ab Base de donn\u00e9es et Syst\u00e8me de gestion de base de donn\u00e9es \u00bb, 2011</p>"},{"location":"1_Base_de_donnees/1.1_introduction/cours/","title":"1. G\u00e9n\u00e9ralit\u00e9s","text":""},{"location":"1_Base_de_donnees/1.1_introduction/cours/#11-definition","title":"1.1 D\u00e9finition","text":"<p>D\u00e9finition g\u00e9n\u00e9rale : Une Base de donn\u00e9es est un ensemble organis\u00e9 d'informations avec un objectif commun. </p> <p>Peu importe le support utilis\u00e9 pour rassembler et stocker les donn\u00e9es (papier, fichiers, etc.), d\u00e8s lors que des donn\u00e9es sont rassembl\u00e9es et stock\u00e9es d'une mani\u00e8re organis\u00e9e dans un but sp\u00e9cifique, on parle de base de donn\u00e9es.</p> <p>D\u00e9finition informatique : Une Base de Donn\u00e9es (BdD), en anglais Data Base (DB), est une collection d\u2019informations structur\u00e9es, coh\u00e9rentes, persistantes, partag\u00e9es. Structur\u00e9e : les donn\u00e9es sont organis\u00e9es. Elles donnent un sens/une vue du syst\u00e8me d\u2019information qu\u2019elles repr\u00e9sentent. Persistante : La dur\u00e9e de vie des donn\u00e9es doivent \u00eatre sup\u00e9rieure \u00e0 la dur\u00e9e des programmes qui les manipulent. La persistance peut \u00eatre obtenue en effectuant un stockage permanent (sur le disque). Coh\u00e9rente : la base de donn\u00e9es sert pour prendre un ensemble de d\u00e9cision. Les donn\u00e9es doivent \u00eatre juste et non redondante. Partag\u00e9e : L'un des avantages d'une base de donn\u00e9es est que les informations qui la constituent peuvent \u00eatre accessibles ais\u00e9ment par plusieurs programmes qui les utilisent simultan\u00e9ment avec des objectifs diff\u00e9rents.  exemple : Application de gestion RH (paye, cong\u00e9s, \u2026)  Une base de donn\u00e9es peut \u00eatre locale ou r\u00e9partie. Elle est dite locale quand elle est utilis\u00e9e sur une machine par un utilisateur et repartie quand les informations sont stock\u00e9es sur des machines distantes (serveur) et accessibles par r\u00e9seau.</p> <p> Cons\u00e9quence : Il faut un \u00ab pilote \u00bb, un administrateur de base de donn\u00e9es (DBA).</p>"},{"location":"1_Base_de_donnees/1.1_introduction/cours/#12-historique","title":"1.2 Historique","text":"<p>Au  d\u00e9but de l'informatique, on a voulu construire des syst\u00e8mes pour effectuer des calculs (\u00e9quations diff\u00e9rentielles, calcul matriciel, ...). L\u2019approche classique de mise en place d\u2019une application informatique dans une entreprise, consistait le plus souvent \u00e0 l\u2019\u00e9criture d\u2019un certain nombre de programmes destin\u00e9s \u00e0 l\u2019exploitation d\u2019un ensemble de fichiers qu\u2019il fallait aussi cr\u00e9er. </p> <p>Donn\u00e9es organis\u00e9es en fichier (jusqu'au ann\u00e9es 60) L\u00e9gende : D pour donn\u00e9es, F pour Fichiers</p> <p>Les syst\u00e8mes classiques de fichiers posent les probl\u00e8mes suivants:  La d\u00e9pendance des donn\u00e9es et des traitements  Lors de la mise \u00e0 jour d'un fichier, la totalit\u00e9 du fichier est rendue indisponible pour les autres utilisateurs (seuls certains syst\u00e8mes disposent d'utilitaires sp\u00e9cifiques pour la gestion des acc\u00e8s concurrents),  Les proc\u00e9dures de s\u00e9curit\u00e9 (confidentialit\u00e9 et reprise apr\u00e8s panne) doivent \u00eatre programm\u00e9es. Ce syst\u00e8me par fichier est toujours exploit\u00e9 dans les grandes entreprises. Syst\u00e8me VSAM sous IBM.</p> <p>Aujourd\u2019hui, la tendance actuelle est la gestion de grandes voire tr\u00e8s grandes1 quantit\u00e9s d'informations. Cela revient \u00e0 stocker des donn\u00e9es et manipuler ces donn\u00e9es. Notons que les donn\u00e9es peuvent \u00eatre de natures diverses, les op\u00e9rations plus ou moins compliqu\u00e9es et nombre d\u2019utilisateurs plus ou moins important. </p> <p>Exemples d'applications : Applications de gestion (paye, stock, ...), applications transactionnelles (banque, r\u00e9servation...), applications de documentation (biblioth\u00e8que, cartographie, ...), Ing\u00e9nierie (PAO, CAO, ... ).   Les entrep\u00f4ts de donn\u00e9es (data warehouse) contiennent plusieurs t\u00e9raoctets (1 To = 1024 Go) de donn\u00e9es.  Le 7\u00b0 youtube, c\u2019est 45 Terabytes de donn\u00e9es et le 1er le centre mondial pour le climat, c\u2019est 330 terabytes</p> Ordre de grandeur : Un octet est une suite de 8 bits. C\u2019est ce qu\u2019il faut pour coder 1 caract\u00e8re \u2018A\u2019. kilo &gt; mega &gt; giga &gt; tera &gt; peta &gt; exa \u2026 3   Le syst\u00e8me de gestion de base de donn\u00e9es SGDB <p>Une base de donn\u00e9es est un ensemble d\u2019informations stock\u00e9 sur un syst\u00e8me informatique.  Cet ensemble est implant\u00e9 physiquement (g\u00e9n\u00e9ralement sur disque dur) sous la forme d\u2019un ou plusieurs fichiers.  Cette organisation est assur\u00e9e par un logiciel sp\u00e9cialis\u00e9 : Le SGBD (Syst\u00e8me de Gestion de Base de Donn\u00e9es) Les fonctionnalit\u00e9s \u00e9l\u00e9mentaires d\u2019un SGBD sont :  - Structurer/organiser les donn\u00e9es  - Stocker les donn\u00e9es  - Mettre \u00e0 jour les donn\u00e9es (ajout, modification et suppression d\u2019informations)  - Interroger les donn\u00e9es </p> <p>Figure 2 : Principes de fonctionnement des SGBD</p> <p>La construction d\u2019une base de donn\u00e9es passe tout d\u2019abord par la r\u00e9alisation d\u2019un \u00ab plan \u00bb : un sch\u00e9ma conceptuel. Cette phase de conception est g\u00e9n\u00e9ralement guid\u00e9e par une m\u00e9thode (ex. MERISE). L\u2019objectif est de mod\u00e9liser* le domaine \u00e9tudi\u00e9. </p> <ul> <li>On n\u2019abordera pas les m\u00e9thodes de mod\u00e9lisation dans ce module. Pr\u00e9vu au 2nd semestre en SLAM1.</li> </ul> <p>Exemple : Dans une entreprise on souhaite r\u00e9aliser une base de donn\u00e9es \u00ab fournisseurs \u00bb La mod\u00e9lisation consistera \u00e0 recenser les informations n\u00e9cessaires concernant les fournisseurs (raison sociale, t\u00e9l\u00e9phone, e-mail\u2026) et les produits (r\u00e9f\u00e9rence, d\u00e9signation, prix\u2026) ainsi que les liens entre ces deux entit\u00e9s (Qui fournit quoi ?) L\u2019organisation s\u00e9mantique des informations peut \u00eatre r\u00e9alis\u00e9e suivant plusieurs mod\u00e8les de donn\u00e9es. Les principaux mod\u00e8les de base de donn\u00e9es sont les suivants :  - Le mod\u00e8le hi\u00e9rarchique  - Le mod\u00e8le r\u00e9seau  - Le mod\u00e8le relationnel  - Le mod\u00e8le objet </p> <p>Notons cependant que le mod\u00e8le relationnel est aujourd\u2019hui utilis\u00e9 par la grande majorit\u00e9 des SGBD (environ \u00be) et que l\u2019on retrouve \u00e9galement d\u2019autres mod\u00e8les (ex. : navigationnel et d\u00e9ductif)</p> <ol> <li>Les mod\u00e8les de base de donn\u00e9es  1   Le mod\u00e8le hi\u00e9rarchique </li> </ol> <p>Con\u00e7u \u00e0 la NASA pour la gestion des donn\u00e9es du programme spatial Apollo, les donn\u00e9es sont class\u00e9es hi\u00e9rarchiquement, selon une arborescence descendante. Ce mod\u00e8le utilise des pointeurs entre les diff\u00e9rents enregistrements. Bien adapt\u00e9 \u00e0 des donn\u00e9es de type nomenclatures avec une relation 1 vers N mais inappropri\u00e9 aux structures de donn\u00e9es complexes. </p> <p>Les fichiers XML constituent une r\u00e9miniscence des bases de donn\u00e9es hi\u00e9rarchiques. </p> <p>Figure 4 : exemple d'arborescence et de contenu de fichier XML Exemples :  \uf0fc   La classification du vivant rel\u00e8ve du mod\u00e8le hi\u00e9rarchique de base de donn\u00e9es : Le chat appartient \u00e0 la famille des f\u00e9lid\u00e9s, du sous-ordre f\u00e9liformes de l\u2019ordre des carnivores, de la classe des mammif\u00e8res, du sous-embranchement des vert\u00e9br\u00e9s du r\u00e8gne animal. </p> <p>\uf0fc   Vu de l\u2019utilisateur, un syst\u00e8me de fichiers s\u2019apparente \u00e0 une base de donn\u00e9es hi\u00e9rarchique (arborescence des dossiers) </p> <p>Le point d\u2019acc\u00e8s de l\u2019information est unique (la racine). Il faut parfois parcourir toute l\u2019arborescence pour trouver une information.</p> <p>2   Le mod\u00e8le r\u00e9seau</p> <p>Ce mod\u00e8le constitue une extension du mod\u00e8le hi\u00e9rarchique, il utilise des pointeurs vers des enregistrements selon une structure arborescente. Il est cependant possible d\u2019\u00e9tablir des liens sans restriction entre les diff\u00e9rents \u00e9l\u00e9ments.  Imagin\u00e9 par Charles Bachman, sa sp\u00e9cification a \u00e9t\u00e9 publi\u00e9e en 1969 par le consortium Codasyl, \u00e0 l\u2019origine du langage Cobol. Plus que le mod\u00e8le hi\u00e9rarchique, le mod\u00e8le r\u00e9seau implique une connaissance de la structure de la base de donn\u00e9es pour permettre l\u2019acc\u00e8s aux donn\u00e9es : les logiciels sont d\u00e9pendants de la structure de la base. </p> <p>Exemple :  Des donn\u00e9es g\u00e9n\u00e9alogiques peuvent \u00eatre organis\u00e9es selon le mod\u00e8le r\u00e9seau.  Un enregistrement de type parent dispose d\u2019un pointeur vers chacun des membres de sa descendance. Chaque membre de la descendance dispose d\u2019un pointeur vers son a\u00een\u00e9 et d\u2019un autre vers son cadet.</p> <p>Pour retrouver une donn\u00e9e dans une telle repr\u00e9sentation, il faut conna\u00eetre le chemin d'acc\u00e8s (les liens) ce qui rend les programmes d\u00e9pendants de la structure de donn\u00e9es</p> <p>3   Le mod\u00e8le relationnel</p> <p>Ce mod\u00e8le est fond\u00e9 sur la th\u00e9orie math\u00e9matique des relations. Le sch\u00e9ma conceptuel peut \u00eatre vu comme un ensemble de tables (ou relations) \u00e0 n colonnes, n d\u00e9signant le degr\u00e9 de la relation.  Avec le mod\u00e8le relationnel, une table sert \u00e0 repr\u00e9senter aussi bien une classe d\u2019objets qu\u2019une association entre des classes d\u2019objets. Chaque \u00e9l\u00e9ment d\u2019une table est appel\u00e9 un n-uplet (ou tupple).  Le terme objet repr\u00e9sente ici un \u00e9l\u00e9ment, un acteur du syst\u00e8me d\u2019information (une facture, un produit, un client \u2026)</p> <p>Figure 6 : Mod\u00e8le relationnel A partir des ann\u00e9es 70 Dans l\u2019exemple de la Fig. 6, la table INSCRIPTION d\u00e9crit l\u2019association entre la classe d\u2019objets ETUDIANT et la classe MODULE. Elle permet de mod\u00e9liser le fait qu\u2019un \u00e9tudiant peut s\u2019inscrire \u00e0 0, 1 ou plusieurs modules. Ce mod\u00e8le est le plus fr\u00e9quent, il fera l\u2019objet d\u2019un paragraphe un peu plus loin.  Les logiciels qui s\u2019appuient sur ce mod\u00e8le sont les SGBDR (R pour relationnel)  Le langage d\u00e9di\u00e9 aux op\u00e9rations sur les donn\u00e9es est le SQL (Structured Query Language)</p> <p>4   Le mod\u00e8le objet</p> <p>La notion de bases de donn\u00e9es objet ou relationnel-objet est plus r\u00e9cente.  Les donn\u00e9es sont repr\u00e9sent\u00e9es sous forme d'objets. Comme en programmation orient\u00e9e objet, les objets contiennent les donn\u00e9es qui les d\u00e9crivent ainsi que la logique qui permet de les utiliser ou de les modifier. Chaque enregistrement de la base de donn\u00e9es constitue une instance de la classe d\u2019objets correspondante. Ces instances sont class\u00e9es de mani\u00e8re hi\u00e9rarchique dans la base de donn\u00e9es. </p> <p>Les SGBDO (Syst\u00e8mes de Gestion de Bases de Donn\u00e9es orient\u00e9s Objet) sont recommand\u00e9s pour les applications n\u00e9cessitant des performances \u00e9lev\u00e9es dans la manipulation de donn\u00e9es complexes.  Ils ont pour inconv\u00e9nient principal une tr\u00e8s 'importante quantit\u00e9 de ressources (m\u00e9moire et temps de calcul. Ils sont par cons\u00e9quent cantonn\u00e9s \u00e0 des niches telles que l\u2019ing\u00e9nierie, les \u00e9tudes spatiales, ou encore la recherche fondamentale en physique et en biologie mol\u00e9culaire.</p> <p>3.  Les SGBDR</p> <p>D\u00e9finition SGBD : Ensemble des programmes permettant la gestion et l\u2019acc\u00e8s \u00e0 une base de donn\u00e9es Elle est dite SGBDR, lorsqu\u2019elle concerne une base de donn\u00e9es relationnelle. Les SGBD relationnels sont \u00e0 l\u2019heure actuelle les plus diffus\u00e9s sur le march\u00e9.  Ils permettent d\u2019organiser les donn\u00e9es sous formes de tables. La description de la base de donn\u00e9es est faite gr\u00e2ce \u00e0 un sch\u00e9ma conceptuel ou relationnel permettant de d\u00e9crire toutes les tables (relations) implant\u00e9es sur disque.  Un SGBDR sert \u00e0 effectuer des op\u00e9rations ordinaires telles que consulter, modifier, construire, organiser, transformer, copier, sauvegarder ou restaurer des bases de donn\u00e9es. \u2003 1   Les objectifs d\u2019un SGBDR</p> <p>Ind\u00e9pendance physique : un remaniement de l\u2019organisation physique des donn\u00e9es n\u2019entra\u00eene pas de modification des programmes d\u2019application (traitements) Exemple : ind\u00e9pendante des structures de stockage utilis\u00e9es. Changement de serveur. Ind\u00e9pendance logique : un remaniement de l\u2019organisation logique des fichiers n\u2019entra\u00eene pas de  modification dans les programmes d\u2019application non concern\u00e9s.  Exemple : ajout d\u2019une rubrique (date de naissance d\u2019un \u00e9tudiant) Manipulation facile des donn\u00e9es : un utilisateur non-informaticien doit pouvoir manipuler simplement les donn\u00e9es (interrogation et mise \u00e0 jour) Administration facile des donn\u00e9es : un SGBD doit fournir des outils pour d\u00e9crire les donn\u00e9es, permettre le suivi de ces structures et autoriser leur \u00e9volution. Efficacit\u00e9 des acc\u00e8s aux donn\u00e9es : garantie d\u2019un bon d\u00e9bit (nombre de transactions par seconde) et d\u2019un bon temps de r\u00e9ponse (temps d\u2019attente moyen pour une transaction) Redondance contr\u00f4l\u00e9e des donn\u00e9es : diminution du volume de stockage, pas de mise \u00e0 jour multiple ni d\u2019incoh\u00e9rence. Coh\u00e9rence des donn\u00e9es : exemple : L\u2019\u00e2ge d\u2019une personne doit \u00eatre un nombre entier positif. Le SGBD doit veiller \u00e0 ce que les applications respectent cette r\u00e8gle.  Partage des donn\u00e9es : utilisation simultan\u00e9e des donn\u00e9es par diff\u00e9rentes applications S\u00e9curit\u00e9 des donn\u00e9es : les donn\u00e9es doivent \u00eatre prot\u00e9g\u00e9es contre les acc\u00e8s non-autoris\u00e9s ou en cas de panne. 2   Les composants d\u2019un SGBDR</p> <p>Un SGBD est un ensemble de logiciels parmi lesquels il y a un moteur de base de donn\u00e9es, un interpr\u00e8te du langage SQL, une interface de programmation, et diverses interfaces utilisateur.  Le moteur de base de donn\u00e9es : C\u2019est le composant central du SGBD qui effectue la majorit\u00e9 des traitements de manipulation du contenu des bases de donn\u00e9es.  Interpr\u00e8te SQL : SQL est un langage informatique qui sert \u00e0 exprimer des requ\u00eates d'op\u00e9rations sur les bases de donn\u00e9es. L'interpr\u00e8te SQL d\u00e9code les requ\u00eates, et les transforme en un plan d'ex\u00e9cution d\u00e9taill\u00e9, qui est alors transmis au moteur de base de donn\u00e9es.  Interface de programmation : C\u2019est une biblioth\u00e8que logicielle qui permet \u00e0 un programme tiers de communiquer avec le SGBD, de demander des op\u00e9rations et de r\u00e9cup\u00e9rer des donn\u00e9es provenant des bases de donn\u00e9es. Le d\u00e9tail des demandes est souvent formul\u00e9 en langage SQL.  ODBC est un logiciel m\u00e9diateur (middleware) qui permet \u00e0 des logiciels, par l'interm\u00e9diaire d'une interface de programmation unique de communiquer avec diff\u00e9rents SGBD ayant chacun une interface de programmation diff\u00e9rente. C'est un logiciel souvent utilis\u00e9 avec les SGBD.   Interface utilisateur : C\u2019est l\u2019interface graphique (homme-machine) qui permet de mettre en oeuvre toutes les fonctionnalit\u00e9s propos\u00e9es par le SGBD. On retrouve parfois une interface d\u00e9di\u00e9e \u00e0 l\u2019interrogation des donn\u00e9es appel\u00e9e QBE (Query By Example) : Le principe est que l'utilisateur pr\u00e9sente un exemple du r\u00e9sultat de recherche attendu (sous forme d'une matrice), puis le soumet au SGBD. 3   Les fonctions d\u2019un SGDBR</p> <p>Description des donn\u00e9es LDD : Langage de d\u00e9finition de Donn\u00e9es : permet de d\u00e9crire et de maintenir le structure des donn\u00e9es (nom, longueur, type \u2026) constituant la base. A une base de donn\u00e9es est associ\u00e9e un sch\u00e9ma, appel\u00e9 MPD (Mod\u00e8le physique de Donn\u00e9e), qui d\u00e9crit la structure et le type des donn\u00e9es qu'elle contient et \u00e9ventuellement quelques r\u00e8gles (ou contraintes) qui doivent \u00eatre toujours v\u00e9rifi\u00e9es. Manipulation de donn\u00e9es LMD : Langage de manipulation de Donn\u00e9es : recherche, mise \u00e0 jour, transformation des donn\u00e9es. Contr\u00f4le de l\u2019int\u00e9grit\u00e9 des donn\u00e9es LCD : respect des contraintes d\u2019int\u00e9grit\u00e9 (Il ne peut y avoir qu\u2019un seul fournisseur f1, unicit\u00e9 d\u2019une ligne) Gestion des transactions : atomicit\u00e9 des transactions (pas de m\u00e9lange entre transactions), acc\u00e8s simultan\u00e9 aux m\u00eames donn\u00e9es rendu possible gr\u00e2ce \u00e0 des techniques de verrou et s\u00e9curit\u00e9 (mot de passe, etc \u2026) Ces langages permettent : \uf0fc   l'utilisation par des \u00ab non-informaticiens \u00bb, c'est-\u00e0-dire n'ayant pas besoin de connaissance en syst\u00e8me ou en programmation (mais l'apprentissage du langage d'extraction des donn\u00e9es est lui indispensable)  \uf0fc   l'\u00e9criture de programmes ind\u00e9pendants de la structure des donn\u00e9es.</p> <p>4   Les diff\u00e9rents type d\u2019utilisateurs</p> <p>On peut distinguer plusieurs r\u00f4les que doivent jouer un individu ou un groupe d\u2019individus pour concevoir, cr\u00e9er, mettre en \u0153uvre et exploiter une base de donn\u00e9es.  Le d\u00e9veloppeur d\u2019applications (ou analyste programmeur) : Apr\u00e8s mod\u00e9lisation du syst\u00e8me d\u2019information \u00e9tudi\u00e9, c\u2019est lui qui propose le mod\u00e8le relationnel de la future base de donn\u00e9es. Il est charg\u00e9 ensuite d\u2019\u00e9laborer les programmes pour exploiter la base de donn\u00e9es.  L\u2019administrateur de la base de donn\u00e9es : C\u2019est lui qui (\u00e0 partir du mod\u00e8le relationnel) est charg\u00e9 de l\u2019aspect plus technique de la cr\u00e9ation de la base. Il assure les fonctionnalit\u00e9s d\u2019administration et de s\u00e9curit\u00e9 des donn\u00e9es.  L\u2019utilisateur : Il s\u2019agit de caract\u00e9riser ici la personne qui se sert simplement de la base de donn\u00e9es et qu\u2019on appelle couramment l\u2019utilisateur final (End User en anglais). Ces personnes ne sont pas des informaticiens, elles utilisent les ressources logicielles mises \u00e0 disposition par le d\u00e9veloppeur et l\u2019administrateur. L\u2019utilisateur \u00ab averti \u00bb est capable d\u2019interroger la base en utilisant le langage SQL. \u2003 4.  Le mod\u00e8le relationnel</p> <p>1   Notions de table et de relation</p> <p>L\u2019unit\u00e9 de stockage dans une base de donn\u00e9es relationnelle est la table. Une table regroupe un ensemble de donn\u00e9es qui d\u00e9crivent un m\u00eame objet. On la repr\u00e9sente graphiquement sous une forme de tableau dans lequel les lignes sont appel\u00e9s enregistrements (ou tupple) et l\u2019intitul\u00e9 des colonnes les champs. A l\u2019intersection d\u2019une ligne et d\u2019une colonne figure une valeur.</p> <p>Au niveau relationnel, ces tables correspondent aux relations ci-dessous :  GARCON(dossard, nom, prenom, datenais, enseigne)  PRODUIT(refproduit, designproduit, commentaireproduit, prixttcproduit, codegamme)  Ce mode de repr\u00e9sentation est appel\u00e9 \u00ab en intention \u00bb, il repr\u00e9sente la structure de la base de donn\u00e9es (son sch\u00e9ma, son plan\u2026). Par convention, le nom d\u2019une table s\u2019\u00e9crit en MAJUSCULE. Au niveau relationnel, on parlera d\u2019occurrences pour d\u00e9signer les enregistrements et d\u2019attributs pour parler des champs. Chaque propri\u00e9t\u00e9 de l\u2019objet contenu dans la table doit \u00eatre d\u00e9crit par : Son nom Son type de donn\u00e9es Champ   Type numCla  Num\u00e9rique libell\u00e9Cla  Texte</p> <p>2   Attributs et cl\u00e9s</p> <p>Un attribut est une information, une donn\u00e9e \u00e9l\u00e9mentaire, une rubrique d\u00e9signant le plus petit \u00e9l\u00e9ment d\u2019information manipulable. Il est caract\u00e9ris\u00e9 par un nom et un type.  Exemples :  nomClient : attribut de type alphab\u00e9tique (ex. de valeur : \"DUPOND\", \"PAYET\", ...)  qteCmdee : attribut de type entier (ex. de valeurs : 5, 10, 2, ...) Soit la relation Lecteur(nomLecteur, prenomLecteur) et le contenu de la table correspondante : </p> <p>Que pensez-vous de l\u2019exemple ci-dessus ?  R\u00e9ponse : </p> <p>Il faut d\u00e9finir une cl\u00e9 pour cette relation.  La cl\u00e9 est un attribut qui permet de distinguer chaque occurrence d\u2019une relation par rapport \u00e0 tous les autres. Toutes les valeurs de cet attribut doivent \u00eatre uniques.  \uf0e0 Une relation doit poss\u00e9der au moins un attribut et si c\u2019est le cas, ce doit \u00eatre la cl\u00e9.  A faire : Repr\u00e9sentez une table valide avec deux attributs exactement, pourvu de 6 occurrences.</p> <p>3   Cl\u00e9 candidate et cl\u00e9 primaire</p> <p>Les cl\u00e9s candidates sont des attributs susceptibles de pouvoir jouer le r\u00f4le de cl\u00e9.  Dans le cas de la \u00ab Fig. 10 : Table lecteur \u00bb, aucun des champs ne peut jouer le r\u00f4le de cl\u00e9. On rajoute alors un champ suppl\u00e9mentaire qui permettra de distinguer chaque lecteur :  LECTEUR (numLecteur, nomLecteur, prenomLecteur) </p> <p>Le champ numLecteur devient alors la cl\u00e9 primaire de la relation. Par convention, ce doit \u00eatre le premier attribut de la relation et il doit \u00eatre soulign\u00e9. Dans la plupart des SGBDR, un type num\u00e9rique sp\u00e9cial est d\u00e9di\u00e9 \u00e0 ce type cl\u00e9. Appel\u00e9 Num\u00e9roAuto, AutoIncrement\u2026 il est g\u00e9r\u00e9 automatiquement par le SGBDR.</p> <p>Dans l\u2019exemple ci-dessous, pr\u00e9cisez pour chaque champ s\u2019il peut ou non \u00eatre cl\u00e9 candidate. Justifiez.</p> <p>Figure 12 : Table Eleve</p> <p>R\u00e9ponse :</p> <p>4   Cl\u00e9 \u00e9trang\u00e8re</p> <p>Ce type d\u2019attribut permet de mat\u00e9rialiser les liens entre les diff\u00e9rentes tables.  \uf0e0 Une cl\u00e9 \u00e9trang\u00e8re correspond \u00e0 la cl\u00e9 primaire d\u2019une autre table.  Dans l\u2019exemple de la \u00ab Figure 9 : Une table MySQL \u00bb le dernier champ appel\u00e9 codeGamme correspond en fait \u00e0 une valeur existante dans une autre table : GAMME.</p> <p>Le champ codeGamme assure la liaison entre les deux tables. Ainsi, dans la table Produit, on note que le produit d\u00e9sign\u00e9 par \u00ab Lit 140x 190 cm \u00bb fait partie de la gamme n\u00b03.  Dans la table Gamme on trouvera que la gamme n\u00b03 correspond aux produits fabriqu\u00e9 en teck.  Le sch\u00e9ma relationnel de cette base peut s\u2019\u00e9crire comme ci-dessous :  GAMME (codegamme, libellegamme)  PRODUIT (refproduit, designproduit, commentaireproduit, prixttcproduit, #codegamme)  Par convention, une cl\u00e9 \u00e9trang\u00e8re est pr\u00e9c\u00e9d\u00e9e d\u2019un # et est plac\u00e9e en dernier dans la liste des attributs d\u2019une relation.</p> <p>5   Notions d\u2019int\u00e9grit\u00e9</p> <p>Dans le paragraphe \u00ab3.1 Les objectifs d\u2019un SGBDR\u00bb nous avons vu que l\u2019un des principaux objectifs d\u2019un SGBDR \u00e9tait d\u2019assurer la coh\u00e9rence des donn\u00e9es appel\u00e9e \u00e9galement int\u00e9grit\u00e9 des donn\u00e9es.  Cette coh\u00e9rence est en partie assur\u00e9e par la mise en place de contraintes d\u2019int\u00e9grit\u00e9.  a) Int\u00e9grit\u00e9 de \u00ab niveau table \u00bb  Dans la plupart des cas, chaque table dispose d\u2019une cl\u00e9 primaire.  Les contraintes de domaines sont li\u00e9es aux colonnes des tables (attribut non nul, entier positif, valeurs comprises dans un intervalle\u2026)  b) Int\u00e9grit\u00e9 r\u00e9f\u00e9rentielle  Il s\u2019agit ici pour le SGBDR de v\u00e9rifier la coh\u00e9rence cl\u00e9 \u00e9trang\u00e8re/cl\u00e9 primaire.  La d\u00e9finition d\u2019une telle contrainte forcera le SGBDR \u00e0 faire les contr\u00f4les suivants :  o   Dans un champ cl\u00e9 \u00e9trang\u00e8re il est impossible de renseigner une valeur qui n\u2019existe pas dans la cl\u00e9 primaire (Le code gamme n\u00b0 4 ne peut \u00eatre affect\u00e9 \u00e0 un produit si la gamme n\u2019existe pas)  o   Impossible de supprimer un enregistrement de la table contenant la cl\u00e9 primaire s\u2019il existe des enregistrements li\u00e9s (Dans la table gamme, l\u2019enregistrement correspondant au code gamme n\u00b02 ne pourra \u00eatre supprim\u00e9 car il existe, dans la table produit, des enregistrements li\u00e9s.  o   Impossible de modifier une valeur de cl\u00e9 primaire dans la table primaire si cet enregistrement a des enregistrements li\u00e9s. </p>"},{"location":"2_SQL%20Complexe/sommaire/","title":"sommaire","text":""},{"location":"3_UML/sommaire/","title":"sommaire UML","text":"<p>Comp\u00e9tences</p> <p>Activit\u00e9 B2.1. Conception et d\u00e9veloppement d\u2019une solution applicative</p> <p>Analyse d\u2019un besoin exprim\u00e9 et de son contexte juridique Participation \u00e0 la conception de l\u2019architecture d\u2019une solution applicative Mod\u00e9lisation d\u2019une solution applicative</p> <p>Activit\u00e9 B2.3. Gestion des donn\u00e9es</p> <p>Conception ou adaptation d\u2019une base de donn\u00e9es</p> <p>Bibliographie</p> <ul> <li>Telecom Paris</li> <li>ENSAI Caen</li> <li>David Roumanet, SIO, Lyc\u00e9e Aristide BERGES Licence BY-NC-SA</li> <li>UML2 de l\u2019apprentissage \u00e0 la pratique de Laurent Audibert</li> <li>UML2 par la pratique de Pascal Roques</li> </ul> <ol> <li>Introduction \u00e0 UML</li> <li>Diagramme de classe</li> <li>Cas d'utilisation</li> <li>diagramme de s\u00e9quence</li> <li>diagrame d'\u00e9tat-transition</li> </ol>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.0_IntroUML/","title":"Introduction \u00e0 UML","text":""},{"location":"3_UML/3.1_diagrammeClasse/3.1.0_IntroUML/#activite-dintroduction","title":"Activit\u00e9 d'introduction","text":"<p>On souhaite faire la liste de c\u00e9l\u00e8bres acteurs. On d\u00e9sire conna\u00eetre diff\u00e9rentes caract\u00e9ristiques nom, pr\u00e9nom et nationalit\u00e9 des  acteurs. Pour pouvoir mettre \u00e0 jour (ex : ajouter ou supprimer un acteur) et manipuler facilement cette liste (ex : trier la liste par ordre alphab\u00e9tique, par nationalit\u00e9), on a cr\u00e9\u00e9 une table. </p> <p> Table ACTEUR </p> Num\u00e9roActeur NomActeur Pr\u00e9nomActeur Nationalit\u00e9Acteur 01 DEPARDIEU G\u00e9rard Fran\u00e7aise 02 ADJANI Isabelle Fran\u00e7aise 03 HANKS Tom Am\u00e9ricaine 04 PITT Brad Am\u00e9ricaine 05 PARADIS Vanessa Fran\u00e7aise 06 RENO Jean Fran\u00e7aise 07 CONNERY Sean Am\u00e9ricaine 08 GRANT Hugh Anglaise 09 REDFORD Robert Am\u00e9ricaine 10 DENEUVE Catherine Fran\u00e7aise <p>Question 1 : Mod\u00e9liser ces informations. </p> <p>On souhaiterait \u00e9galement savoir dans quels films ont jou\u00e9 ces acteurs. On ajoute une autre table FILM comme ci-dessous.</p> <p>  Table FILM </p> Num\u00e9roFilm TitreFilm Dur\u00e9eFilm 10 Cyrano de Bergerac 120 20 4 mariages, 1 enterrement 120 30 Rock 130 40 Forrest Gump 135 50 Seven 130 60 The Mask 98 70 Proposition Ind\u00e9cente 90 80 Les visiteurs 120 90 L\u00e9on 120 <p>Question 2 : Ajouter cette table \u00e0 votre mod\u00e9lisation. </p> <p>Question 3 : Lorsque l\u2019\u00e9l\u00e8ve essaye d\u2019utiliser ces deux tables dans un SGBD pour savoir dans quels films jouent les acteurs, il rencontre un probl\u00e8me. Lequel ?  </p> <p>Question 4 : Proposer un diagramme de classe coh\u00e9rent pour ce besoin </p> <p>Le contenu de la table JOUER est le suivant : </p> table JOUER <p>Table JOUER</p> Num\u00e9roActeur Num\u00e9roFilm 01 10 03 40 04 50 06 80 06 90 07 30 08 20 09 70"},{"location":"3_UML/3.1_diagrammeClasse/3.1.0_IntroUML/#1-notion-de-modelisation","title":"1. Notion de mod\u00e9lisation","text":""},{"location":"3_UML/3.1_diagrammeClasse/3.1.0_IntroUML/#11-pourquoi-modeliser","title":"1.1 Pourquoi mod\u00e9liser ?","text":"<p> Trouver un langage commun d\u2019un point de vue fonctionnel  Avoir un plan, une feuille de route avant de commencer \u00e0 coder  Augmenter la qualit\u00e9 du code et la maintenabilit\u00e9</p> <p>D\u00e9finition d'un mod\u00e8le</p> <p>Un mod\u00e8le peut \u00eatre d\u00e9fini comme \u00e9tant une image de la r\u00e9alit\u00e9. Toute r\u00e9alit\u00e9 complexe3 a besoin d\u2019\u00eatre repr\u00e9sent\u00e9e pour \u00eatre comprise et ma\u00eetris\u00e9e.Un mod\u00e8le peut \u00eatre d\u00e9fini comme \u00e9tant une image de la r\u00e9alit\u00e9. Toute r\u00e9alit\u00e9 complexe3 a besoin d\u2019\u00eatre repr\u00e9sent\u00e9e pour \u00eatre comprise et ma\u00eetris\u00e9e.</p>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.0_IntroUML/#12-qui-modelise","title":"1.2 Qui mod\u00e9lise ?","text":"<p>La MOA (Ma\u00eetrise d'ouvrage, le cot\u00e9 m\u00e9tier, fonctionnel du domaine d'activit\u00e9) exprime la syst\u00e8me d\u2019information \u00e0 l\u2019aide du cahier des charges. La MOE (Ma\u00eetrise d'oeuvre, le c\u00f4t\u00e9 projet, technique) mod\u00e9lise et transcrit le langage \u00e9crit en un langage pseudo-informatique facilement appr\u00e9hendable par tous.</p> <p>On est dans la premi\u00e8re phase du cycle en V, ou dans la phase de d\u00e9finition du backlog en agile.</p> <p>UML intervient \u00e0 ce niveau et propose un langage unifi\u00e9 pour exprimer les syst\u00e8mes d\u2019information.</p> <p> Attention : UML est un langage et non une m\u00e9thode au contraire de Merise.</p> <p> Merise est une m\u00e9thode projet, fran\u00e7aise. Tr\u00e8s utilis\u00e9e dans le monde de l'industrie et des projets informatiques. En perte de vitesse par rapport \u00e0 UML plus international.</p> Historique <p>UML, ou Unified Modeling Language, a \u00e9t\u00e9 d\u00e9velopp\u00e9 au d\u00e9but des ann\u00e9es 1990 par trois leaders de l'ing\u00e9nierie logicielle : Grady Booch, Ivar Jacobson, et James Rumbaugh. \u00c0 l'origine, ces experts utilisaient des m\u00e9thodes de mod\u00e9lisation diff\u00e9rentes, Booch travaillant sur la conception d'objets, Jacobson sur l'ing\u00e9nierie des syst\u00e8mes, et Rumbaugh sur la mod\u00e9lisation bas\u00e9e sur les objets.</p> <p>En 1994, ils ont uni leurs forces pour cr\u00e9er un langage de mod\u00e9lisation unifi\u00e9 qui pourrait combiner leurs approches respectives. Le r\u00e9sultat de cette collaboration a \u00e9t\u00e9 baptis\u00e9 Unified Modeling Language, et il a \u00e9t\u00e9 officiellement pr\u00e9sent\u00e9 en 1997 avec la version UML 1.0. Depuis lors, UML est devenu un standard de facto dans l'industrie du d\u00e9veloppement logiciel, soutenu par l'Object Management Group (OMG).</p> <p>\u00c0 travers les ann\u00e9es, UML a \u00e9volu\u00e9 avec des versions successives, int\u00e9grant de nouveaux concepts et diagrammes pour mieux r\u00e9pondre aux besoins croissants de l'ing\u00e9nierie logicielle. Aujourd'hui, UML demeure essentiel pour la conception, la visualisation, et la documentation des syst\u00e8mes logiciels complexes.</p> <p>historique g\u00e9n\u00e9r\u00e9 par openAI</p>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.0_IntroUML/#13-pourquoi-utiliser-uml-dans-le-developpement-logiciel","title":"1.3 Pourquoi utiliser UML dans le d\u00e9veloppement logiciel","text":"<p>L'utilisation d'UML dans le d\u00e9veloppement logiciel offre plusieurs avantages.</p> <p> Communication universelle: UML fournit un langage visuel standardis\u00e9 compr\u00e9hensible par tous. Cela facilite la communication et la compr\u00e9hension des concepts entre les membres d'une \u00e9quipe de d\u00e9veloppement et au-del\u00e0.  Visualisation des concepts : UML permet de repr\u00e9senter visuellement la structure, le comportement, et les interactions d'un syst\u00e8me logiciel. Les diagrammes UML fournissent une vue graphique intuitive des concepts abstraits, facilitant ainsi la compr\u00e9hension et la prise de d\u00e9cision.  Conception pr\u00e9liminaire : Avant de commencer la programmation, UML permet de concevoir et de mod\u00e9liser l'architecture d'un syst\u00e8me. Cela aide \u00e0 identifier les besoins, \u00e0 d\u00e9finir les structures et \u00e0 planifier les \u00e9tapes du d\u00e9veloppement avant de commencer l'impl\u00e9mentation.  Documentation : UML sert de documentation visuelle pour le code source. Les diagrammes UML peuvent \u00eatre utilis\u00e9s pour expliquer l'architecture et la logique du code, ce qui facilite la maintenance, la compr\u00e9hension et le d\u00e9bogage pour les d\u00e9veloppeurs actuels et futurs.  En r\u00e9sum\u00e9, l'utilisation d'UML dans le d\u00e9veloppement logiciel am\u00e9liore la communication, facilite la conception, offre une documentation visuelle, et contribue globalement \u00e0 des processus de d\u00e9veloppement plus efficaces et compr\u00e9hensibles.</p>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.0_IntroUML/#14-les-diagrammes-uml","title":"1.4 Les diagrammes UML","text":"<p>UML nous fournit donc des diagrammes pour repr\u00e9senter le logiciel \u00e0 d\u00e9velopper : son fonctionnement, sa mise en route, les actions susceptibles d\u2019\u00eatre effectu\u00e9es par le logiciel, etc. Il y a 14 types de diagrammes UML ayant une notation commune existant r\u00e9parti en 2 familles\u00a0:   Les aspects fonctionnels  Les aspects li\u00e9s \u00e0 l\u2019architecture</p> <p></p>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.0_IntroUML/#2-rappel-sur-les-concepts-objets","title":"2. Rappel sur les concepts Objets","text":"<p>En UML (Unified Modeling Language), le concept d'objet est fondamental et repose sur la programmation orient\u00e9e objet (POO). Un objet est une instance concr\u00e8te d'une classe, qui est une entit\u00e9 abstraite repr\u00e9sentant un concept ou une id\u00e9e. Les objets sont les composants de base de la mod\u00e9lisation UML et sont caract\u00e9ris\u00e9s par des propri\u00e9t\u00e9s et des comportements.  Propri\u00e9t\u00e9s (Attributs) : Les objets ont des propri\u00e9t\u00e9s qui d\u00e9crivent leurs caract\u00e9ristiques. Ces propri\u00e9t\u00e9s, \u00e9galement appel\u00e9es attributs, repr\u00e9sentent l'\u00e9tat interne de l'objet. Par exemple, dans une classe \"Voiture\", les propri\u00e9t\u00e9s pourraient inclure la marque, le mod\u00e8le, et la couleur.  Comportements (M\u00e9thodes) : Les objets ont des comportements qui d\u00e9finissent les actions qu'ils peuvent effectuer. Ces comportements sont d\u00e9finis par des m\u00e9thodes, qui repr\u00e9sentent les actions ou les op\u00e9rations que l'objet peut ex\u00e9cuter. Dans notre exemple de classe \"Voiture\", des m\u00e9thodes pourraient inclure \"d\u00e9marrer\" et \"arr\u00eater\".  Encapsulation: Les objets appliquent le principe d'encapsulation, ce qui signifie que les d\u00e9tails internes de l'objet ne sont pas directement accessibles depuis l'ext\u00e9rieur. Les attributs et les m\u00e9thodes sont encapsul\u00e9s \u00e0 l'int\u00e9rieur de la classe, et l'acc\u00e8s \u00e0 ces \u00e9l\u00e9ments se fait g\u00e9n\u00e9ralement par des m\u00e9thodes publiques.  Abstraction : L'abstraction est un autre concept cl\u00e9 li\u00e9 aux objets. Elle consiste \u00e0 repr\u00e9senter les caract\u00e9ristiques essentielles d'un objet tout en ignorant les d\u00e9tails non essentiels. Les classes servent de mod\u00e8les abstraits pour cr\u00e9er des objets concrets. </p> <p>r\u00e9sum\u00e9</p> <p>En r\u00e9sum\u00e9, en UML, un objet est une instance sp\u00e9cifique d'une classe qui combine des propri\u00e9t\u00e9s et des comportements. La programmation orient\u00e9e objet, \u00e0 la base de ce concept, favorise la mod\u00e9lisation r\u00e9aliste et la r\u00e9utilisation du code, am\u00e9liorant ainsi la clart\u00e9, la maintenance, et la flexibilit\u00e9 des syst\u00e8mes logiciels.</p>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.1_diagrammeDeClasse/","title":"Le diagramme de classe","text":"<p>Le diagramme de classe a pour but de repr\u00e9senter de fa\u00e7on structur\u00e9e les donn\u00e9es qui seront utilis\u00e9es par le syst\u00e8me d'information. Le diagramme de classe d\u00e9crit la s\u00e9mantique c\u2019est \u00e0 dire le sens attach\u00e9 \u00e0 ces donn\u00e9es et \u00e0 leurs rapports et non \u00e0 l\u2019utilisation qui peut en \u00eatre faite. Il offre une vue statique du syst\u00e8me en mettant l'accent sur les concepts de la programmation orient\u00e9e objet, tels que l'encapsulation, l'h\u00e9ritage, et l'association.  Voici une d\u00e9finition d\u00e9taill\u00e9e des \u00e9l\u00e9ments principaux d'un diagramme de classe :</p> <p>Classe : Une classe est une entit\u00e9 abstraite repr\u00e9sentant un concept ou un objet dans le syst\u00e8me. Elle regroupe des attributs (propri\u00e9t\u00e9s) et des m\u00e9thodes (comportements) li\u00e9s \u00e0 cette entit\u00e9.  Attribut : Les attributs sont les propri\u00e9t\u00e9s de la classe, repr\u00e9sentant l'\u00e9tat interne de l'objet. Chaque attribut a un type de donn\u00e9es qui d\u00e9finit le genre d'information qu'il peut stocker (par exemple, une cha\u00eene de caract\u00e8res, un entier).  M\u00e9thode : Les m\u00e9thodes sont les op\u00e9rations ou les actions que la classe peut effectuer. Elles d\u00e9finissent le comportement de la classe et sont associ\u00e9es \u00e0 des algorithmes ou des s\u00e9quences d'instructions.</p>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.1_diagrammeDeClasse/#1-le-recueil-de-donnees","title":"1. Le recueil de donn\u00e9es","text":"<p>Voil\u00e0 plusieurs phrases qui d\u00e9crivent une seule et m\u00eame personne, prononc\u00e9es par des personnes diff\u00e9rentes.</p> <p>\u00ab Odile Martin est une personne convenable. Et je ne dis pas \u00e7a parce c\u2019est une cliente qui m\u2019en prend pour 100F toutes les semaines ! \u00bb Le boulanger  \u00ab MARTIN Odile, habitant 6 rue des pr\u00e9s, Saint Amour (Jura), n\u00e9e le 13/02/73 \u00e0 B\u00e9ziers (H\u00e9rault) \u2026 \u00bb Un inspecteur de police judiciaire  \u00ab Odile Martin, voil\u00e0 une personne qui n\u2019a jamais commis aucun p\u00e9ch\u00e9 mortel, qui a fait preuve de beaucoup de g\u00e9n\u00e9rosit\u00e9. Elle ira au paradis \u00bb Saint Pierre  Diff\u00e9rents interlocuteurs, diff\u00e9rents points de vue. Lequel est le plus pertinent ?  \u00c7a d\u00e9pend du domaine \u00e9tudi\u00e9. Mais on ne recense que les informations objectives, formelles en fonction de son BESOIN. Quand on analyse les donn\u00e9es sur un objet (abstrait ou concret) du r\u00e9el, il est n\u00e9cessaire de faire le tri entre ce qui est n\u00e9cessaire pour le syst\u00e8me d\u2019information et ce qui ne l\u2019est pas.</p> <p>Odile sera repr\u00e9sent\u00e9e par au moins ces informations :</p> Attribut Nom Pr\u00e9nom Num\u00e9ro de la voie Nature de la voie Nom de la voie Commune de r\u00e9sidence D\u00e9partement de r\u00e9sidence Jour de naissance Mois de naissance Ann\u00e9e de naissance Commune de naissance D\u00e9partement de naissance <p>Peut-on d\u00e9composer encore ? Par exemple la commune de r\u00e9sidence est compos\u00e9e de 2 mots, de m\u00eame que le nom de la voie \u2026 va-t-on les d\u00e9composer ? Non, ces mots repr\u00e9sentent ensemble une information, ne veulent rien dire \u00e0 eux seuls.   C'est la notion de Donn\u00e9es ELEMENTAIRE  Mais n\u2019avons-nous pas trop d\u00e9compos\u00e9 ?  Il existe par exemple des liens entre les informations 3, 4 et 5 qui repr\u00e9sentent l\u2019adresse d\u2019Odile, entre les informations 8 et 9 qui repr\u00e9sentent sa date de naissance\u2026 Ces informations n'ont de SENS qu'une fois assembl\u00e9es. On va alors regrouper ensemble ces informations reli\u00e9es.</p> <p></p> <p> on peut dire qu\u2019on a cr\u00e9\u00e9 une CLASSE (un ensemble) PERSONNE dont Odile est une occurrence (ou instance). Les donn\u00e9es de base sont appel\u00e9es PROPRIETES ou ATTRIBUTS.</p>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.1_diagrammeDeClasse/#2-definitions","title":"2. D\u00e9finitions","text":""},{"location":"3_UML/3.1_diagrammeClasse/3.1.1_diagrammeDeClasse/#21-definitions-dune-classe","title":"2.1 D\u00e9finitions d'une classe","text":"<p>Une Classe ou Entit\u00e9 repr\u00e9sente un objet du SI (acteur, document, concept, \u2026), ou plus exactement un ensemble d\u2019objets ayant les m\u00eames caract\u00e9ristiques.</p> <p>Dans une Classe, on met les informations n\u00e9cessaires et suffisantes pour caract\u00e9riser cette entit\u00e9. Ces informations sont appel\u00e9es propri\u00e9t\u00e9s ou attributs. Les propri\u00e9t\u00e9s sont collect\u00e9es lors de l\u2019\u00e9tablissement du dictionnaire des donn\u00e9es. Les propri\u00e9t\u00e9s prennent des valeurs pour chaque occurrence d\u2019une entit\u00e9. Chaque propri\u00e9t\u00e9 est typ\u00e9e.</p> <p>Une propri\u00e9t\u00e9 particuli\u00e8re, appel\u00e9e identifiant, permet de distinguer sans ambigu\u00eft\u00e9 toutes les occurrences de l\u2019entit\u00e9. L\u2019identifiant est suivi de l\u2019indication <code>&lt;&lt;id&gt;&gt;</code>. L\u2019identifiant est une propri\u00e9t\u00e9 qui ne peut pas changer au cours du temps pour une occurrence.</p> <p></p>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.1_diagrammeDeClasse/#22-les-methodes","title":"2.2 Les m\u00e9thodes","text":"<p>Une op\u00e9ration est la mod\u00e9lisation d\u2019un service qui peut \u00eatre sollicit\u00e9 au titre de n\u2019importe quel objet d\u2019une m\u00eame classe pour d\u00e9clencher un comportement. exemple : lancer() : Integer afficher() {abstract}  SetNombreFace(in nbFace : Integer =6)  afficher(:Integer)  afficher(:String) </p> <p>Il existe des m\u00e9thodes particuli\u00e8res, utilis\u00e9 en POO : les Constructeurs et desctructeurs : st\u00e9r\u00e9otype <code>\u00ab create \u00bb</code> ou <code>\u00ab destroy \u00bb</code></p> <p>Note</p> <p>La signature d'une m\u00e9thode contient les param\u00e8tres d'entr\u00e9e et leurs types, ainsi que le param\u00e8tre de retour si besoin <code>nomMethode (arg1 : type = val_defaut, arg2 : type = val_defaut,\u2026) : type_retour</code></p> <p></p>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.1_diagrammeDeClasse/#23-lencapsulation","title":"2.3 L\u2019encapsulation","text":"<p>L\u2019encapsulation consiste \u00e0 masquer les d\u00e9tails d\u2019impl\u00e9mentation d\u2019un conteneur, comme une classe, en d\u00e9finissant les services accessibles (offert) aux utilisateurs.   Ces services constituent l\u2019interface de la classe (sa vue externe). L\u2019interface est param\u00e9tr\u00e9e en d\u00e9finissant un niveau de visibilit\u00e9 pour chacun des \u00e9l\u00e9ments de la classe. </p> <p>:collision: L\u2019encapsulation s\u2019applique \u00e0 la fois aux attributs et aux m\u00e9thodes.</p> <p>Chaque propri\u00e9t\u00e9 poss\u00e8de un des niveaux suivants :</p> niveau dd'acc\u00e8s symbole signification Public + tout \u00e9l\u00e9ment qui peut voir la classe peut voir l\u2019\u00e9l\u00e9ment Protected # Seul un \u00e9l\u00e9ment situ\u00e9 dans le conteneur ou un de ses descendants peut voir l\u2019\u00e9l\u00e9ment Private - Seul un \u00e9l\u00e9ment situ\u00e9 dans le conteneur peut voir l\u2019\u00e9l\u00e9ment <p>Dans une bonne pratique du code, les attributs sont tous en priv\u00e9. Et on dispose de m\u00e9thodes getters/setters pour manipuler les attributs.</p> <p></p>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.1_diagrammeDeClasse/#24-attributs-particuliers","title":"2.4 Attributs particuliers","text":"<p>L'Attribut d\u00e9riv\u00e9  <code>/</code> : </p> <p>Attribut d\u00e9riv\u00e9 = attribut d\u00e9pendant d\u2019autres attributs. (exemple : \u00e2ge dans une classe personne, d\u00e9pend de la date de naissance et de la date du jour).</p> <p></p> <p>Dans les diagrammes de classes, il est important que les informations ne soient pas redondantes. Une forme de redondance est un attribut d\u00e9riv\u00e9 dont la valeur se calcule \u00e0 partir des valeurs d\u2019un ou plusieurs autres attributs. Dans ce cas, l\u2019attribut d\u00e9riv\u00e9 doit \u00eatre signal\u00e9 en pr\u00e9fixant le nom de l\u2019attribut avec une barre oblique <code>/</code> afin d\u2019indiquer au lecteur que cet attribut est redondant. C\u2019est une indication importante pour ceux qui implantent l\u2019application car les attributs d\u00e9riv\u00e9s demandent un traitement sp\u00e9cial : leur valeur change \u00e0 chaque fois que la valeur des attributs \u00e0 partir desquels ils sont calcul\u00e9s change. Dans notre exemple, le traitement est m\u00eame un peu plus complexe car la valeur de l\u2019attribut \u00ab \u00e2ge \u00bb \u00e9volue aussi en fonction d\u2019un param\u00e8tre ind\u00e9pendant de l\u2019application : la date du jour. </p> <p>Attributs de classe :</p> <p>Attribut commun \u00e0 toutes les instances de classe. II n\u2019existe qu\u2019une seule instanciation de cet attribut pour toutes les occurrences de la classe. C\u2019est l\u2019\u00e9quivalent du <code>static</code> en java.  Les instances ont acc\u00e8s \u00e0 cet attribut mais n\u2019en poss\u00e8de pas une copie. Il est partag\u00e9 par l\u2019ensemble des instances. Les attributs de classe sont soulign\u00e9s. Exemple : pour une classe personne, un attribut recensement : integer. Il s\u2019agirait d\u2019un compteur, commun \u00e0 toutes les classes personne permettant de recenser toutes les personnes du syst\u00e8me d\u2019information.</p> <p></p>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.1_diagrammeDeClasse/#25-exercice-dapplication","title":"2.5 Exercice d'application","text":"<p>Exercices</p> Enonc\u00e9Correction <p> Une personne est caract\u00e9ris\u00e9e par son nom, son pr\u00e9nom, son sexe et son \u00e2ge. Les objets de classe Personne doivent pouvoir calculer leurs revenus et leurs charges. Les attributs de la classe sont priv\u00e9s. Le nom, le pr\u00e9nom ainsi que l'\u00e2ge de la personne doivent \u00eatre accessibles par des op\u00e9rations publiques. Question : Donnez une repr\u00e9sentation UML de la classe Personne, en remplissant tous les compartiments ad\u00e9quats.  Deux types de revenus sont envisag\u00e9s : d'une part le salaire et d'autre part toutes les autres sources de revenus. Les deux revenus sont repr\u00e9sent\u00e9s par des nombres r\u00e9els (float). Pour calculer les charges globales, on applique un coefficient fixe de 20% sur les salaires et un coefficient de 15% sur les autres revenus. Question : Enrichissez la repr\u00e9sentation pr\u00e9c\u00e9dente pour prendre en compte ces nouveaux \u00e9l\u00e9ments.  Un objet de la classe Personne peut \u00eatre cr\u00e9\u00e9 \u00e0 partir du nom et de la date de naissance. Il est possible de changer le pr\u00e9nom  d'une personne. Par ailleurs, le calcul des charges ne se fait pas de la m\u00eame mani\u00e8re lorsque la personne d\u00e9c\u00e8de. Question : Enrichissez encore la repr\u00e9sentation pr\u00e9c\u00e9dente pour prendre en compte ces nouveaux \u00e9l\u00e9ments.</p> <p> </p>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.1_diagrammeDeClasse/#3-faire-du-lien","title":"3. Faire du lien","text":""},{"location":"3_UML/3.1_diagrammeClasse/3.1.1_diagrammeDeClasse/#31-les-associations","title":"3.1 Les associations","text":""},{"location":"3_UML/3.1_diagrammeClasse/3.1.1_diagrammeDeClasse/#311-definition-association","title":"3.1.1 D\u00e9finition Association","text":"<p> Une association repr\u00e9sente une relation s\u00e9mantique durable entre deux classes.</p> <p>Exemple : une personne poss\u00e8de des comptes en banque. La relation POSSEDE est une association entre les classes Personne et compte.</p> <p></p> <p> Attention : m\u00eame si le verbe qui nomme une association semble privil\u00e9gier un sens de lecture, une association entre classe est par d\u00e9faut bidirectionnelle. Donc implicitement, l\u2019exemple pr\u00e9c\u00e9dent inclut le fait qu\u2019un compte est poss\u00e9d\u00e9 par une ou deux personnes. Le nom port\u00e9 par l\u2019association permet de pr\u00e9ciser le r\u00f4le de l\u2019association entre deux classes.   La notion de R\u00f4le : elle permet de nommer l'extr\u00e9mit\u00e9 d'une association et permet d'acc\u00e9der aux objets li\u00e9s par l'association \u00e0 un objet donn\u00e9. </p> <p>En conception d\u00e9taill\u00e9e, Chaque classes sera enrichi des objets li\u00e9s par la relation.</p> <p></p> <p>Mais  en Mod\u00e9ilsation, on ne fera PAS appar\u00eetre ses attributs si il existe une association entre les deux classes.</p> <p></p> <p>Il existe quelques notations qui viennent enrichir le langage UML sur les associations.</p>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.1_diagrammeDeClasse/#3110-exercice-dapplication","title":"3.1.1.0 Exercice d'application","text":"<p>Exercice</p> EnonceCorrection <p>Dessiner les diagrammes d\u2019objets et de classes correspondant aux situations suivantes :  1.  La France est frontali\u00e8re de l\u2019Espagne. L\u2019Alg\u00e9rie est frontali\u00e8re du Maroc. 2.  Tout \u00e9crivain a \u00e9crit au moins une \u0153uvre 3.  Les personnes peuvent \u00eatre associ\u00e9s \u00e0 des universit\u00e9s en tant qu\u2019\u00e9tudiants aussi bien qu\u2019en tant que professeurs. 4.  Un client demande une r\u00e9paration. Une r\u00e9paration est effectu\u00e9e par un m\u00e9canicien. Elle n\u00e9cessite des comp\u00e9tences. Un m\u00e9canicien poss\u00e8de des comp\u00e9tences. 5.  Un rectangle a deux sommets qui sont des points. On construit un rectangle \u00e0 partir de coordonn\u00e9es de deux points. Il est possible de calculer sa surface et son p\u00e9rim\u00e8tre, ou encore le translater.</p> <p> </p>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.1_diagrammeDeClasse/#312-association-reflexive","title":"3.1.2 Association r\u00e9flexive","text":"<p> Une assocation peut relier une classe vers elle-m\u00eame.</p> <p></p>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.1_diagrammeDeClasse/#313-association-multiple","title":"3.1.3 Association multiple","text":"<p> On peut avoir des classes mises en relation pour deux r\u00f4les diff\u00e9rents.</p> <p> </p>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.1_diagrammeDeClasse/#314-navigabilite","title":"3.1.4  Navigabilit\u00e9","text":"<p>Il est possible de r\u00e9duire la port\u00e9e en la rendant unidirectionnelle. En g\u00e9n\u00e9ral, ce choix se fait dans la phase de conception. Ici, une personne conna\u00eet son vote \u00e0 un scutin, mais on ne pourra pas associer un vote \u00e0 une personne.</p> <p></p>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.1_diagrammeDeClasse/#315-classe-dassociation","title":"3.1.5 Classe d'Association","text":"<p>La classe d'association permet de param\u00e9trer une association entre deux classes par une classe. Elle est notamment utilis\u00e9 lorsqu'une association est porteuse d'attributs. Les instances de ces attributs n'ont d'existence que si la relation existe entre deux instances.  Les attributs port\u00e9s ne peuvent pas exister dans l'une ou l'autre des classes, puisque qu'ils d\u00e9pendent de la relation.</p> <p> </p>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.1_diagrammeDeClasse/#316-les-contraintes-sur-associations","title":"3.1.6 Les contraintes sur associations","text":"<p>Les contraintes sont des expressions qui pr\u00e9cisent le r\u00f4le ou la port\u00e9e d'un \u00e9l\u00e9ment de mod\u00e9lisation (elles permettent d'\u00e9tendre ou pr\u00e9ciser sa s\u00e9mantique)</p> <p> Contrainte {ordonn\u00e9e} : une relation d\u2019ordre d\u00e9crit les objets</p> <p> Contrainte {sous-ensemble} : une collection est incluse dans une autre collection</p> <p> Contrainte {ou-exclusif} : pour un objet donn\u00e9, une seule association est valide</p> <p></p>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.1_diagrammeDeClasse/#32-les-cardinalites","title":"3.2 Les cardinalit\u00e9s","text":"<p>La cardinalit\u00e9 situ\u00e9e \u00e0 une extr\u00e9mit\u00e9 d\u2019une association indique \u00e0 combien d\u2019instances de la classe situ\u00e9e \u00e0 cette extr\u00e9mit\u00e9, une instance de la classe situ\u00e9e \u00e0 l\u2019autre extr\u00e9mit\u00e9 est li\u00e9e.</p> <p>Il est possible de sp\u00e9cifier \u00e0 une extr\u00e9mit\u00e9 d\u2019une association la cardinalit\u00e9 minimale et la cardinalit\u00e9 maximale pour indiquer un intervalle de valeurs auquel doit toujours appartenir la cardinalit\u00e9.</p> <p>Autrement dit : La multiplicit\u00e9 sur la classe contraint le nombre d\u2019objet de la classe cible pouvant \u00eatre associ\u00e9s \u00e0 un objet donn\u00e9 de la classe source.</p> <p>Sens de lecture des cardinalit\u00e9s :</p>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.1_diagrammeDeClasse/#4-developpement-du-langage","title":"4 D\u00e9veloppement du langage","text":""},{"location":"3_UML/3.1_diagrammeClasse/3.1.1_diagrammeDeClasse/#41-generalisation-et-heritage","title":"4.1 G\u00e9n\u00e9ralisation et h\u00e9ritage","text":"<p>Le principe est de regrouper les classes partageant les m\u00eames attributs et op\u00e9rations et de les organiser en arborescence. On parle de classification selon 2 approches : \uf075   La g\u00e9n\u00e9ralisation : abstraction d\u2019un ensemble de classe en super classe. \uf075   La sp\u00e9cialisation : affinement d\u2019une classe en sous-classe</p>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.1_diagrammeDeClasse/#42-agregation","title":"4.2 Agr\u00e9gation","text":"<p>Forme d\u2019association qui sp\u00e9cifie la relation entre un ensemble ou \u00ab compos\u00e9 \u00bb et sa partie ou \u00ab composant \u00bb.  \uf075   Repr\u00e9sente une relation de type \"ensemble / \u00e9l\u00e9ment\" \uf075   A un m\u00eame moment, une instance d'\u00e9l\u00e9ment agr\u00e9g\u00e9 peut \u00eatre li\u00e9e \u00e0 plusieurs instances d'autres classes : l'\u00e9l\u00e9ment agr\u00e9g\u00e9 peut \u00eatre partag\u00e9 \uf075   Une instance \u00ab ensemble \u00bb peut exister sans \u00e9l\u00e9ment (et inversement) : Cycles de vies ind\u00e9pendants</p> <p>Une agr\u00e9gation peut notamment (mais pas n\u00e9cessairement) exprimer :  \uf075   qu'une classe (un \"\u00e9l\u00e9ment\") fait partie d'une autre (\"l\u2018ensemble\"),  \uf075   qu'un changement d'\u00e9tat d'une classe, entra\u00eene un changement d'\u00e9tat d'une autre,  \uf075   qu'une action sur une classe, entra\u00eene une action sur une autre \uf075   La partie (composant) peut exister sans l\u2019agr\u00e9gat (compos\u00e9)  \uf075   Si le compos\u00e9 (agr\u00e9gat) dispara\u00eet, le composant (partie) peut continuer d\u2019exister</p>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.1_diagrammeDeClasse/#43-composition","title":"4.3 Composition","text":"<p>C\u2019est un cas particulier d\u2019agr\u00e9gation : contenance physique. Il repr\u00e9sente une relation de type \"compos\u00e9 / composant\".  \uf075   Les cycles de vies des composants et du compos\u00e9 sont li\u00e9s : si le compos\u00e9 est d\u00e9truit (ou copi\u00e9), ses composants le sont aussi \uf075   A un m\u00eame moment, une instance de composant ne peut \u00eatre li\u00e9e qu'\u00e0 un seul compos\u00e9 \uf075   La partie (composant) n\u2019existe pas sans l\u2019agr\u00e9gat (compos\u00e9)  \uf075   Si le compos\u00e9 (agr\u00e9gat) dispara\u00eet le composant (partie) disparait aussi </p>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.1_diagrammeDeClasse/#44-multiplicites-des-agregations-et-des-compositions","title":"4.4 Multiplicit\u00e9s des agr\u00e9gations et des compositions","text":"<p>\uf075   Une agr\u00e9gation peut avoir N maxi du c\u00f4t\u00e9 de la classe agr\u00e9gat  \uf075   car l\u2019\u00e9l\u00e9ment agr\u00e9geant peur servir (en m\u00eame temps ou successivement) \u00e0 plusieurs agr\u00e9gats  \uf075   Une composition ne peut avoir que 1..1 du c\u00f4t\u00e9 de la classe compos\u00e9e  \uf075   car le composant, ne pouvant exister ind\u00e9pendamment du compos\u00e9, est obligatoirement li\u00e9 \u00e0 un seul </p> <p>Exercices</p> Enonc\u00e9Correction <ol> <li>Un r\u00e9pertoire contient des fichiers.</li> <li>Une pi\u00e8ce contient des murs.</li> <li>Les modems et les claviers sont des p\u00e9riph\u00e9riques d\u2019entr\u00e9e/sortie.</li> <li>Une transaction boursi\u00e8re est un achat ou une vente.</li> <li>Un compte bancaire peut appartenir \u00e0 une personne physique ou morale.</li> <li>Deux personnes peuvent \u00eatre mari\u00e9es.</li> </ol> <p>D\u00e9terminez la relation statique appropri\u00e9e (g\u00e9n\u00e9ralisation, composition, agr\u00e9gation ou association) dans chaque phrase de l\u2019\u00e9nonc\u00e9 pr\u00e9c\u00e9dent. Dessinez le diagramme de classes correspondant. N\u2019h\u00e9sitez pas \u00e0 proposer diff\u00e9rentes solutions pour chaque phrase.</p>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.1_diagrammeDeClasse/#5-regles-de-base-pour-la-construction-dun-diagramme-de-classe","title":"5. R\u00e8gles de base pour la construction d\u2019un diagramme de classe","text":""},{"location":"3_UML/3.1_diagrammeClasse/3.1.1_diagrammeDeClasse/#51-regles-concernant-les-proprietes","title":"5.1 R\u00e8gles concernant les propri\u00e9t\u00e9s","text":"<p>1) Pour qu\u2019il n\u2019y ait pas d\u2019ambigu\u00eft\u00e9 possible, une propri\u00e9t\u00e9 ne peut pas appara\u00eetre plusieurs fois dans un diagramme de classe. Autrement dit, toutes les propri\u00e9t\u00e9s doivent \u00eatre diff\u00e9rentes les unes des autres.</p> <p>Exemple : Une propri\u00e9t\u00e9 Date ne peut pas appara\u00eetre simultan\u00e9ment dans une classe COMMANDE et une classe  FACTURE. Si c\u2019\u00e9tait le cas, il faudrait remplacer Date par Date_commande et Date_facture par exemple.</p> <p>2) Toute propri\u00e9t\u00e9 ne doit avoir \u00e0 un moment donn\u00e9 qu\u2019une seule valeur pour une occurrence. Par cons\u00e9quent, un nom de propri\u00e9t\u00e9 doit toujours \u00eatre au singulier.</p> <p>Exemple : Dans la propri\u00e9t\u00e9 note d\u2019une entit\u00e9 ELEVE, on ne peut avoir qu\u2019une seule note. Si on veut la note de plusieurs mati\u00e8res, il faut mettre autant de propri\u00e9t\u00e9s qu\u2019il y a de mati\u00e8res, par exemple noteANGL, noteEDM, noteMATH, etc.</p>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.1_diagrammeDeClasse/#52-regles-concernant-les-classes","title":"5.2 R\u00e8gles concernant les classes","text":"<p>1) Toute classe doit comporter un identifiant qui permet de distinguer entre elles toutes les occurrences d\u2019une m\u00eame entit\u00e9. L\u2019identifiant est plac\u00e9 en t\u00eate des propri\u00e9t\u00e9s et il est suivi de &lt;&gt;. <p>2) Pour chaque occurrence d\u2019une classe, il ne doit y avoir qu\u2019une seule valeur pour chacune des propri\u00e9t\u00e9s \u00e0 un instant donn\u00e9. Cette valeur peut changer au cours du temps, mais \u00e0 un instant donn\u00e9, il n\u2019y en a qu\u2019une seule.</p> <p>3) Le nombre d\u2019attributs et de m\u00e9thodes est variable selon chaque classe. Toutefois, un nombre \u00e9lev\u00e9 d\u2019attributs et/ou de m\u00e9thodes est d\u00e9conseill\u00e9. Il ne refl\u00e8te pas, en g\u00e9n\u00e9ral, une bonne conception de la classe.</p>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.1_diagrammeDeClasse/#53-regles-concernant-les-cardinalites","title":"5.3 R\u00e8gles concernant les cardinalit\u00e9s","text":"<p>1) Une cardinalit\u00e9 ne doit pas \u00eatre invent\u00e9 mais d\u00e9pend du contexte. En l\u2019absence de sp\u00e9cification explicite, les cardinalit\u00e9s minimales et maximales valent 1. 2) Les cardinalit\u00e9s 1-1 sont extr\u00eamement rare. Une relation aussi forte doit poser la question de l\u2019existence des 2 classes.</p>"},{"location":"3_UML/3.1_diagrammeClasse/3.1.3_Methodologie/","title":"Je construis un Diagramme de Classe","text":"<p>Etape 1 : Lire le sujet et souligner les mots-cl\u00e9s </p> <p>Etape 2 : Etablir le dictionnaire des donn\u00e9es. C\u2019est-\u00e0-dire faire la liste de toutes les donn\u00e9es dont on pourrait avoir besoin pour g\u00e9rer ce syst\u00e8me d\u2019informations.  </p> <p>Etape 3 : Trier les donn\u00e9es. C\u2019est-\u00e0-dire \u00e9liminer les donn\u00e9es dont on n\u2019a pas besoin.   Enlever les donn\u00e9es en double  Enlever les donn\u00e9es calcul\u00e9es  Renommer les donn\u00e9es portant le m\u00eame nom mais repr\u00e9sentant des donn\u00e9es diff\u00e9rentes (exemple : D\u00e9partement de r\u00e9sidence et d\u00e9partement de naissance).  Dans un diagramme, deux donn\u00e9es ne peuvent pas porter le m\u00eame nom. </p> <p>Etape 4 : Regrouper les donn\u00e9es par ensemble s\u00e9mantique C\u2019est-\u00e0-dire parlant du m\u00eame objet.  ENTITE </p> <p>Etape 5 : D\u00e9terminer un identifiant pour chaque entit\u00e9</p> <p>Etape 6 : Cr\u00e9er les liens  entre les entit\u00e9s et leur donner un nom  RELATION  Attention : On utilisera des verbes pour nommer les associations. </p> <p>Etape 7 : relire le sujet pour v\u00e9rifier les donn\u00e9es et extraire les r\u00e8gles de gestion </p> <p>Etape 8 : Positionner les cardinalit\u00e9s.  CARDINALITE Les cardinalit\u00e9s doivent \u00eatre pos\u00e9es en fonction des r\u00e8gles de gestion du syst\u00e8me que l\u2019on \u00e9tudie.</p> <p></p>"},{"location":"3_UML/3.1_diagrammeClasse/exercice/","title":"Exercices","text":""},{"location":"3_UML/3.1_diagrammeClasse/exercice/#exercice-2","title":"Exercice 2","text":"<p>\uf075   Propri\u00e9t\u00e9s d'une classe Une personne est caract\u00e9ris\u00e9e par son nom, son pr\u00e9nom, son sexe et son \u00e2ge. Les objets de classe Personne doivent pouvoir calculer leurs revenus et leurs charges. Les attributs de la classe sont priv\u00e9s ; le nom, le pr\u00e9nom ainsi que l'\u00e2ge de la personne doivent \u00eatre accessibles par des op\u00e9rations publiques. \uf075   Question : Donnez une repr\u00e9sentation UML de la classe Personne, en remplissant tous les compartiments ad\u00e9quats. Deux types de revenus sont envisag\u00e9s : d'une part le salaire et d'autre part toutes les autres sources de revenus. Les deux revenus sont repr\u00e9sent\u00e9s par des nombres r\u00e9els (float). Pour calculer les charges globales, on applique un coefficient fixe de 20% sur les salaires et un coefficient de 15% sur les autres revenus. \uf075   Question : Enrichissez la repr\u00e9sentation pr\u00e9c\u00e9dente pour prendre en compte ces nouveaux \u00e9l\u00e9ments. \uf075   Un objet de la classe Personne peut \u00eatre cr\u00e9\u00e9 \u00e0 partir du nom et de la date de naissance. Il est possible de changer le pr\u00e9nom d'une personne. Par ailleurs, le calcul des charges ne se fait pas de la m\u00eame mani\u00e8re lorsque la personne d\u00e9c\u00e8de. \uf075   Question : Enrichissez encore la repr\u00e9sentation pr\u00e9c\u00e9dente pour prendre en compte ces nouveaux \u00e9l\u00e9ments.</p>"},{"location":"3_UML/3.1_diagrammeClasse/exercice/#exercice-3","title":"Exercice 3 :","text":"<p>Dessiner les diagrammes d\u2019objets et de classes correspondant aux situations suivantes :  1.  La France est frontali\u00e8re de l\u2019Espagne. L\u2019Alg\u00e9rie est frontali\u00e8re du Maroc. 2.  Tout \u00e9crivain a \u00e9crit au moins une \u0153uvre 3.  Les personnes peuvent \u00eatre associ\u00e9s \u00e0 des universit\u00e9s en tant qu\u2019\u00e9tudiants aussi bien qu\u2019en tant que professeurs. 4.  Un client demande une r\u00e9paration. Une r\u00e9paration est effectu\u00e9e par un m\u00e9canicien. Elle n\u00e9cessite des comp\u00e9tences. Un m\u00e9canicien poss\u00e8de des comp\u00e9tences. 5.  Un rectangle a deux sommets qui sont des points. On construit un rectangle \u00e0 partir de coordonn\u00e9es de deux points. Il est possible de calculer sa surface et son p\u00e9rim\u00e8tre, ou encore le translater. \u2003</p>"},{"location":"3_UML/3.1_diagrammeClasse/exercice/#exercice-4-mariage-ou-pacs","title":"Exercice 4 : Mariage ou PACS","text":"<p>Issu du livre : UML2 de l\u2019apprentissage \u00e0 la pratique de Laurent Audibert</p> <ol> <li>Deux personnes peuvent \u00eatre mari\u00e9es. Deux personnes mari\u00e9es sont de sexes oppos\u00e9s. Proposer un diagramme de classes correspondant comportant une association r\u00e9flexive.</li> <li>M\u00eame question que la pr\u00e9c\u00e9dente, mais en utilisant la relation de g\u00e9n\u00e9ralisation plut\u00f4t qu\u2019une association r\u00e9flexive.</li> <li>Deux personnes peuvent \u00eatre mari\u00e9es ou pacs\u00e9es. Modifier le mod\u00e8le de la question pr\u00e9c\u00e9dente en cons\u00e9quence.</li> <li>Un Pacs est caract\u00e9ris\u00e9 par une date et un lieu. Un mariage est caract\u00e9ris\u00e9 par une date, un lieu et un contrat. Modifier le mod\u00e8le de la question pr\u00e9c\u00e9dente en cons\u00e9quence.</li> </ol>"},{"location":"3_UML/3.1_diagrammeClasse/exercice/#exercice-5-systeme-de-reservation-de-vols","title":"Exercice 5 : Syst\u00e8me de r\u00e9servation de vols","text":"<p>Issu du livre : UML2 par la pratique de Pascal Roques</p> <p>Cette \u00e9tude de cas concerne un syst\u00e8me simplifi\u00e9 de r\u00e9servation de vols pour une agence de voyages. Les interviews des experts m\u00e9tier auxquelles on a proc\u00e9d\u00e9 ont permis de r\u00e9sumer leur connaissance du domaine sous la forme des phrases suivantes : 1. Des compagnies a\u00e9riennes proposent diff\u00e9rents vols. 2. Un vol est ouvert \u00e0 la r\u00e9servation et referm\u00e9 sur ordre de la compagnie. 3. Un client peut r\u00e9server un ou plusieurs vols, pour des passagers diff\u00e9rents. 4. Une r\u00e9servation concerne un seul vol et un seul passager. 5. Une r\u00e9servation peut \u00eatre annul\u00e9e ou confirm\u00e9e. 6. Un vol a un a\u00e9roport de d\u00e9part et un a\u00e9roport d\u2019arriv\u00e9e. 7. Un vol a un jour et une heure de d\u00e9part, et un jour et une heure d\u2019arriv\u00e9e. 8. Un vol peut comporter des escales dans des a\u00e9roports.</p>"},{"location":"4_Laravel/sommaire/","title":"Laravel","text":"<ol> <li>Installation</li> <li>Cr\u00e9ation Projet ToDo</li> </ol>"},{"location":"4_Laravel/4.1_installation/cours/","title":"Cours","text":"<p>Cr\u00e9dit</p> <p>TP d\u00e9couverte D\u2019apr\u00e8s un travail de Valentin Brousseau</p> <p>Ressources</p> <ul> <li>Cours Valentin Brosseau</li> <li>Sillo</li> <li>OpenclassRoom</li> <li>c4software</li> <li>phptherightway</li> <li>Livre : Laravel par Rapha\u00ebl Huchet aux \u00e9ditions ENI</li> </ul>"},{"location":"4_Laravel/4.1_installation/cours/#installation-composer","title":"Installation Composer","text":"<p>R\u00e9cup\u00e9rer l\u2019ex\u00e9cutable de composer et l\u2019ex\u00e9cuter.  L\u2019installateur vous demandera o\u00f9 se trouve php.exe (en g\u00e9n\u00e9ral : <code>C:\\wamp\\bin\\php\\phpX.X.X</code>). Cela installe Composer et met \u00e0 jour le PATH de fa\u00e7on \u00e0 ce que l'on puisse taper la commande composer en ligne de commande depuis n'importe quel r\u00e9pertoire.</p> erreur opensssl <p>Si erreur \"The openssl extension is missing which means that secure https transfer are impossible\" activer la ligne extension=php_openssl.dll  en visualisant les extensions PHP de votre WAMP.</p> <p>Composer a besoin d'un fichier <code>composer.json</code> associ\u00e9. Ce fichier contient les instructions pour Composer : les d\u00e9pendances, les classes \u00e0 charger automatiquement... Voici un extrait de ce fichier pour Laravel :</p> <p>PHP<pre><code>{\n    \"name\": \"laravel/laravel\",\n    \"description\": \"The Laravel Framework.\",\n    \"keywords\": [\"framework\", \"laravel\"],\n    \"license\": \"MIT\",\n    \"type\": \"project\",\n    \"require\": {\n        \"php\": \"&gt;=5.5.9\",\n        \"laravel/framework\": \"5.2.*\"\n    },\n    ...\n}\n</code></pre> Composer fonctionne en ligne de commande.  Pour v\u00e9rifier la bonne installation de votre composer, vous pouvez taper dans votre invite de commande <code>Composer</code></p>"},{"location":"4_Laravel/4.1_installation/cours/#installation-de-laravel","title":"Installation de LARAVEL","text":"<p>Lancer la commande suivante :</p> <p>\ud83d\udccb Texte<pre><code>composer global require \"laravel/installer\"\n</code></pre>  V\u00e9rifier que la commande <code>laravel -h</code> fonctionne. </p> <p></p>"},{"location":"4_Laravel/4.1_installation/cours/#creation-du-projet-laravel","title":"Cr\u00e9ation du projet LARAVEL","text":"<p>Votre poste est maintenant configur\u00e9 pour Laravel, vous pouvez donc cr\u00e9er un nouveau projet gr\u00e2ce \u00e0 la commande ci- dessous:</p> <p> Attention, le projet sera cr\u00e9\u00e9 dans le dossier courant. D\u00e9placer votre invite de commande dans le bon r\u00e9pertoire avant de lancer votre commande de cr\u00e9ation de projet: </p> \ud83d\udccb Texte<pre><code>CD C:\\\\wamp\\www\\\ncomposer create-project --prefer-dist laravel/laravel monProjet\n</code></pre> <p>Apr\u00e8s quelques minutes, on obtient l\u2019arborescence suivante :</p> <p></p>"},{"location":"4_Laravel/4.1_installation/cours/#description-arborescence-laravel","title":"Description arborescence Laravel","text":"<p>Dans le r\u00e9pertoire <code>\\app</code>, on trouve les dossiers suivants.</p> <ul> <li> <p>Console/Commands : toutes les commandes en mode console, il y a au d\u00e9part une commande Inspire qui sert d'exemple,</p> </li> <li> <p>Http: tout ce qui concerne la communication : contr\u00f4leurs, routes, middlewares (il y a quater middlewares de base) et requ\u00eates,</p> </li> <li>Providers : tous les fournisseurs de services (providers), il y en a d\u00e9j\u00e0 4 au d\u00e9part. Les providers servent \u00e0 initialiser les composants.</li> <li>Policies : permet de g\u00e9rer facilement les droits d'acc\u00e8s.</li> <li> <p>Model : Mod\u00e8le par d\u00e9faut dans l'application  Les autres dossiers suivants :</p> </li> <li> <p>bootstrap : scripts d'initialisation de Laravel pour le chargement automatique des classes, la fixation de l'environnement et des chemins, et pour le d\u00e9marrage de l'application,</p> </li> <li>public : tout ce qui doit appara\u00eetre dans le dossier public du site : images, CSS, scripts...</li> <li>vendor : tous les composants de Laravel et de ses d\u00e9pendances,</li> <li>config : toutes les configurations : application, authentification, cache, base de donn\u00e9es, espaces de noms, emails, syst\u00e8mes de fichier, session...</li> <li>database : migrations et les populations,</li> <li>resources : vues, fichiers de langage et assets (par exemple les fichiers LESS ou Sass),</li> <li>storage : donn\u00e9es temporaires de l'application : vues compil\u00e9es, caches, cl\u00e9s de session...</li> <li>tests : fichiers de tests unitaires.</li> </ul> <p>Et \u00e0 la racine :</p> <ul> <li>artisan : outil en ligne de Laravel pour des t\u00e2ches de gestion,</li> <li>composer.json : fichier de r\u00e9f\u00e9rence de Composer,</li> <li>phpunit.xml : fichier de configuration de phpunit (pour les tests unitaires),</li> <li>.env : fichier pour sp\u00e9cifier l'environnement d'ex\u00e9cution.</li> </ul> <p>Pour v\u00e9rifier que tout est fonctionnel, vous pouvez aller visualiser la partie public.  http://localhost/monProjet/public/</p>"},{"location":"4_Laravel/4.1_installation/cours/#artisan","title":"Artisan :","text":"<p>Artisan est l\u2019interface en ligne de commande de Laravel. Cet outil permet de lancer des commandes \u00e0 destination de Laravel pour cr\u00e9er un contr\u00f4leur, une migration, vider un cache, traiter des files d\u2019attentes, etc. Il permet de gagner du temps.</p>"},{"location":"4_Laravel/4.1_installation/cours/#initialisation","title":"Initialisation","text":"<p>Votre nouveau projet contient un fichier <code>.env</code> ouvrez le, et ajouter en d\u00e9but de fichier <code>APP_NAME=monProjet</code></p> <p>Question</p> QuestionR\u00e9ponse <p>O\u00f9 se trouve le fichier des variables d\u2019environnement de l\u2019application ?</p> <p>A la racine du projet. Laravel propose un syst\u00e8me de variables li\u00e9es \u00e0 l\u2019environnement (prod ou dev\u2026). Ces variables sont stock\u00e8es dans un fichier .env qui ne doit en aucun cas \u00eatre partag\u00e9. Une application Laravel aura donc un fichier diff\u00e9rent sur chaque poste. Il ne devra en aucun cas \u00eatre remont\u00e9 sur git (voir r\u00e8gles .gitignore)</p> <p>Question</p> QuestionR\u00e9ponse <p>A quoi sert la variable APP_DEBUG ?</p> <p>La variable <code>APP_DEBUG</code> a la valeur <code>true</code>. On va la conserver ainsi puisqu'on veut \u00eatre en mode \"debug\". Vous \u00eates ainsi en mode d\u00e9bogage avec affichage de messages d'erreur d\u00e9taill\u00e9s. Si vous la mettez \u00e0 <code>false</code> (ou si vous la supprimez), avec une URL non pr\u00e9vue vous obtenez maintenant juste : \"Un message d'erreur en mode \"production\"  Il ne faudra \u00e9videmment pas laisser la valeur true lors d'une mise en production ! On reparlera de \u00e7a lorsqu'on verra la gestion de l'environnement. Vous ne risquerez ainsi plus d'oublier de changer cette valeur parce que Laravel saura si vous \u00eates sur votre serveur de d\u00e9veloppement ou sur celui de production.</p> <p>Question</p> QuestionR\u00e9ponse <p>A quoi sert la variable APP_KEY ?</p> <p>La valeur de APP_KEY qui s\u00e9curise les informations est automatiquement g\u00e9n\u00e9r\u00e9e lors de l'installation avec <code>create-project</code>.</p> <p>Question</p> QuestionR\u00e9ponse <p>A quoi sert le fichier .htacess du projet ?</p> <p>Si vous avez un serveur Apache lorsque la requ\u00eate du client arrive sur le serveur o\u00f9 se trouve notre application Laravel elle passe en premier par le fichier <code>.htaccess</code>, s'il existe, qui fixe des r\u00e8gles pour le serveur. Il y a justement un fichier <code>.htaccess</code> dans le dossier public de Laravel avec une r\u00e8gle de r\u00e9\u00e9criture de telle sorte qu'on peut avoir une url simplifi\u00e9 : (http://monsite.fr/mapage)  La r\u00e9\u00e9criture des URLS : Pour que \u00e7a fonctionne il faut que le serveur Apache ait le module <code>mod_rewrite</code> activ\u00e9.</p>"},{"location":"4_Laravel/4.1_installation/cours/#lancer-le-projet-dexemple","title":"Lancer le projet d\u2019exemple","text":"<p>Laravel int\u00e8gre un serveur de test permettant de valider son d\u00e9veloppement avec rien d\u2019autre que PHP sur sa machine. </p> \ud83d\udccb Texte<pre><code>CD c:\\\\wamp\\www\\monProjet\nphp artisan serve\n</code></pre> <p>Rendez-vous maintenant dans votre navigateur pour voir le site de d\u00e9monstration fourni par Laravel.   http://localhost:8000/</p> <p>Commandes utiles pour d\u00e9boguer</p> <ul> <li>dd() : affiche la variable pass\u00e9e en param\u00e8tres et arr\u00eate le programme.</li> <li>dump() :idem dd() mais n\u2019arr\u00eate pas le programme</li> <li>log() : Utilisation du journal local : Chaque \u00e9l\u00e9ment est affich\u00e9 dans le journal et est dat\u00e9.     (emergency, alert, critical, error, warning, notice, info, debug)<ul> <li>Log ::emergency(\u2018Urgence\u2019) ;</li> <li>Log :: error(\u2018erreur\u2019) ;     </li> </ul> </li> </ul>"},{"location":"4_Laravel/4.1_installation/cours/#modifier-le-template-par-defaut","title":"Modifier le template par d\u00e9faut","text":"<p>Ouvrez le fichier <code>resources/views/welcome.blade.php</code>, ajouter la variable <code>$titre</code>.  La syntaxe \u00abblade\u00bb est la suivante <code>{{ $titre }}</code>. Ajouter cette variable apr\u00e8s le mot Laravel par exemple (ligne 38)  Vous avez d\u00e9fini votre premi\u00e8re variable c'est bien. Mais pour l'instant rien n'est modifi\u00e9\u2026   Pour que quelque chose s\u2019affiche :</p> <p> \u00c9diter le fichier routes/web.php, la ligne Route en :</p> PHP<pre><code>Route::get('/welcome', function () {\n    return view('welcome', ['titre' =&gt; 'mon premier exemple.']);\n})-&gt; name('welcome');\nou\nRoute::view('/welcome', 'welcome', ['titre' =&gt; 'mon premier exemple.']);\n</code></pre> <p>\ud83d\udca1 Vous pouvez \u00e9galement appeler des fonctions dans les templates, exemple <code>{{ time() }}</code>. Tester cette fonction en ajoutant :</p> PHP<pre><code>&lt;p&gt;Le Timestamp est {{ time() }}&lt;/p&gt;\n</code></pre> <p>Question</p> QuestionR\u00e9ponse <p>\u00c0 votre avis est-il possible d'appeler d'autre fonctions ?</p> <p>Oui, on peut utiliser toutes les fonctions natives de PHP, notamment celle qui retournent en valeur ainsi que nos propres fonctions. De ce point de vue, Laravel est tr\u00e8s permissif et un projet Laravel peut vite \u00eatre ing\u00e9rable si des r\u00e8gles strictes d\u2019organisation du code n\u2019est pas respect\u00e9s.</p>"},{"location":"4_Laravel/4.1_installation/cours/#le-moteur-de-gabarittemplate-blade","title":"Le moteur de gabarit(template) BLADE","text":"<p>Utiliser un moteur de gabarit permet d\u2019assurer directement la s\u00e9curit\u00e9, la lisibilit\u00e9, et l\u2019organisation du code.a</p> <p>Warning</p> <p>Toutes les fonctions utiliser \u00e0 travers BLADE sont envoy\u00e9s \u00e0 travers la fonctions htmlspecialchars() pour se pr\u00e9munir des attaques XSS.</p> <p>Note</p> <p>Les \u00e9l\u00e9ments entre doubles accolades : pour afficher des donn\u00e9es. Les \u00e9l\u00e9ments pr\u00e9c\u00e9d\u00e9s d\u2019un @ pour structurer et contr\u00f4ler l\u2019affichage.</p>"},{"location":"4_Laravel/4.1_installation/cours/#creer-des-routes","title":"Cr\u00e9er des routes","text":"<p>Laravel permet que des adresses du type <code>/index.php?page=articles&amp;id=123</code> soit remplac\u00e9es par des adresses plus expressives comme <code>/articles/monArticle</code></p> <p>Laravel utilise un syst\u00e8me de routes simple. D\u00e9clarer une route permet de lier une URI (identifiant de ressource uniforme, autrement dit la partie de l\u2019adresse qui suit le nom de domaine) \u00e0 un code \u00e0 ex\u00e9cuter. La liste des routes se trouve dans le fichier <code>routes/web.php</code> d\u2019un projet Laravel. Il faut alimenter ce fichier au fur et \u00e0 mesure de l\u2019ajout de nouvelles pages sur le site.</p>"},{"location":"4_Laravel/4.1_installation/cours/#les-methodes-http","title":"Les m\u00e9thodes HTTP :","text":"<p>Il existe plusieurs m\u00e9thodes http auxquelles le serveur peut r\u00e9pondre.</p> <p>Note</p> PHP<pre><code>Route :: get($URI, function()) ;\nRoute :: post($URI, function()) ;\nRoute :: put($URI, function()) ;\nRoute :: delete($URI, function()) ;\n</code></pre> <p>Pour tester le fonctionnement nous allons ajouter une nouvelle Route dans le projet de d\u00e9monstration. Nous allons donc ajouter dans le fichier <code>routes/web.php</code> :</p> PHP<pre><code>Route::get('/ping', function () {\n    return \"pong\";\n});\n</code></pre> <p>Question</p> questionr\u00e9ponse <p>Quelle URL avez-vous utilis\u00e9 ?</p> <p>http://localhost:8000/ping</p>"},{"location":"4_Laravel/4.1_installation/cours/#groupe-de-route","title":"Groupe de Route","text":"<p>On pourra vouloir regrouper toutes les routes ayant les m\u00eames fonctionnalit\u00e9s sous un m\u00eame chemin. On utilisera alors la notion de groupe de routes</p> <p>Note</p> PHP<pre><code>Route::middleware(['first', 'second'])-&gt;group(function () {\n    Route::get('/', function () {\n        // Uses first &amp; second middleware...\n    });\n\n    Route::get('/user/profile', function () {\n        // Uses first &amp; second middleware...\n    });\n});\n</code></pre>"},{"location":"4_Laravel/4.1_installation/cours/#parametres-des-routes","title":"Param\u00e8tres des routes","text":"<p>Il est parfois int\u00e9ressant de capturer certaines parties de l\u2019URI d\u2019une route pour la traiter ensuite. </p> <p>Par exemple, dans le cas d\u2019une boutique en ligne, on veut afficher la page de l\u2019article 1, ou la page de l\u2019article 2 \u2026. Il peut \u00eatre int\u00e9ressant de capturer l\u2019identifiant de l\u2019article dans l\u2019URI pour rechercher et afficher le descriptif correspondant.</p> PHP<pre><code>Route::get('article/{n}', function($n) {\n    //$article= get_article($id)\n    //return \u2018descriptif de l article :\u2019.$article-&gt;text\n     return view('article')-&gt;with('numero', $n);\n})-&gt;where('n', '[0-9]+');\n</code></pre> <p>Pour traiter la variable captur\u00e9e, il faut la passer en param\u00e8tres de la fonction de rappel de la route en lui donnant le m\u00eame nom. Dans l\u2019exemple, on peut imaginer un fonction <code>$get_article</code> qui prend en param\u00e8tre un identifiant d\u2019article et retourne un objet dont la propri\u00e9t\u00e9 text contient le descriptif de l\u2019article. Ici je me suis content\u00e9 de renvoyer une page statique affichant le num\u00e9ro de l\u2019article.</p> <p>Note</p> <p>il est possible d\u2019utiliser plusieurs param\u00e8tres s\u00e9par\u00e9s par des / et d\u2019afficher des routes avec plusieurs param\u00e8tres.</p>"},{"location":"4_Laravel/4.1_installation/cours/#ordre-des-routes","title":"Ordre des routes :","text":"<p>Les routes sont analys\u00e9e dans leur ordre dans le fichier des routes. PHP<pre><code>Route::get('{n}', function($n) {\nreturn 'Je suis la page ' . $n . ' !';\n});\n\nRoute::get('contact', function() {\nreturn \"C'est moi le contact.\";\n});\n</code></pre></p>"},{"location":"4_Laravel/4.1_installation/cours/#ajouter-une-nouvelle-vue","title":"Ajouter une nouvelle vue","text":"<p>Maintenant que nous avons d\u00e9clar\u00e9 une nouvelle route, nous allons revoir l\u00e9g\u00e8rement les templates pour : -   D\u00e9clarer un template principal (aussi appel\u00e9 : layout). -   Modifier le welcome.blade.php pour y faire r\u00e9f\u00e9rence. -   Utiliser le layout pour r\u00e9pondre pong.</p> <p>Question</p> QuestionR\u00e9ponse <p>Pourquoi un tel d\u00e9coupage ?</p> <p>Permet de cr\u00e9er des page mod\u00e8le ayant la m\u00eame structure. Non redondance de code.</p>"},{"location":"4_Laravel/4.1_installation/cours/#creer-le-layout","title":"Cr\u00e9er le layout","text":"<p>Cr\u00e9er un nouveau fichier <code>resources/views/layouts/base.blade.php</code> avec le contenu suivant. C\u2019est tout simplement un d\u00e9coupage en \u00ab layout \u00bb du template de base de d\u00e9monstration.</p> Code a copier HTML<pre><code>&lt;!doctype html&gt;\n&lt;html lang=\"{{ app()-&gt;getLocale() }}\"&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n        &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n\n        &lt;title&gt;Laravel - @yield('title')&lt;/title&gt;\n\n        &lt;!-- Fonts --&gt;\n        &lt;link href=\"https://fonts.googleapis.com/css?family=Raleway:100,600\" rel=\"stylesheet\" type=\"text/css\"&gt;\n\n        &lt;!-- Styles --&gt;\n        &lt;style&gt;\n            html, body {\n                background-color: #fff;\n                color: #636b6f;\n                font-family: 'Raleway', sans-serif;\n                font-weight: 100;\n                height: 100vh;\n                margin: 0;\n            }\n            .full-height {\n                height: 100vh;\n            }\n            .flex-center {\n                align-items: center;\n                display: flex;\n                justify-content: center;\n            }\n            .position-ref {\n                position: relative;\n            }\n            .top-right {\n                position: absolute;\n                right: 10px;\n                top: 18px;\n            }\n            .content {\n                text-align: center;\n            }\n            .title {\n                font-size: 84px;\n            }\n            .links &gt; a {\n                color: #636b6f;\n                padding: 0 25px;\n                font-size: 12px;\n                font-weight: 600;\n                letter-spacing: .1rem;\n                text-decoration: none;\n                text-transform: uppercase;\n            }\n            .m-b-md {\n                margin-bottom: 30px;\n            }\n        &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div class=\"flex-center position-ref full-height\"&gt;\n            @if (Route::has('login'))\n                &lt;div class=\"top-right links\"&gt;\n                    @auth\n                        &lt;a href=\"{{ url('/home') }}\"&gt;Home&lt;/a&gt;\n                    @else\n                        &lt;a href=\"{{ route('login') }}\"&gt;Login&lt;/a&gt;\n                        &lt;a href=\"{{ route('register') }}\"&gt;Register&lt;/a&gt;\n                    @endauth\n                &lt;/div&gt;\n            @endif\n\n            &lt;div class=\"content\"&gt;\n                @yield('content')\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Question</p> QuestionR\u00e9ponse <p>A quoi sert le mot clef <code>@yield</code> ?</p> <p>Il d\u00e9signe l\u2019emplacement sp\u00e9cialis\u00e9 de chaque layout. Il est associc\u00e9 \u00e0 un mot cl\u00e9 permettant d\u2019y envoy\u00e9 les donn\u00e9es qui ne sont pas communes \u00e0 chaque page.</p>"},{"location":"4_Laravel/4.1_installation/cours/#utiliser-le-layout-dans-welcomebladephp","title":"Utiliser le layout dans welcome.blade.php","text":"<p>Documentation sur les templates https://laravel.com/docs/10.x/blade</p> <p>Maintenant que nous avons notre template de base nous allons l\u2019utiliser dans le template \u00ab Welcome \u00bb. Remplacer le contenu de <code>resources/views/welcome.blade.php</code> par :</p> PHP<pre><code>@extends('layouts.base')\n\n@section('title', 'Bienvenue')\n\n@section('content')\n   &lt;div class=\"title m-b-md\"&gt;\n        Laravel\n    &lt;/div&gt;\n\n    &lt;div class=\"links\"&gt;\n        &lt;a href=\"https://laravel.com/docs\"&gt;Documentation&lt;/a&gt;\n        &lt;a href=\"https://laracasts.com\"&gt;Laracasts&lt;/a&gt;\n        &lt;a href=\"https://laravel-news.com\"&gt;News&lt;/a&gt;\n        &lt;a href=\"https://forge.laravel.com\"&gt;Forge&lt;/a&gt;\n        &lt;a href=\"https://github.com/laravel/laravel\"&gt;GitHub&lt;/a&gt;\n    &lt;/div&gt;\n@endsection\n</code></pre>"},{"location":"4_Laravel/4.1_installation/cours/#utiliser-le-layout-dans-la-route-pong","title":"Utiliser le layout dans la route Pong","text":"<p>Bon, maintenant que nous avons d\u00e9clar\u00e9 un layout utilisons-le dans la 2nd route (<code>/ping</code>) que nous avons cr\u00e9\u00e9. Pour cette derni\u00e8re action je ne vous donne pas de code, mais uniquement les \u00e9tapes :</p> <p>A faire</p> <ul> <li>Cr\u00e9ez une Vue par exemple <code>ping.blade.php</code> (Dans le dossiers views)</li> <li>Utilisez <code>@extends('base')</code> pour \u00ab h\u00e9riter \u00bb de votre layout principal.</li> <li>Modifiez <code>web.php</code> pour r\u00e9pondre avec la fonction view comme dans l\u2019autre route.</li> </ul> tips aideaide ++ <p>Dans un premier temps on dit qu'on veut utiliser le template avec @extends et le nom du template \"template\". Ensuite on remplit les zones pr\u00e9vues dans le template gr\u00e2ce \u00e0 la syntaxe <code>@section</code> en pr\u00e9cisant le nom de l'emplacement et en fermant avec <code>@endsection</code> . </p> PHP<pre><code>@extends('layouts/base')\n@section('title', 'Bienvenue')\n\n@section('content')\n&lt;h1&gt;PONG&lt;/h1&gt;\n@endsection\n</code></pre>"},{"location":"4_Laravel/4.2_toDo/4.2.1_initialisation/","title":"1. Projet ToDo Initialisation","text":"<p>Dans ce TP nous allons r\u00e9aliser une application web, \u00ab TODO \u00bb ou aussi appel\u00e9 liste de t\u00e2ches. Une TODO List est un proc\u00e9d\u00e9 qui se veut simple et efficace pour g\u00e9rer les t\u00e2ches d'un projet. Ces t\u00e2ches peuvent \u00eatre ind\u00e9pendantes ou devoir, au contraire, \u00eatre accomplies dans un certain ordre. Ces t\u00e2ches pourront \u00e9galement \u00eatre cat\u00e9goris\u00e9es (pro, perso, famille, ...). Voil\u00e0 la liste des fonctionnalit\u00e9s de l\u2019application que l'on va cr\u00e9er : - Lister les t\u00e2ches. - Ajouter une t\u00e2che. - Marquer comme termin\u00e9 une t\u00e2che. - Suppression d'une t\u00e2che.</p> <p>Technologie</p> <p>Dans ce TP nous allons utiliser les technologies suivantes : - Laravel (Framework PHP) - ORM Eloqent - Bootstrap 4 (Framework HTML / CSS / JS) - NodeJS (Utilisation de Webpack)</p>"},{"location":"4_Laravel/4.2_toDo/4.2.1_initialisation/#11-initialiser-le-projet","title":"1.1 Initialiser le projet","text":"<p>La premi\u00e8re \u00e9tape lors d'un projet Laravel est la cr\u00e9ation de la structure avec une simple ligne de commande, dans notre cas : \u270b Attention, le projet va \u00eatre cr\u00e9\u00e9 dans le dossier todo2024 dans le dossier courant.</p> \ud83d\udccb Texte<pre><code>composer create-project --prefer-dist laravel/laravel todo2024 \n</code></pre> <p>Question</p> Questionr\u00e9ponse <p>O\u00f9 sont les librairies ?</p> <p>Les vendor repr\u00e9sentent les biblioth\u00e8ques tierce qui sont n\u00e9cessaires au projet mais qui sont des ressources externe, c'est notamment le nom utiliser par le dossier ou sont stocker les d\u00e9pendances t\u00e9l\u00e9charg\u00e9es via le package manager le plus utiliser de php : composer</p> <p>Question</p> questionR\u00e9ponse <p>Quel est l'int\u00e9r\u00eat \u00e0 votre avis d'utiliser un outil pour initialiser un projet ?</p> <p>Gain de temps, d\u2019efficacit\u00e9, non redondance des taches, automatisation de ce qui peut l\u2019\u00eatre.</p> <p>Configurer le projet</p> <p>Configurer le projet : .env Le projet qui vient d'\u00eatre cr\u00e9\u00e9 est \u00ab g\u00e9n\u00e9rique \u00bb c'est \u00e0 dire qu'il ne poss\u00e8de aucune personnalisation et peut donc servir de base quelques soit votre d\u00e9veloppement. La premi\u00e8re \u00e9tape est donc d'\u00e9diter le fichier <code>.env</code> pour configurer les options de base de votre projet tel que : - Le nom : ToDoList - Le type de base de donn\u00e9es - \u2026</p> <p>S\u00e9curit\u00e9</p> <p> Cr\u00e9er une base de donn\u00e9es <code>todo2024</code> sous MySQL   cr\u00e9er un user de base de donn\u00e9es \u00e0 p\u00e9rim\u00e8tre restreint pour votre application  Mettre \u00e0 jour le <code>.env</code> \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>CREATE USER 'nouveau_utilisateur'@'%' IDENTIFIED BY 'mot_de_passe';\nGRANT ALL PRIVILEGES ON `todo2024`.* TO 'nouveau_utilisateur'@'%s'; \nFLUSH PRIVILEGES\n</code></pre></p> <p>Le reste du fichier .env : Nous n'allons pas toucher aux autres param\u00e8tres mais certains sont tout de m\u00eame int\u00e9ressants. Je vous laisse donc consulter la documentation en ligne de laravel.</p>"},{"location":"4_Laravel/4.2_toDo/4.2.1_initialisation/#12-conception-de-la-base-de-donnees","title":"1.2 Conception de la base de donn\u00e9es","text":"<p>Ce qui donnera le calcul du MPD suivant :  TODO (id, texte, termine,important timestamp) CATEGORIE(idcat, libelle) CATEGORIES_TODOS (id,idcat)</p>"},{"location":"4_Laravel/4.2_toDo/4.2.1_initialisation/#121creation-de-la-migration","title":"1.2.1Cr\u00e9ation de la \u00ab migration \u00bb","text":"<p>Laravel utilise un ORM pour manipuler la base de donn\u00e9es. Pour rappel un ORM est Un mapping objet-relationnel (en anglais object-relational mapping) est une technique de programmation informatique qui cr\u00e9e l'illusion d'une base de donn\u00e9es orient\u00e9e objet \u00e0 partir d'une base de donn\u00e9es relationnelle en d\u00e9finissant des correspondances entre cette base de donn\u00e9es et les objets du langage utilis\u00e9. L'ORM utilis\u00e9 par Laravel est Eloquent, il est \u00e0 la fois puissant et relativement simple. Autrement dit avec un ORM dans la plus part des cas vous n'\u00e9crivez plus de requ\u00eate SQL mais vous manipulez des objets repr\u00e9sentant la base de donn\u00e9es.</p> <p>Comme pour la cr\u00e9ation du projet, la cr\u00e9ation de la d\u00e9finition de vos table va se faire via une requ\u00eate dans votre terminal en utilisant Artisan.</p> <p>\ud83d\udccb Texte<pre><code>php artisan make:migration create_todos_table --create=todos\n</code></pre> \ud83d\udccb Texte<pre><code>INFO  Migration [C:\\wamp64\\www\\todo2024\\database\\migrations/2023_11_21_084423_create_todos_table.php] created successfully.\n</code></pre></p> <p>L\u2019option <code>--create=todos</code> dans la premi\u00e8re m\u00e9thode permet d\u2019indiquer le nom du mod\u00e8le de la table \u00e0 cr\u00e9er. La commande vient de cr\u00e9er un nouveau fichier dans le dossier database/migration. Dans mon cas le fichier se nomme : /todo2024/database/migrations/2023_11_21_084423_create_todo_table.php</p> contenu du fichier PHP<pre><code>&lt;?php\n\n    use Illuminate\\Database\\Migrations\\Migration;\n    use Illuminate\\Database\\Schema\\Blueprint;\n    use Illuminate\\Support\\Facades\\Schema;\n\n    return new class extends Migration\n    {\n        /**\n         * Run the migrations.\n         */\n        public function up(): void\n        {\n            Schema::create('todos', function (Blueprint $table) {\n                $table-&gt;id();\n                $table-&gt;timestamps();\n            });\n        }\n\n        /**\n         * Reverse the migrations.\n         */\n        public function down(): void\n        {\n            Schema::dropIfExists('todos');\n        }\n    };\n</code></pre> <p>\u270b Le contenu du fichier cr\u00e9\u00e9 est fictif, il est l\u00e0 pour illustrer comment travailler. Nous allons le modifier pour mettre les informations relatives \u00e0 notre table.</p> <p>Questions</p> Questionr\u00e9ponse <p>Il y a d'autres fichiers dans votre r\u00e9pertoire de migration. A quoi servent ils ? )</p> <ul> <li>table users : c\u2019est une migration de base pour cr\u00e9er une table des utilisateurs,</li> <li>table password_resets : c\u2019est une migration li\u00e9e \u00e0 la pr\u00e9c\u00e9dente qui permet de g\u00e9rer le renouvellement des mots de passe en toute s\u00e9curit\u00e9.</li> </ul> <p>Questions</p> Questionr\u00e9ponse <p>Quels sont les champs par d\u00e9faut dans la cr\u00e9ation d\u2019une table simple ?</p> <p> et </p> <p>PHP<pre><code>$table-&gt;integer('id');\n$table-&gt;timestamps();\n</code></pre> les deux champs ont une syntaxe particuli\u00e8re. Ce sont des fonctions propres \u00e0 Laravel. Il en existe beaucoup dans la .</p> <p>Nous allons d\u00e9finir notre sch\u00e9ma  pour y ajouter les 3 colonnes qui nous serons utiles texte, termine et important. L'ORM \u00e9tant une librairie objet, la d\u00e9finition de nouveaux champs se fait via une m\u00e9thode, dans notre cas :</p> \ud83d\udccb Texte<pre><code>```php\n$table-&gt;integer('id');\n$table-&gt;string('texte');\n$table-&gt;boolean('termine')-&gt;default(0);\n$table-&gt;boolean('important')-&gt;default(0);\n#D\u00e9claraction de la cl\u00e9 primaire\n$table-&gt;primary('id');\n```\n</code></pre> <p>Ajouter les champs dans la m\u00e9thode <code>up</code> du fichier.</p> fonction up PHP<pre><code>public function up(): void\n{\n    Schema::create('todos', function (Blueprint $table) {\n        $table-&gt;integer('id')\n        $table-&gt;string('texte');\n        $table-&gt;boolean('termine')-&gt;default(0);\n        $table-&gt;boolean('important')-&gt;default(0);\n        #D\u00e9claraction de la cl\u00e9 primaire\n        $table-&gt;primary('id');\n        $table-&gt;timestamps();\n    });\n}\n</code></pre>"},{"location":"4_Laravel/4.2_toDo/4.2.1_initialisation/#123-creation-en-base","title":"1.2.3 Cr\u00e9ation en base","text":"<p>Maintenant que le script est termin\u00e9, nous allons indiquer \u00e0 Laravel d'effectuer \u00ab la migration \u00bb c'est-\u00e0-dire de transformer votre d\u00e9finition PHP en instruction SQL pour cr\u00e9er r\u00e9ellement la base de donn\u00e9es. </p> <p></p> <p>Remplacer dans config/database.php</p> <p>PHP<pre><code>'charset' =&gt; 'utf8mb4',\n'collation' =&gt; 'utf8mb4_unicode_ci',\n#Par \n'charset' =&gt; 'utf8',\n'collation' =&gt; 'utf8_unicode_ci',\n</code></pre> PHP<pre><code>'engine' =&gt; null,\n#par\n'engine' =&gt; 'InnoDB',\n</code></pre></p> <p>Checklist</p> <ul> <li> Terminal : <code>C:\\wamp64\\www\\todo2024&gt;</code></li> <li> base de donn\u00e9es <code>todo2024</code> cr\u00e9\u00e9e</li> <li> user base de donn\u00e9e cr\u00e9\u00e9</li> <li> .env mis \u00e0 jour</li> <li> m\u00e9tode <code>up</code> de la migration mise \u00e0 jour</li> </ul> <p>Retour dans la ligne de commande :</p> <p>\ud83d\udccb Texte<pre><code>C:\\wamp64\\www\\todo2024&gt;php artisan migrate:fresh  \n\n  Dropping all tables ..................................................................................................... 146ms DONE\n\n   INFO  Preparing database.\n\n  Creating migration table ................................................................................................. 16ms DONE  \n\n   INFO  Running migrations.\n\n  2014_10_12_000000_create_users_table ..................................................................................... 21ms DONE  \n  2014_10_12_100000_create_password_reset_tokens_table ..................................................................... 13ms DONE  \n  2019_08_19_000000_create_failed_jobs_table ............................................................................... 22ms DONE  \n  2019_12_14_000001_create_personal_access_tokens_table .................................................................... 21ms DONE  \n  2023_11_21_084423_create_todo_table ...................................................................................... 21ms DONE  \n</code></pre> V\u00e9rifier votre console et votre travail dans phpMyAdmin. </p> <p>A faire</p> Mod\u00e8le relationnelCorrection <p>Faites la m\u00eame chose avec les tables CATEGORIES et CATEGORISE Sachant que CATEGORISE poss\u00e8de \u00e9galement deux cl\u00e9s \u00e9trang\u00e8res.</p> <p>La difficult\u00e9 ici est de cr\u00e9er la bonne relation entre cl\u00e9s primaires et cl\u00e9s \u00e9trang\u00e8res. Pour rappel, en Base de donn\u00e9es, on ne peut r\u00e9f\u00e9rencer un champ en cl\u00e9 \u00e9trang\u00e8re vers une cl\u00e9 primaire que si les deux champs sont exactement du MEME type. or ici, si on utilise <code>id()</code> pour cat\u00e9gorie, on aura du mal \u00e0 construire la cl\u00e9 \u00e9trang\u00e8re dans la table CATEGORISE</p> PHP<pre><code>public function up(): void\n{\n    Schema::create('categories', function (Blueprint $table) {\n        $table-&gt;integer('id');\n        $table-&gt;string('libelle');\n        $table-&gt;primary('id');\n        $table-&gt;timestamps();\n    });\n}\npublic function up(): void\n{\n    Schema::create('categories_todos', function (Blueprint $table) {\n        $table-&gt;integer('categories_id');\n        $table-&gt;integer('todos_id');\n\n        $table-&gt;foreign('categories_id')-&gt;references('id')-&gt;on('categories');\n        $table-&gt;foreign('todos_id')-&gt;references('id')-&gt;on('todos');\n\n        $table-&gt;primary(['categories_id', 'todos_id']);\n        $table-&gt;timestamps();\n    });\n}\n</code></pre> <p>Votre base de donn\u00e9es est maintenant pr\u00eate \u00e0 \u00eatre utilis\u00e9e. Vous pouvez aller voir le contenu gr\u00e2ce \u00e0 phpMyAdmin. Verifier votre structures et vos contraintes.</p> <p>Cours</p> <p>L\u2019ORM eloquent permet de cr\u00e9er une correspondance entre les classes PHP et la base de donn\u00e9es. On peut cr\u00e9er une classe<code>maTable</code> associ\u00e9e \u00e0 une table <code>maTable</code>. On pourra acc\u00e9der aux colonnes de la table au travers des propri\u00e9t\u00e9s de la classe et b\u00e9n\u00e9ficier de m\u00e9thodes pour charger un \u00e9l\u00e9ment ou une liste d\u2019\u00e9l\u00e9ments, enregistrer, mettre \u00e0 jour \u2026</p> <p>Exemple</p> <p>Exemple de commande pour manipuler facilement des retours de requ\u00eates en base de donn\u00e9es. Tout est Objet !</p> PHP<pre><code>$user = User ::find(5) ;\nEcho $user-&gt;name ;\n$user-&gt;age=32 ;\n$user-&gt;save() ;\n</code></pre>"},{"location":"4_Laravel/4.2_toDo/4.2.1_initialisation/#13-le-modele","title":"1.3 Le mod\u00e8le","text":"<p>Maintenant que nous avons fait le script de cr\u00e9ation / migration, nous allons d\u00e9finir notre model.</p> <p>\ud83d\udccb Texte<pre><code>$ php artisan make:model Todos\n</code></pre>  La commande va cr\u00e9er le fichier <code>Todos.php</code> dans le dossier <code>app/</code>.</p> <p>Ajouter dans la class <code>Todos.php</code> :</p> \ud83d\udccb Texte<pre><code>```php\nprotected $fillable = ['texte', 'termine', 'important'];\n```\n</code></pre> <p>\u26a0\ufe0f Cette propri\u00e9t\u00e9 est optionnelle, elle permet vous autorisera plus tard \u00e0 faire du \u00ab mass-assignment \u00bb c'est \u00e0 dire \u00e0 cr\u00e9er un objet \u00ab Todos \u00bb depuis par exemple le POST HTTP.</p> <p>A faire</p> Mod\u00e8le relationnelCorrection <p>Faites la m\u00eame chose avec les tables CATEGORIE</p> <p>Inutile d'ajouter des attributs <code>fillable</code> pour cette table puisque nous ne cr\u00e9erons pas de cat\u00e9gorie via l'interface Web.</p>"},{"location":"4_Laravel/4.2_toDo/4.2.1_initialisation/#14-le-controller","title":"1.4 Le controller","text":""},{"location":"4_Laravel/4.2_toDo/4.2.1_initialisation/#141-creation-du-controller","title":"1.4.1 Cr\u00e9ation du controller","text":"<p>Maintenant que nous avons la migration et le model de notre base de donn\u00e9es, nous allons cr\u00e9er le controller. Pour rappel le controller va faire \u00ab le lien \u00bb entre la base de donn\u00e9es et les appels HTTP. C\u2019est ici que nous allons mettre la logique m\u00e9tier de notre application.</p> <p>R\u00f4le</p> <p>La t\u00e2che d'un contr\u00f4leur est de r\u00e9ceptionner une requ\u00eate (qui a d\u00e9j\u00e0 \u00e9t\u00e9 tri\u00e9e par une route) et de d\u00e9finir la r\u00e9ponse appropri\u00e9e, rien de moins et rien de plus. Voici une illustration du processus : </p> <ul> <li>Les contr\u00f4leurs servent \u00e0 r\u00e9ceptionner les requ\u00eates tri\u00e9es par les routes et \u00e0 fournir une r\u00e9ponse au client.</li> <li>Artisan permet de cr\u00e9er facilement un contr\u00f4leur.</li> <li>Il est facile d'appeler une m\u00e9thode de contr\u00f4leur \u00e0 partir d'une route.</li> <li>On peut nommer une route qui pointe vers une m\u00e9thode de contr\u00f4leur.</li> </ul> <p> Pour commencer nous allons cr\u00e9er \u00ab la structure de base \u00bb de notre controller.</p> \ud83d\udccb Texte<pre><code>php artisan make:controller TodosController\nphp artisan make:controller CategoriesController\n</code></pre> <p>Le fichier <code>TodosController.php</code> viens d'\u00eatre cr\u00e9\u00e9 dans le chemin suivant <code>app/Http/Controllers/</code>.</p> <p>Notre code est pr\u00eat. Nous allons cr\u00e9er les m\u00e9thodes permettant la manipulation de notre base de donn\u00e9es tout en r\u00e9pondant \u00e0 nos probl\u00e9matique d'interface (liste, cr\u00e9ation, terminer, suppressionCRUD).</p> <p>Nous allons \u00e9crire une m\u00e9thode pour chaque action. Avec les diff\u00e9rentes conditions n\u00e9cessaires au bon fonctionnement de l'application.</p>"},{"location":"4_Laravel/4.2_toDo/4.2.1_initialisation/#142-la-methode-liste","title":"1.4.2 La m\u00e9thode \u00ab Liste \u00bb","text":"<p>La m\u00e9thode liste est certainement la plus simple, nous allons faire appel \u00e0 la m\u00e9thode <code>all()</code> de Eloquent.  \u270b Dans un premier temp nous n'allons pas integrer la base de donn\u00e9es, mais uniquement d\u00e9finir notre m\u00e9thode. Et tester  l'interface de notre projet.</p> <p>PHP<pre><code>public function liste(){\n    return \"Liste\";\n}\n</code></pre>  Nous allons tester la route <code>/</code> (page d'acccueil du projet), pour \u00e7a nous allons remplacer le contenu du fichier routes/web.php par : PHP<pre><code>use Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\TodosController;\n\nRoute::get('/', [TodosController::class, 'liste']);\n</code></pre></p> <p>serveur de test</p> <p>\ud83d\udccb Texte<pre><code>php artisan serve\n</code></pre> http://localhost:8000/</p> <p>Vous pouvez relancer votre serveur de test, vous devez maintenant voir afficher \u00ab Liste \u00bb.</p>"},{"location":"4_Laravel/4.2_toDo/4.2.1_initialisation/#15-creer-les-templates","title":"1.5 Cr\u00e9er les templates","text":""},{"location":"4_Laravel/4.2_toDo/4.2.1_initialisation/#151-structure","title":"1.5.1 Structure","text":"<p>Nous avons donc maintenant : - [ ] La structure Laravel. - [ ]La d\u00e9finition de notre base de donn\u00e9es. - [ ] Une page d'accueil valide - [ ] Un controller un peu vide</p> <p>Nous allons donc pouvoir commencer la cr\u00e9ation des vues. L'organisation du code est quelques choses d'important, elle n'est pas \u00e0 n\u00e9gliger. Un code organis\u00e9 est un code agr\u00e9able \u00e0 r\u00e9diger. Notre vue va \u00eatre d\u00e9coup\u00e9e en 3 partie :</p> <p></p> Pourquoi le d\u00e9coupage en \u00ab 3 templates \u00bb est-il important ? <p>On retrouve les besoins de d\u00e9coupage que l\u2019on pouvait avoir avec un PHP brut avec les fonctions include ou require. On peut vouloir inclure une portion de code blade pour g\u00e9rer les affichages d\u2019erreurs li\u00e9s aux formulaires dans chaque page qui en poss\u00e8dera un. Ici on mutualisera le code statique commun \u00e0 plusieurs pages.</p> Quelle est l'avantage pour le d\u00e9veloppeur ? <p>R\u00e9utilisation de code, maintenabilit\u00e9.</p>"},{"location":"4_Laravel/4.2_toDo/4.2.1_initialisation/#152-le-template-principal","title":"1.5.2 Le template principal","text":"<p>Nous allons commencer par d\u00e9finir notre \u00ab Template principal \u00bb celui-ci va contenir l'ensemble des \u00e9l\u00e9ments partag\u00e9s sur toutes nos pages \u00e0 savoir : \u2022   Les JS  \u2022   Les CSS  \u2022   La structure commune </p> template.blade.php PHP<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n        &lt;meta name=\"csrf-token\" content=\"{{ csrf_token() }}\"&gt;\n\n        &lt;title&gt;@yield('title')&lt;/title&gt;\n\n        &lt;link href=\"{{ asset('css/app.css') }}\" rel=\"stylesheet\"&gt;\n        &lt;script type=\"text/javascript\" src=\"{{ asset('js/app.js') }}\"&gt;&lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;nav class=\"navbar navbar-expand-md navbar-dark bg-dark\"&gt;\n            &lt;a class=\"navbar-brand\" href=\"#\"&gt;Ma Todo List&lt;/a&gt;\n        &lt;/nav&gt;\n\n        @yield('content')\n\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> Pourquoi le fichier est-il nomm\u00e9 \u2026.blade.php ? <p>Il utilise le moteur de template blade. Contrairement aux autres moteurs de templates PHP populaires, Blade ne vous emp\u00eache pas d'utiliser du code PHP simple dans vos vues. En fait, toutes les vues Blade sont compil\u00e9es dans du code PHP brut et mises en cache jusqu'\u00e0 ce qu'elles soient modifi\u00e9es, ce qui signifie que Blade n'ajoute pratiquement aucune surcharge \u00e0 votre application. </p> \u00c0 quoi correspond {{ asset('\u2026') }} ? <p>The asset function generates a URL for an asset using the current scheme of the request (HTTP or HTTPS):</p> <p>PHP<pre><code>    $url = asset('css/style.css ');\n</code></pre> essaiera de charger <code>/mon-site/ma/route/web/web/css/style.css</code></p> \u00c0 quoi correspond la directive \u00ab yield \u00bb? En quoi est-ce tr\u00e8s important ? <p>Mot cl\u00e9 permet de d\u00e9terminer la partie ou plac\u00e9 le code \u00e0 sustituer. Il permet de g\u00e9rer l\u2019h\u00e9ritage et l\u2019inclusion de mod\u00e8le.</p> Est-il possible de d\u00e9finir une \u00ab zone \u00bb o\u00f9 d'autre ressources JS/CSS seront ins\u00e9r\u00e9es lors de l'ex\u00e9cution ?  <p>Voir la  Blade propose un syst\u00e8me pour ajouter des \u00e9l\u00e9ments de plusieurs endroits dans une pile avant l\u2019affichage. Il faut utiliser les directives @push, @endpush, @stack.</p>"},{"location":"4_Laravel/4.2_toDo/4.2.1_initialisation/#153-composant-vite","title":"1.5.3 Composant VITE","text":"<p>petit apart\u00e9 pour d\u00e9tailler l'utilisation des assets front-end (JavaScript / CSS) dans le cadre de Laravel. Lorsque l'on commence \u00e0 travailler sur du JavaScript on a tr\u00e8s rapidement besoin d'outils comme des bundlers pour travailler efficacement. Malheureusement ces outils sont souvent pens\u00e9s pour des sites web statiques et l'int\u00e9gration avec une application backend n'est pas forc\u00e9ment \u00e9vident.</p> <p>Lors de son installation Laravel dispose d\u00e9j\u00e0 d'une configuration permettant d'utiliser le bundler Vite avec un fichier package.json pr\u00e9-rempli.</p> <p> Installer au pr\u00e9alable node.js ici</p> <p>\ud83d\udccb Texte<pre><code>composer require laravel/breeze --dev\nphp artisan breeze:install vue\nnpm install\nnpm install --save-dev vite laravel-vite-plugin\nnpm install --save-dev @vitejs/plugin-vue\n</code></pre> </p> <p>On trouve aussi un nouveau fichier de configuration </p>"},{"location":"4_Laravel/4.2_toDo/4.2.1_initialisation/#154-installation-de-bootstrap-5","title":"1.5.4 Installation de Bootstrap 5","text":"<p>\ud83d\udccb Texte<pre><code>composer require laravel/ui\nnpm i --save bootstrap @popperjs/core\nnpm install bootstrap-icons\nnpm install\nnpm run build\n</code></pre> dans <code>app.js</code>, ajouter  PHP<pre><code>import './bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport '@popperjs/core';\n</code></pre></p> <p>Dans votre template, ajouter dans le <code>head</code> la ligne <code>@vite(['resources/js/app.js'])</code></p>  tester <p>pour tester vos manips, ajouer du code bootstrap dans votre template. - [ ] Mettre en commentaire la route vers le controller Todo - [ ] Cr\u00e9er une route vers la vue template <code>Route :: view ('/test', 'template');</code> - [ ] Dans le template, mettre mettre le code ci dessous contenant du bootstrap</p> PHP<pre><code>&lt;nav class=\"navbar navbar-expand-md navbar-dark bg-dark\"&gt;\n    &lt;a class=\"navbar-brand\" href=\"/\"&gt;Ma Todo List&lt;/a&gt;\n    &lt;a class=\"navbar-brand btn btn-primary\" href=\"liste\"&gt;&lt;i class=\"bi bi-app\"&gt;&lt;/i&gt;Liste&lt;/a&gt;\n\n    &lt;a class=\"navbar-brand btn btn-danger\" href=\"compteur\"&gt;Compteur&lt;/a&gt;\n&lt;/nav&gt;\n</code></pre>"},{"location":"4_Laravel/4.2_toDo/4.2.1_initialisation/#16-liste-des-todos","title":"1.6 Liste des todos","text":""},{"location":"4_Laravel/4.2_toDo/4.2.1_initialisation/#161-le-template-home","title":"1.6.1 Le template Home","text":"<p>Maintenant que nous avons d\u00e9fini notre template de base nous allons pouvoir d\u00e9finir notre page principale, la page \u00ab liste des todos \u00bb. Une fois termin\u00e9e celle-ci va ressembler \u00e0 :</p> <p></p> <p>Avant de commencer la r\u00e9alisation de ce template, regardons ce que l'on peut y voir : -   Un formulaire \u00ab form \u00bb -   Une \u00ab liste \u00bb</p> <p>Nous allons donc avoir besoin de composant bootstrap. Premi\u00e8re \u00e9tape regarder la documentation de bootsrap ! </p> Quels composants (components) allons-nous avoir besoins ? <p>Gestion des messages d\u2019erreur pour g\u00e9rer la saisie dans le formulaire</p> Est-ce que ce sont les seuls ? <p>D\u00e9finition du template \u00ab Liste \u00bb / \u00ab Home \u00bb</p> <p>Nous allons cr\u00e9er un 2nd template celui qui va \u00eatre charg\u00e9 d'afficher la liste des todos.  Cr\u00e9\u00e9r un nouveau fichier resources/views/home.blade.php et y mettre le contenu suivant :</p> home.blade.php PHP<pre><code>@extends(\"template\")\n\n@section(\"title\", \"Ma Todo List\")\n\n@section(\"content\")\n&lt;div class=\"container\"&gt;\n    &lt;div class=\"card\"&gt;\n        &lt;div class=\"card-body\"&gt;\n            &lt;!-- Action --&gt;\n            &lt;form action=\"{{ route('todo.save') }}\" method=\"POST\" class=\"add\"&gt;\n                @csrf &lt;!-- &lt;&lt;L'annotation ici ! --&gt;\n                &lt;div class=\"input-group\"&gt;\n                    &lt;span class=\"input-group-addon\" id=\"basic-addon1\"&gt;&lt;span class=\"oi oi-pencil\"&gt;&lt;/span&gt;&lt;/span&gt;\n                    &lt;input id=\"texte\" name=\"texte\" type=\"text\" class=\"form-control\" placeholder=\"Prendre une note...\" aria-label=\"My new idea\" aria-describedby=\"basic-addon1\"&gt;\n                    @if (session('message'))\n                        &lt;p class=\"alert alert-danger\"&gt;{{ session('message') }}&lt;/p&gt;\n                    @endif\n                &lt;/div&gt;\n                &lt;div class=\"priority-choice\"&gt;\n                    Importance : \n                    &lt;input type=\"radio\" name=\"priority\" id=\"lowpr\" value=\"0\" checked&gt;&lt;label for=\"lowpr\"&gt;&lt;i class=\"bi bi-reception-1\"&gt;&lt;/i&gt;&lt;/label&gt;\n                    &lt;input type=\"radio\" name=\"priority\" id=\"highpr\" value=\"1\"&gt;&lt;label for=\"highpr\"&gt;&lt;i class=\"bi bi-reception-4\"&gt;&lt;/i&gt;&lt;/label&gt;\n                    &lt;button type=\"submit\" class=\"btn btn-primary\"&gt;&lt;i class=\"bi bi-save\"&gt;&lt;/i&gt;&lt;/button&gt;\n                &lt;/div&gt;\n            &lt;/form&gt;\n\n            &lt;!-- Liste --&gt;\n            &lt;ul class=\"list-group\"&gt;\n                @forelse ($todos as $todo)\n                    &lt;li class=\"list-group-item\"&gt;\n                        &lt;!-- Affichage de la priorit\u00e9 --&gt;\n                        @if ($todo-&gt;important == 0)\n                            &lt;i class=\"bi bi-reception-1\"&gt;&lt;/i&gt;\n                        @elseif ($todo-&gt;important == 1)\n                            &lt;i class=\"bi bi-reception-4\"&gt;&lt;/i&gt;\n                        @endif\n                        &lt;!-- Affichage du texte --&gt;\n                        &lt;span&gt;{{ $todo-&gt;texte }}&lt;/span&gt;\n                        &lt;!-- Action \u00e0 ajouter pour Terminer et supprimer --&gt;\n                        @if ($todo-&gt;termine === 0)\n                            &lt;!-- Si un ToDo n'est pas termin\u00e9, Action \u00e0 ajouter pour terminer --&gt;\n                            &lt;a href=\"{{ route('todo.done', ['id' =&gt; $todo-&gt;id]) }}\" class=\"btn btn-success\"&gt;&lt;i class=\"bi bi-check2-square\"&gt;&lt;/i&gt;&lt;/a&gt;\n                            &lt;!--&lt;button class=\"btn btn-primary btn-lg\"&gt;&lt;span class=\"fa fa-user\"&gt;&lt;/span&gt;&lt;br&gt;Terminer&lt;/button&gt;--&gt;\n                        @elseif ($todo-&gt;termine === 1)\n                            &lt;!-- Si un ToDo est termin\u00e9, Action \u00e0 ajouter pour supprimer --&gt;\n                            &lt;a href=\"{{ route('todo.delete', ['id' =&gt; $todo-&gt;id]) }}\" class=\"btn btn-danger\"&gt;&lt;i class=\"bi bi-trash3\"&gt;&lt;/i&gt;&lt;/i&gt;&lt;/a&gt;\n                            @if (session('validation'))\n                                &lt;p class=\"alert alert-success\"&gt;{{ session('validation') }}&lt;/p&gt;\n                            @endif\n                        @endif\n                        @if ($todo-&gt;important == 0)\n                            &lt;!-- Action \u00e0 ajouter pour monter la priorit\u00e9 --&gt;\n                            &lt;a href=\"{{ route('todo.raise', ['id'=&gt; $todo-&gt;id]) }}\"&gt;&lt;i class=\"bi bi-arrow-up-circle\"&gt;&lt;/i&gt;&lt;/a&gt;\n                        @elseif ($todo-&gt;important == 1)\n                            &lt;!-- Action \u00e0 ajouter pour descendre la priorit\u00e9 --&gt;\n                            &lt;a href=\"{{ route('todo.lower', ['id' =&gt; $todo-&gt;id]) }}\"&gt;&lt;i class=\"bi bi-arrow-down-circle\"&gt;&lt;/i&gt;&lt;/a&gt;\n                        @endif\n                    &lt;/li&gt;\n                @empty\n                    &lt;li class=\"list-group-item text-center\"&gt;C'est vide !&lt;/li&gt;\n                @endforelse\n            &lt;/ul&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n@endsection\n</code></pre> <p>tip</p> <p>Vous n'aurez pas besoin de tout le contenu du home.blade.php dans un premier temps.  Je vous conseille de mettre de c\u00f4t\u00e9 ce code et de dans le home.blade.php de supprimer  de : PHP<pre><code>&lt;!-- Action \u00e0 ajouter pour Terminer et supprimer --&gt;\n@if ($todo-&gt;termine === 0)\n</code></pre> \u00e0  PHP<pre><code>    @elseif ($todo-&gt;important == 1)\n    &lt;!-- Action \u00e0 ajouter pour descendre la priorit\u00e9 --&gt;\n    &lt;a href=\"{{ route('todo.lower', ['id' =&gt; $todo-&gt;id]) }}\"&gt;&lt;i class=\"bi bi-arrow-down-circle\"&gt;&lt;/i&gt;&lt;/a&gt;\n@endif\n</code></pre></p> @extends ? \u00c0 quoi sert cette directive, pourquoi \u00ab template \u00bb? <p>Modifier le titre affich\u00e9 dans la barre.</p> \u00c0 quoi correspond le @forelse \u2026 @empty \u2026 @endforelse? <p>Boucler sur la collection de Todos et afficher chaque Todo</p> <p>Recap</p> <p>Nous avons : -   Le modele. -   Le contr\u00f4leur. -   Les templates (template et home). Il faut maintenant assembler l'ensemble pour que votre page s'affiche lors d'une requ\u00eate HTTP.</p>"},{"location":"4_Laravel/4.2_toDo/4.2.1_initialisation/#162-creation-des-routes","title":"1.6.2 Cr\u00e9ation des routes","text":"<p>La d\u00e9finition des routes se fait dans le fichier <code>routes/web.php</code>,  d\u00e9commenter <code>Route::get('/', [TodosController::class, 'liste'])-&gt;name('todo.liste');</code> </p> \u00c0 quoi correspond la notation TodosController@liste ? <p>Lien vers le controller Todos</p> <p> Tester Vous voyez \u00ab Liste \u00bb ? C'est </p>"},{"location":"4_Laravel/4.2_toDo/4.2.1_initialisation/#163-affichage-de-la-liste","title":"1.6.3 Affichage de la liste","text":"<p>On va modifier la m\u00e9thode <code>liste()</code> pour qu'elle appelle la bonne vue ici <code>home</code> et qu'elle aille chercher la collection des todos en base :</p> Code de la fonction liste PHP<pre><code>use App\\Models\\Todos;\n//Liste\npublic function liste()\n{\n    return view(\"home\", [\"todos\" =&gt; Todos::all()]);\n}\n</code></pre>  Tester <ul> <li> Cr\u00e9er un todo dans la base de donn\u00e9e ...  Rafraichissez la page, vous devez maintenant voir votre texte </li> </ul>"},{"location":"4_Laravel/4.2_toDo/4.2.1_initialisation/#17-sauvegarde-du-formulaire-et-enregitsrement-en-base","title":"1.7 Sauvegarde du formulaire et enregitsrement en base","text":""},{"location":"4_Laravel/4.2_toDo/4.2.1_initialisation/#171-ceer-la-fonction-save-dans-le-controleur","title":"1.7.1 c\u00e9er la fonction Save dans le controleur","text":"<p>Pour utiliser les fonctionnalit\u00e9s Eloqent, vous pouvez consulter la documentation ici.</p> fonction save PHP<pre><code> public function saveTodo(Request $request){\n\n    $texte = $request-&gt;input('texte');\n\n    if($texte){\n        $todo = new Todos();\n        $todo-&gt;texte = $texte;\n        $todo-&gt;termine = 0;\n        $todo-&gt;Important = 0;\n        $todo-&gt;save();\n\n        return redirect()-&gt;route('todo.liste');\n    } else{\n        return redirect()-&gt;route('todo.liste')-&gt;with('message', \"Veuillez saisir une note \u00e0 ajouter\");\n    }     \n}\n</code></pre> <p>Vous prendrez le temps de remarquer que ce code g\u00e8re les messages d'erreur avec Bootstrap. On \"attrape\" l'erreur en testant le champ texte, qui doit ici \u00eatre non vide et on ajoute un \u00e9l\u00e9ment \u00e0 la route. Element qui sera mapp\u00e9 avec la vue home et plus pr\u00e9cisement avec le champ message PHP<pre><code>@if (session('message'))\n    &lt;p class=\"alert alert-danger\"&gt;{{ session('message') }}&lt;/p&gt;\n@endif\n</code></pre> Il manque encore un \u00e9l\u00e9ment pour finaliser ce besoin : La route. Il faut ajouter le lien vers la fonction saveTodo du controleur.</p> <p>PHP<pre><code>Route::post('/action/add', [TodosController::class, 'saveTodo'])-&gt;name('todo.save');\n</code></pre> et encore faut il appeler cette route lorsque l'on clique sur le bouton \"Save\" ! V\u00e9rifier dans la vue home que vous ayez bien l'appel \u00e0 votre route.</p> PHP<pre><code>&lt;form action=\"{{ route('todo.save') }}\" method=\"POST\" class=\"add\"&gt;\n</code></pre> <p>Erreur \u00e0 traiter</p> Enonc\u00e9Solution <p>Il manque le champ 'id' dans la requete d'insertion. </p> <p>Il faut passer le champ id en autoIncr\u00e9ment et relancer le fresh de migration.</p> <p>PHP<pre><code>$table-&gt;integer('id')-&gt;autoIncrement();\n#$table-&gt;primary('id');\n</code></pre> Dans ce cas, laravel cr\u00e9\u00e9 un index sur le champ id, il devient inutile de le d\u00e9clarer en primary key. Mais dans la base de donn\u00e9e, le champ est bien cl\u00e9 primaire.</p>"},{"location":"4_Laravel/4.2_toDo/4.2.1_initialisation/#18-user-story","title":"1.8 User Story","text":""},{"location":"4_Laravel/4.2_toDo/4.2.1_initialisation/#181-user-story-1-save-todo-traiter-le-champ-important-priorite-hautefaible","title":"1.8.1 User story 1 : save Todo : traiter le champ Important \"Priorit\u00e9 haute/faible\"","text":"<p> Adaptez votre Controleur pour prendre en compte le champ Important.</p> solution <p>Modifier la fonction \"Save\" du contr\u00f4leur</p> PHP<pre><code> public function saveTodo(Request $request){\n    $texte = $request-&gt;input('texte');\n    $button = $request-&gt;input('priority');\n\n    if($texte){\n        $todo = new Todos();\n        $todo-&gt;texte = $texte;\n        $todo-&gt;termine = 0;\n        #Gestion du bouton Important\n        if($button=='1'){\n            $todo-&gt;Important = 1;\n        } elseif($button=='0'){\n            $todo-&gt;Important = 0;\n        }\n        $todo-&gt;save();\n        return redirect()-&gt;route('todo.liste');\n    } else{\n        return redirect()-&gt;route('todo.liste')-&gt;with('message', \"Veuillez saisir une note \u00e0 ajouter\");\n    }\n\n}\n</code></pre>"},{"location":"4_Laravel/4.2_toDo/4.2.1_initialisation/#182-user-story-1-baisser-limportance-dun-todo","title":"1.8.2  User story 1 : Baisser l'importance d'un toDo.","text":"<p>Besoin : A la saisie, on peut choisir l'importance d'un Todo. Fonctionnalit\u00e9 : Pouvoir ajuster L'importance de chaque ToDo </p>"},{"location":"4_Laravel/4.2_toDo/4.2.1_initialisation/#183-user-story-2-passer-un-todo-a-termine","title":"1.8.3 User story 2 : Passer un ToDo \u00e0 Termin\u00e9.","text":"<p>Sur l'icone <code>&lt;i class=\"bi bi-check2-square\"&gt;&lt;/i&gt;</code>, ajouter l'action de passer un Todo \u00e0 Termin\u00e9</p>"},{"location":"4_Laravel/4.2_toDo/4.2.1_initialisation/#184-user-story-3-supprimer-un-todo","title":"1.8.4 User Story 3 : Supprimer un ToDo","text":"<p> On ne peut pas supprimer un Todo qui n'est pas termin\u00e9</p>"},{"location":"4_Laravel/4.2_toDo/4.2.1_initialisation/#185-user-story-4-compteur","title":"1.8.5 User Story 4 : Compteur","text":"<p>Ajouter une page qui d\u00e9nombre les Todos Non termin\u00e9s et les Todos termin\u00e9s.</p>"},{"location":"4_Laravel/4.2_toDo/4.2.2_Ajout_cat%C3%A9gorie/","title":"2. Evolution : Gestion des cat\u00e9gories","text":"<p>Dans ce TP nous allons r\u00e9aliser une application web, \u00ab TODO \u00bb ou aussi appel\u00e9 liste de t\u00e2ches. Une TODO List est un proc\u00e9d\u00e9 qui se veut simple et efficace pour g\u00e9rer les t\u00e2ches d'un projet. Ces t\u00e2ches peuvent \u00eatre ind\u00e9pendantes ou devoir, au contraire, \u00eatre accomplies dans un certain ordre. Ces t\u00e2ches pourront \u00e9galement \u00eatre cat\u00e9goris\u00e9es (pro, perso, famille, ...).</p> <p>Voil\u00e0 la liste des fonctionnalit\u00e9s de l\u2019application que l'on va ajouter : - attribuer une ou plusieurs cat\u00e9gories pour chaque Todo - Cr\u00e9ation d'une page de recherche</p>"},{"location":"4_Laravel/4.2_toDo/4.2.2_Ajout_cat%C3%A9gorie/#21-gestion-de-la-categorie","title":"2.1 Gestion de la cat\u00e9gorie","text":""},{"location":"4_Laravel/4.2_toDo/4.2.2_Ajout_cat%C3%A9gorie/#211-relation-many-to-many","title":"2.1.1 Relation Many To Many","text":"<p>On va avoir besoin de d\u00e9clarer qu'un todo peut appartenir \u00e0 plusieurs cat\u00e9gories et une cat\u00e9gorie classifie plusieurs todos. La relation est sym\u00e9trique.</p> <p>On ajoute l'espace de noms n\u00e9cessaire \u00e0 la gestion de cette relation dans les 2 models.</p> PHP<pre><code>use Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany;\n</code></pre> <p>Puis \u00e0 l'int\u00e9rieur de la classe, on ajoute les m\u00e9thodes d'association.</p> <p>Dans Todos.php</p> PHP<pre><code>    public function categories(): BelongsToMany\n        {\n            return $this-&gt;belongsToMany(Categories::class);\n        }\n</code></pre> code complet de Todos.php PHP<pre><code>&lt;?php\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany;\n\nclass Todos extends Model\n{\n    use HasFactory;\n\n    protected $fillable = ['texte', 'termine', 'important'];\n\n    public function categories(): BelongsToMany\n    {\n        return $this-&gt;belongsToMany(Categories::class);\n    }\n}\n</code></pre> <p>Dans Categories.php</p> PHP<pre><code>    public function todos(): BelongsToMany\n        {\n            return $this-&gt;belongsToMany(Todos::class);\n        }\n</code></pre> code complet de cat\u00e9gories.php PHP<pre><code>&lt;?php\n\nnamespace App\\Models;\n\n\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany;\n\nclass Categories extends Model\n{\n    use HasFactory;\n\n    public function todos(): BelongsToMany\n    {\n        return $this-&gt;belongsToMany(Todos::class);\n    }\n}\n</code></pre> <p>On d\u00e9clare ici avec la m\u00e9thode todos (au pluriel) qu\u2019une cat\u00e9gorie appartient \u00e0 plusieurs (belongsToMany) todos (Todos). On aura ainsi une m\u00e9thode pratique pour r\u00e9cup\u00e9rer les todos d\u2019une cat\u00e9gorie. Idem pour les cat\u00e9gories.</p>"},{"location":"4_Laravel/4.2_toDo/4.2.2_Ajout_cat%C3%A9gorie/#212-le-seeder","title":"2.1.2 Le seeder","text":"<p>On fait le choix de ne pas cr\u00e9er d'interface pour ajouter les cat\u00e9gories (Mais vous pouvez le faire ). On va donc faire une saisie directement en Base de donn\u00e9es. Mais en phase de mise au ppoint d'application, vous vous \u00eates rendu compte que l'on peut avoir besoin de flasher sa base. Ce qui peut \u00eatre facheux lorsque l'on souhaite conserver quleques donn\u00e9es. On va donc passer par de <code>seeders</code>, int\u00e9gr\u00e9 \u00e0 la Laravel, ce sont des scripts qui permettront des injections de donn\u00e9es en Base, comme pour les tables de param\u00e9trages ou des jeux de donn\u00e9es.</p> Chat GPT question <p>Il peut \u00eatre tres pratique d'utiliser une IA pour g\u00e9n\u00e9rer ses <code>seeders</code>. Vous trouverez ci dessous la question poser \u00e0 chatGPT pour g\u00e9n\u00e9rer le <code>CategoriesTableSeeder</code>. </p> <p>Je travaille dans le contexte Laravel 10 pour cr\u00e9er une application de gestion de taches. Une tache peut \u00eatre affecter \u00e0 une cat\u00e9gorie : pro, famille, sport, associatif par exemple. Ci dessous le code de la migration de la table : </p> <p>```php     public function up(): void     {         Schema::create('categories', function (Blueprint $table) {             $table-&gt;integer('idcat');             $table-&gt;string('libelle');             $table-&gt;primary('idcat');             $table-&gt;timestamps();         });     } ```` Peux tu me donner le seeder correspondant ?</p> <p>On va cr\u00e9er un nouveau fichier dans le r\u00e9pertoire <code>database\\seeders</code>, qui contiendra les donn\u00e9es \u00e0 injecter en table.  On pourra l'ex\u00e9cuter directement en utilisant la commande suivante :</p> \ud83d\udccb Texte<pre><code>```prompt \nphp artisan db:seed --class=CategoriesSeeder\n\n```\n</code></pre> Code de CategoriesSeeder PHP<pre><code>&lt;?php\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\nuse Illuminate\\Support\\Facades\\DB;\nuse Illuminate\\Support\\Facades\\Hash;\nuse Illuminate\\Support\\Str;\n\nclass CategoriesSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     *\n     * @return void\n     */\n    public function run()\n    {\n        $categories = [\n            ['idcat' =&gt; 1, 'libelle' =&gt; 'Pro'],\n            ['idcat' =&gt; 2, 'libelle' =&gt; 'Famille'],\n            ['idcat' =&gt; 3, 'libelle' =&gt; 'Sport'],\n            ['idcat' =&gt; 4, 'libelle' =&gt; 'Associatif'],\n            // Ajoutez d'autres cat\u00e9gories au besoin\n        ];\n\n        // Insertion des donn\u00e9es dans la table 'categories'\n        DB::table('categories')-&gt;insert($categories);\n    }\n}\n?&gt;\n</code></pre> <p>On va \u00e9galement ajouter un seeder \u00e0 la propri\u00e9t\u00e9 $seeders du fichier DatabaseSeeder.php afin qu'il soit ex\u00e9cut\u00e9 lors de la commande php artisan db:seed.</p> Code de DatabaseSeeder PHP<pre><code>class DatabaseSeeder extends Seeder\n{\n    /**\n     * Seed the application's database.\n     */\n    public function run(): void\n    {\n        //Ajout de la classe CategoriesSeeder\n        $this-&gt;call([\n            CategoriesSeeder::class,\n        ]);\n    }\n}\n</code></pre> <p>Lorsque est lanc\u00e9 la commande de (re)cr\u00e9ation de la base, on peut ajouter l'option <code>--seed</code> pour alimenter les tables avec un jeu de test</p> <p>\ud83d\udccb Texte<pre><code>php artisan migrate:fresh --seed\n\nphp artisan migrate:fresh --seed --seeder=CategoriesSeeder\n</code></pre> A faire : Ajouter un seeder pour Todo</p>"},{"location":"4_Laravel/4.2_toDo/4.2.2_Ajout_cat%C3%A9gorie/#213-le-controller-categorie","title":"2.1.3 Le controller Cat\u00e9gorie","text":"<p> G\u00e9n\u00e9rer le controller de Cat\u00e9gorie en ligne de commande.</p> solution au cas o\u00f9 PHP<pre><code>php artisan make:controller CategorieController\n</code></pre> <p> Ajouter le code pour r\u00e9cup\u00e9rer la liste des cat\u00e9gorie</p> code de categoriesController PHP<pre><code>/**\n * Affiche la liste des cat\u00e9gories.\n *\n * @return \\Illuminate\\Http\\Response\n */\npublic function listeCat\u00e9gories()\n{\n    return view(\"home\", [\"categories\" =&gt; Categories::all()]);\n}\n</code></pre> <p> Pour afficher la liste des Todos, on utilise le controller Todo. On va donc ajouter \u00e0 l'appel de la liste des Todos, la liste des cat\u00e9gories.  Ne pas oublier de faire les import de librairies n\u00e9cessaires.</p> code liste() dans todocontroller PHP<pre><code>//Liste\npublic function liste()\n{\n    return view(\"home\", [\"todos\" =&gt; Todos::all(), \"categories\" =&gt; Categories::all()]);\n}\n</code></pre> <p> Conclusion : ici on ne se sert pas du controller Categories.</p>"},{"location":"4_Laravel/4.2_toDo/4.2.2_Ajout_cat%C3%A9gorie/#214-la-vue-home-pour-ajouter-les-categories","title":"2.1.4 La vue home pour ajouter les cat\u00e9gories","text":"<p>On va d'abord ajouter dans la liste des Todos, l'affichage des cat\u00e9gories. </p> <p>Dans la liste des Todos</p> Code dans home pour la liste des cat\u00e9gorie PHP<pre><code>&lt;!-- Affichage du texte --&gt;\n&lt;span&gt;{{ $todo-&gt;texte }}&lt;/span&gt;\n    &lt;!-- Affichage de la cat\u00e9gorie --&gt;\n    &lt;p&gt;Cat\u00e9gories :&lt;/p&gt;\n        &lt;ul&gt;\n            @foreach($todo-&gt;categories as $category)\n                &lt;li&gt;{{ $category-&gt;libelle }}&lt;/li&gt;\n             @endforeach\n            &lt;/ul&gt;\n    &lt;/p&gt;\n</code></pre> <p>Puis dans le formulaire de saisie d'un Todo</p> Code dans home pour les boites \u00e0 cocher PHP<pre><code> &lt;!-- boites \u00e0 cocher pour les cat\u00e9gories --&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;label&gt;Cat\u00e9gories&lt;/label&gt;\n    @foreach($categories as $categorie)\n        &lt;div class=\"form-check\"&gt;\n            &lt;input class=\"form-check-input\" type=\"checkbox\" name=\"categories[]\" value=\"{{ $categorie-&gt;id }}\"&gt;\n            &lt;label class=\"form-check-label\"&gt;{{ $categorie-&gt;libelle }}&lt;/label&gt;\n        &lt;/div&gt;\n    @endforeach\n&lt;/div&gt;\n</code></pre> <p>Remarquez que le nom du select est accompagn\u00e9 de crochets (<code>categories[]</code>) pour signifier qu\u2019on va envoyer un tableau de valeurs dans la requ\u00eate HTTP.</p> <p> Ne pas tester encore \u00e0 cette \u00e9tape, le travail n'est pas fini.</p>"},{"location":"4_Laravel/4.2_toDo/4.2.2_Ajout_cat%C3%A9gorie/#215-afficher-les-categories-dun-todo","title":"2.1.5 Afficher les cat\u00e9gories d'un Todo","text":"<p>On est dans une relation n:n, il faudrait donc g\u00e9rer en th\u00e9orie des requ\u00eates de jointures entre les tables pour afficher le libell\u00e9 de chaque cat\u00e9gorie pour un Todo. On va utiliser de la  magie de Laravel pour lui laisser cette t\u00e2che.</p> <p>Dans le provider <code>RouteServiceProvider</code> qui, comme son nom l\u2019indique, est consacr\u00e9 aux routes, on va ajouter le code ci dessous. L'id\u00e9e est de charger pour chaque Route l'ensemble des cat\u00e9gories associ\u00e9es \u00e0 un Todo.</p> PHP<pre><code>    Route::bind('todos', function ($value) {\n            return Todos::with('categories')-&gt;find($value) ?? abort(404);\n        });\n</code></pre> <p> Le souci est que cette m\u00e9thode va nous obliger \u00e0 revoir le nom des champs des noms pour laisser \u00e0 Laravel le soin de faire ses jointures.    Je vous invite \u00e0 debugger par vous m\u00eame votre application. Il va falloir supprimer la migration <code>categorise</code> pour recr\u00e9er une nouvelle migration \"propre\".</p> Solutions <p> Cr\u00e9er la migration de la table d'association <code>create_categories_todos_table. et supprimer celle de</code>categorise`.</p> <p>PHP<pre><code>public function up(): void\n{\n    Schema::create('categories_todos', function (Blueprint $table) {\n        $table-&gt;integer('categories_id');\n        $table-&gt;integer('todos_id');\n\n        $table-&gt;foreign('categories_id')-&gt;references('id')-&gt;on('categories');\n        $table-&gt;foreign('todos_id')-&gt;references('id')-&gt;on('todos');\n\n        $table-&gt;primary(['categories_id', 'todos_id']);\n        $table-&gt;timestamps();\n    });\n}\n</code></pre>  Reprendre la migration de la table   <code>cat\u00e9gories</code></p> PHP<pre><code> public function up(): void\n{\n    Schema::create('categories', function (Blueprint $table) {\n        $table-&gt;integer('id');\n        $table-&gt;string('libelle');\n        $table-&gt;primary('id');\n        $table-&gt;timestamps();\n    });\n}\n</code></pre> <p> Reprendre la migration de la table   <code>Todos</code></p> PHP<pre><code>public function up(): void\n{\n    Schema::create('todos', function (Blueprint $table) {\n        $table-&gt;integer('id')-&gt;autoIncrement();\n        #$table-&gt;primary('id');\n        $table-&gt;string('texte');\n        $table-&gt;boolean('termine')-&gt;default(0);\n        $table-&gt;boolean('important')-&gt;default(0);\n\n        $table-&gt;timestamps();\n    });\n}\n</code></pre> <p> Relancer la migration et les seeders <code>php artisan migrate:fresh --seed</code></p>"},{"location":"4_Laravel/4.2_toDo/4.2.2_Ajout_cat%C3%A9gorie/#216-adapter-le-code-de-savetodo-pour-enregister-la-categorie-du-todo","title":"2.1.6 Adapter le code de SaveTodo pour enregister la cat\u00e9gorie du Todo","text":"<p>Pour la gestion de la cat\u00e9gorie, je vous rappelle que nous avons d\u00e9j\u00e0 g\u00e9r\u00e9<code>les jointures par magie :sparkles:. On va continuer \u00e0 utiliser cette m\u00e9canique pour la sauvegarde.&lt;br /&gt; On envoie par la vue</code>home<code>un tableau de cat\u00e9gories</code>name=\"categories[]\"`. Lisez un peu de documentation ici et essayer de l'adapter \u00e0 votre projet.</p> Solution PHP<pre><code>public function saveTodo(Request $request){\n    //....\n        $todo-&gt;save();\n        $todo-&gt;categories()-&gt;attach($cats); /*A ajouter */\n        return redirect()-&gt;route('todo.liste');\n    } else{\n        return redirect()-&gt;route('todo.liste')-&gt;with('message', \"Veuillez saisir une note \u00e0 ajouter\");\n    }\n\n}\n</code></pre>"},{"location":"4_Laravel/4.2_toDo/4.2.2_Ajout_cat%C3%A9gorie/#217-delete-un-todo","title":"2.1.7 Delete un ToDo","text":"<p>Si vous essayer de supprimer un Todo, \u00e0 cette \u00e9tape, cela va provoquer une erreur d'int\u00e9grit\u00e9 r\u00e9f\u00e9rentielle. </p> <p> A Faire : Trouver la solution pour supprimer l'association cat\u00e9gorie_todo en cascade d'un ToDo.</p> solution <p>Il faut modifier la migration de Todo pour ajouter la fonction SQL de deleteOnCascade.</p> PHP<pre><code>public function up(): void\n{\n    Schema::create('categories_todos', function (Blueprint $table) {\n        $table-&gt;integer('categories_id');\n        $table-&gt;integer('todos_id');\n\n        $table-&gt;foreign('categories_id')-&gt;references('id')-&gt;on('categories');\n        $table-&gt;foreign('todos_id')-&gt;references('id')-&gt;on('todos')\n            -&gt;onDelete('cascade');\n\n        $table-&gt;primary(['categories_id', 'todos_id']);\n        $table-&gt;timestamps();\n    });\n}\n</code></pre> <p> relancer la migration et Tester !</p>"},{"location":"4_Laravel/4.2_toDo/4.2.2_Ajout_cat%C3%A9gorie/#22-la-notion-de-softdelete","title":"2.2 La notion de softDelete","text":"<p>Documentation</p> <p>les soft deletes permettent de marquer un enregistrement comme \"supprim\u00e9\" sans le supprimer r\u00e9ellement de la base de donn\u00e9es. Cela peut \u00eatre utile dans de nombreux cas, par exemple lorsque vous avez des enregistrements que vous ne voulez pas supprimer d\u00e9finitivement, mais que vous voulez simplement cacher aux utilisateurs.</p> <p>Pour utiliser les soft deletes sur vos mod\u00e8les, vous devez d'abord ajouter le trait softDeletes \u00e0 votre classe Model Todos.php:</p> code de Todos.php PHP<pre><code>&lt;?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany;\n\nuse Illuminate\\Database\\Eloquent\\SoftDeletes;\n\nclass Todos extends Model\n{\n    use HasFactory;\n    use SoftDeletes;\n\n    protected $fillable = ['texte', 'termine', 'important'];\n\n    public function categories(): BelongsToMany\n    {\n        return $this-&gt;belongsToMany(Categories::class);\n    }\n\n\n}\n</code></pre> <p>Ensuite, vous devez ajouter une colonne de type \"deleted_at\" \u00e0 votre table. Vous pouvez le faire en ajoutant simplement la date colonne suivante \u00e0 votre migration :</p> migration Todo PHP<pre><code>public function up(): void\n{\n    Schema::create('todos', function (Blueprint $table) {\n        $table-&gt;integer('id')-&gt;autoIncrement();\n        #$table-&gt;primary('id');\n        $table-&gt;string('texte');\n        $table-&gt;boolean('termine')-&gt;default(0);\n        $table-&gt;boolean('important')-&gt;default(0);\n\n        $table-&gt;timestamps();\n        /*Utilisation du softDelete*/\n        $table-&gt;softDeletes();\n    });\n}\n</code></pre> <p>Une fois que vous avez ajout\u00e9 la colonne, vous pouvez commencer \u00e0 utiliser la fonctionnalit\u00e9 soft deletes. Pour \"supprimer\" un enregistrement, en appelant la m\u00e9thode <code>delete()</code>, cela va mettre \u00e0 jour la colonne <code>deleted_at</code> avec la date et l'heure actuelles, ce qui marquera l'enregistrement comme supprim\u00e9.  Attention, dans notre cas, on ne peut supprimer un ToDo que si il est \"termin\u00e9\". Vous devez donc laisser la structure conditionnelle dans lequel est votre appel de <code>delete()</code>.</p> PHP<pre><code>$todo = Todos::find($id);\n        if($todo-&gt;termine == 1){\n            $todo-&gt;delete();\n        }\n</code></pre>"},{"location":"4_Laravel/4.2_toDo/4.2.2_Ajout_cat%C3%A9gorie/#23-les-groupes-de-routes","title":"2.3 Les groupes de routes","text":"<p>Si plusieurs routes ont des informations communes il est possible de les grouper ensemble.</p> Code de web.php PHP<pre><code>    Route::controller(TodosController::class)-&gt;group(function () {\n\n    Route::post('/action/add', 'saveTodo')-&gt;name('todo.save');\n    Route::get('/action/done/{id}' , 'markAsDone')-&gt;name('todo.done');\n    Route::get('/action/delete/{id}', 'deleteTodo')-&gt;name('todo.delete');\n    Route::get('/action/lower/{id}',  'lowerPriority')-&gt;name('todo.lower');\n    Route::get('/action/raise/{id}', 'raisePriority')-&gt;name('todo.raise');\n});\n</code></pre>"},{"location":"4_Laravel/4.2_toDo/4.2.2_Ajout_cat%C3%A9gorie/#24-une-nouvelle-page-recherche","title":"2.4 Une nouvelle page : Recherche","text":"<p>User story : On souhaite cr\u00e9er une page de Recherche par mot cl\u00e9. Cette page disposera d'un champ texte pour saisir un mot-cl\u00e9. A la validation de ce formulaire, l'application retournera tous les Todos contenant ce mot-cl\u00e9 dans leur texte, y compris dans les ToDos d\u00e9j\u00e0 supprim\u00e9s.</p>"},{"location":"4_Laravel/4.2_toDo/4.2.3_prolongement_middleware/","title":"3. Utilisation des middlewares","text":""},{"location":"4_Laravel/4.2_toDo/4.2.3_prolongement_middleware/#31-lauthentification","title":"3.1 l'authentification","text":"<p>tuto</p> <p>De mani\u00e8re simplifi\u00e9e, on va utiliser le package <code>Laravel\\breeze</code>, pour le middelware d'authentification.</p> <p>D\u00e9finition Middelware</p> <p>Dans le contexte d'un framework PHP, un middleware est une composante logicielle qui agit comme une couche interm\u00e9diaire entre la requ\u00eate entrante et la r\u00e9ponse sortante dans le processus de traitement d'une application web. Les middlewares sont couramment utilis\u00e9s pour effectuer des t\u00e2ches sp\u00e9cifiques telles que l'authentification, l'autorisation, la gestion des cookies, la mise en cache, la journalisation, la compression des r\u00e9ponses, et d'autres op\u00e9rations li\u00e9es au traitement de la requ\u00eate.</p> <p>Un middleware peut \u00eatre con\u00e7u pour intervenir \u00e0 diff\u00e9rents moments du cycle de vie d'une requ\u00eate HTTP. Dans de nombreux frameworks PHP, notamment Laravel et Symfony, les middlewares sont souvent utilis\u00e9s dans le processus de gestion des requ\u00eates HTTP.</p>"},{"location":"5_Programmation_SQL/sommaire/","title":"Sommaire","text":"<p>Comp\u00e9tences</p> <p>B2.3 SLAM G\u00e9rer les donn\u00e9es D\u00e9velopper des fonctionnalit\u00e9s applicatives au sein d\u2019un syst\u00e8me de gestion de base de donn\u00e9es (relationnel ou non)</p> <p>R\u00e9pondre aux incidents et aux demandes d'assistance et d'\u00e9volution</p> <p>Bibliographie</p> <ul> <li>Cours de Transat SQL : Pr H.LAARAJ</li> <li>Aide Transact-SQL \u00e0 partir de SQL Server</li> <li>Cours de SGBD Pr. Naoual ABDALLAH</li> <li>Gestion des proc\u00e9dures stock\u00e9es en MySQL</li> <li>OPenclassRoom</li> </ul>"},{"location":"5_Programmation_SQL/sommaire/#contexte","title":"Contexte","text":"<p>La base de donn\u00e9es GestionCom  sera utilis\u00e9e en appplication de ce cours est comme suivante :</p> <p></p> <p></p> <p>Script de cr\u00e9ation de la base GESCOM</p> A faireCorrection <p>Cr\u00e9er le script de cr\u00e9ation de la base de donn\u00e9es (Attention \u00e0 int\u00e9grer les contraintes d\u2019int\u00e9grit\u00e9). Attention pour les besoins de ce TP, nous aurons besoin que les tables soient TRANSACTIONNELLES.  MyISAM ne supportant pas les contraintes de cl\u00e9s \u00e9trang\u00e8res, les tables doivent \u00eatre cr\u00e9\u00e9es avec le moteur InnoDB. En effet : -   \ud83d\udcccles tables MyISAM sont non transactionnelles, donc ne supportent pas les transactions. -   \ud83d\udcccles tables InnoDB sont transactionnelles, donc supportent les transactions.</p> \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>USE gescom;\nCREATE TABLE COMMANDE (\nNumcom int PRIMARY KEY,\nDatcom DATETIME)ENGINE=InnoDB;\n\nCREATE TABLE ARTICLE (\nNumart int PRIMARY KEY,\nDesart varchar(50),\nPUart decimal(10,2),\nQteEnStock int,\nSeuilMin int,\nSeuilMax int)ENGINE=InnoDB;\n\nCREATE TABLE LIGNECOMMANDE (\nNumcom int,\nNumart int,\nQteCommandee int,\nCONSTRAINT pk_lc PRIMARY KEY (numcom, numart),\nCONSTRAINT fk_lc_com FOREIGN KEY (Numcom) REFERENCES COMMANDE(Numcom),\nCONSTRAINT fk_lc_art FOREIGN KEY (Numart) REFERENCES ARTICLE(Numart)\n)ENGINE=InnoDB;\n</code></pre> <p>N'oubliez pas de cr\u00e9er votre jeu de donn\u00e9es au fur et \u00e0 mesure pour tester les applications de cours</p> <ol> <li>Proc\u00e9dures stock\u00e9es </li> <li>Le transactionnel </li> <li>Les curseurs </li> <li>Triggers et d\u00e9clencheurs </li> </ol>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/cours/","title":"Les proc\u00e9dures stock\u00e9es","text":""},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/cours/#1-definition","title":"1. D\u00e9finition","text":"<p>MySQL est un langage proc\u00e9dural (par opposition \u00e0 SQL qui est un langage d\u00e9claratif). Il permet de programmer des algorithmes de traitement des donn\u00e9es au sein des SGBDR (ici MySQL, on aura PL/SQL pour oracle, TRANSACT/SQL pour SQL Server). MySQL n'a aucun aspect normatif contrairement \u00e0 SQL. C'est bien un \"produit\" au sein commercial du terme. En revanche depuis SQL2 et plus fortement maintenant, avec SQL3, la norme SQL a pr\u00e9vu les \u00e9l\u00e9ments de langage proc\u00e9dural normatif propre au langage SQL. Mais il y a une tr\u00e8s grande diff\u00e9rence entre la norme du SQL proc\u00e9dural et la programmation BD.</p> <p>Les proc\u00e9dures stock\u00e9es sont disponibles depuis la version 5 de MySQL.  \u23e9 Elles permettent d'automatiser des actions qui peuvent \u00eatre tr\u00e8s complexes. Une proc\u00e9dure stock\u00e9e est en fait une s\u00e9rie d'instructions SQL d\u00e9sign\u00e9e par un nom. Lorsque l'on cr\u00e9e une proc\u00e9dure stock\u00e9e, on l'enregistre dans la base de donn\u00e9es que l'on utilise, au m\u00eame titre qu'une table, par exemple. Une fois la proc\u00e9dure cr\u00e9\u00e9e, il est possible d'appeler celle-ci par son nom. Les instructions de la proc\u00e9dure sont alors ex\u00e9cut\u00e9es. Contrairement aux requ\u00eates pr\u00e9par\u00e9es, qui ne sont gard\u00e9es en m\u00e9moire que pour la session courante, les proc\u00e9dures stock\u00e9es sont, comme leur nom l'indique, stock\u00e9es de mani\u00e8re durable, et font bien partie int\u00e9grante de la base de donn\u00e9es dans laquelle elles sont enregistr\u00e9es.</p>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/cours/#creation-dune-procedure-stockee","title":"Cr\u00e9ation d\u2019une proc\u00e9dure stock\u00e9e","text":"<p>\ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>CREATE PROCEDURE nom_procedure ([parametre1 [, parametre2, ...]])\ncorps de la proc\u00e9dure;\n</code></pre> exemple sur la base gesCom, pour afficher les articles en console :  \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>CREATE PROCEDURE afficher_liste_articles() \n    -- pas de param\u00e8tres dans les parenth\u00e8ses\nSELECT Desart, PUart FROM article;\n</code></pre> La proc\u00e9dure stock\u00e9e est stock\u00e9e dans la base de donn\u00e9es. Pour ex\u00e9cuter la proc\u00e9dure, il suffit de l\u2019appeler .. \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>CALL afficher_liste_articles ;\n</code></pre></p>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/cours/#bloc-dinstructions","title":"Bloc D\u2019instructions","text":"<p>Pour d\u00e9limiter un bloc d'instructions (qui peut donc contenir plus d'une instruction), on utilise les mots BEGIN  et END.</p> <p>\ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>CREATE PROCEDURE afficher_liste_articles() \n    -- pas de param\u00e8tres dans les parenth\u00e8ses\nBEGIN\nSELECT Desart, PUart FROM article;\nEND ;\n</code></pre> MAIS \u2026 \u00e7a plante ...</p> <p>Les mots-cl\u00e9s sont bons, il n'y a pas de param\u00e8tres, mais les parenth\u00e8ses, BEGIN et END sont tous les deux pr\u00e9sents.  Peut-\u00eatre aurez-vous compris que le probl\u00e8me se situe au niveau du caract\u00e8re <code>;</code> : en effet, un <code>;</code> termine une instruction SQL. Or, on a mis un <code>;</code> \u00e0 la suite de <code>SELECT * FROM article;</code>. Cela semble logique, mais pose probl\u00e8me puisque c'est le premier <code>;</code> rencontr\u00e9 par l'instruction <code>CREATE PROCEDURE</code>, qui naturellement pense devoir s'arr\u00eater l\u00e0. Ceci d\u00e9clenche une erreur puisqu'en r\u00e9alit\u00e9, l'instruction <code>CREATE PROCEDURE</code>  n'est pas termin\u00e9e : le bloc d'instructions n'est pas complet ! \ud83d\udeab Il faut changer le d\u00e9limiteur !</p>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/cours/#delimiteur","title":"D\u00e9limiteur","text":"<p>Ce que l'on appelle d\u00e9limiteur, c'est tout simplement (par d\u00e9faut), le caract\u00e8re <code>;</code>. C'est-\u00e0-dire le caract\u00e8re qui permet de d\u00e9limiter les instructions. Or, il est tout \u00e0 fait possible de d\u00e9finir le d\u00e9limiteur manuellement, de mani\u00e8re \u00e0 ce que <code>;</code> ne signifie plus qu'une instruction se termine. Auquel cas le caract\u00e8re <code>;</code> pourra \u00eatre utilis\u00e9 \u00e0 l'int\u00e9rieur d'une instruction, et donc dans le corps d'une proc\u00e9dure stock\u00e9e.</p> <p>Pour changer le d\u00e9limiteur, il suffit d'utiliser cette commande :</p> <p>\ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>DELIMITER |\n</code></pre> Ce qui donne : </p> <p>\ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>DELIMITER |\nCREATE PROCEDURE afficher_liste_articles() \n    -- pas de param\u00e8tres dans les parenth\u00e8ses\nBEGIN\nSELECT Desart, PUart FROM article;\nEND |\n</code></pre> Note : Il est possible d'imbriquer plusieurs blocs d'instructions. De m\u00eame, \u00e0 l'int\u00e9rieur d'un bloc d'instructions, plusieurs blocs d'instructions peuvent se suivre. Ceux-ci permettent donc de structurer les instructions en plusieurs parties distinctes et sur plusieurs niveaux d'imbrication diff\u00e9rents.</p> \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>BEGIN\n    SELECT 'Bloc d''instructions principal';\n\n    BEGIN\n        SELECT 'Bloc d''instructions 2, imbriqu\u00e9 dans le bloc principal';\n\n        BEGIN\n            SELECT 'Bloc d''instructions 3, imbriqu\u00e9 dans le bloc d''instructions 2';\n        END;\n    END;\n\n    BEGIN\n        SELECT 'Bloc d''instructions 4, imbriqu\u00e9 dans le bloc principal';\n    END;\n\nEND;\n</code></pre>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/cours/#2-les-parametres-dune-procedure-stockee","title":"2. Les param\u00e8tres d'une proc\u00e9dure stock\u00e9e","text":""},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/cours/#sens-des-parametres","title":"Sens des param\u00e8tres","text":"<p>Un param\u00e8tre peut \u00eatre de trois sens diff\u00e9rents : entrant (IN),sortant (OUT), ou les deux (INOUT). \u25b6\ufe0f IN  : c'est un param\u00e8tre \"entrant\". C'est-\u00e0-dire qu'il s'agit d'un param\u00e8tre dont la valeur est fournie \u00e0 la proc\u00e9dure stock\u00e9e. Cette valeur sera utilis\u00e9e pendant la proc\u00e9dure (pour un calcul ou une s\u00e9lection, par exemple). \u25b6\ufe0f OUT  : il s'agit d'un param\u00e8tre \"sortant\", dont la valeur sera \u00e9tablie au cours de la proc\u00e9dure et qui pourra ensuite \u00eatre utilis\u00e9 en dehors de cette proc\u00e9dure. \u25b6\ufe0f INOUT  : un tel param\u00e8tre sera utilis\u00e9 pendant la proc\u00e9dure, verra \u00e9ventuellement sa valeur modifi\u00e9e par celle-ci, et sera ensuite utilisable en dehors.</p>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/cours/#syntaxe","title":"Syntaxe","text":"<p>Lorsque l'on cr\u00e9e une proc\u00e9dure avec un ou plusieurs param\u00e8tres, chaque param\u00e8tre est d\u00e9fini par trois \u00e9l\u00e9ments. \u25b6\ufe0f Son sens : entrant, sortant, ou les deux. Si aucun sens n'est donn\u00e9, il s'agira d'un param\u00e8tre IN  par d\u00e9faut. \u25b6\ufe0f Son nom : indispensable pour le d\u00e9signer \u00e0 l'int\u00e9rieur de la proc\u00e9dure. \u25b6\ufe0f Son type : INT, VARCHAR(10)\u2026</p>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/cours/#procedure-avec-un-seul-parametre-entrant","title":"Proc\u00e9dure avec un seul param\u00e8tre entrant","text":"<p>Voici une proc\u00e9dure qui renvoie l\u2019article selon son id pass\u00e9 en param\u00e8tre : </p> <p>\ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>DELIMITER | -- Facultatif si votre d\u00e9limiteur est toujours |\nCREATE PROCEDURE afficher_article_par_id (IN p_id INT)  \n    -- D\u00e9finition du param\u00e8tre p_espece_id\nBEGIN\n    SELECT desart, PUart\n    FROM article\n    WHERE Numart = p_id;  -- Utilisation du param\u00e8tre\nEND |\nDELIMITER ;  -- On remet le d\u00e9limiteur par d\u00e9faut\n</code></pre> Pour utiliser la proc\u00e9dure </p> \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>CALL afficher_article_par_id(1);\nSET @var := 2;\nCALL afficher_article_par_id(@var);\n</code></pre>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/cours/#la-declaration-dune-variable","title":"La d\u00e9claration d\u2019une variable","text":"<p>MySQL reconna\u00eet diff\u00e9rents types de variables. Le premier type est celui des variables d\u00e9finies par l\u2019utilisateur, identifi\u00e9es par un symbole <code>@</code> utilis\u00e9 comme pr\u00e9fixe. Dans MySQL, vous pouvez acc\u00e9der aux variables d\u00e9finies par l\u2019utilisateur sans les d\u00e9clarer ou les initialiser au pr\u00e9alable. Si vous le faites, une valeur <code>NULL</code> est attribu\u00e9e \u00e0 la variable lors de son initialisation. Par exemple, si vous utilisez <code>SELECT</code> avec une variable sans lui donner de valeur, comme dans ce cas :</p> <p>Exemples :</p> <ul> <li><code>SELECT @var1;</code>  /* MySQL retourne une valeur NULL. */</li> <li><code>SELECT @FirstVar=1, @SecondVar=2;</code></li> </ul> <p>Une fois que vous avez assign\u00e9 une valeur \u00e0 une variable, elle aura un type en fonction de la valeur donn\u00e9e. Dans les exemples pr\u00e9c\u00e9dents, <code>@FirstVar</code> et <code>@SecondVar</code> sont de type <code>int</code>.</p> <p>Les variables peuvent faire partie des listes de champs d\u2019une d\u00e9claration <code>SELECT</code>. Vous pouvez m\u00e9langer les variables et les noms de champs lorsque vous sp\u00e9cifiez des champs dans une s\u00e9lection, comme dans cet exemple :</p> <p>\ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>SET @IndexVar = 1;\nSELECT Desart FROM article WHERE numart= @IndexVar;\n</code></pre> //Ou pour un autre usage \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>SET @IndexVar = (SELECT PUart FROM article WHERE numart = 1);\nSELECT Desart FROM article WHERE PUart = @IndexVar ;\n</code></pre></p> <p>Remarque : Par convention les noms des variables doivent toujours \u00eatre pr\u00e9c\u00e9d\u00e9s du symbole <code>@</code></p>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/cours/#affichage-dinformations","title":"Affichage d\u2019informations","text":"<p>Syntaxe : \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>SELECT El\u00e9ment_A_Afficher\n</code></pre> exemple : </p> <p>\ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>SET @IndexVar = (SELECT PUart FROM article);\nSELECT @IndexVar, Desart\nFROM article;\nSELECT concat(\"La variable est \", convert(@IndexVar, CHAR));\n</code></pre> Explication : Affiche la valeur de <code>@c</code> concat\u00e9n\u00e9 avec la valeur de <code>@b</code> mais puisque <code>@c</code> est de type num\u00e9rique et qu'on ne peut jamais concat\u00e9ner une valeur num\u00e9rique avec une valeur cha\u00eene de caract\u00e8res, il faut passer par une fonction de conversion dont la syntaxe est la suivante : <code>Convert (Type de conversion, Valeur \u00e0 convertir)</code> Doc ici</p>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/cours/#procedure-avec-deux-parametres-un-entrant-et-un-sortant","title":"Proc\u00e9dure avec deux param\u00e8tres, un entrant et un sortant","text":"<p>Voici une proc\u00e9dure assez similaire \u00e0 la pr\u00e9c\u00e9dente, si ce n'est qu'elle n'affiche pas l\u2019article pass\u00e9 en param\u00e8tres, mais compte combien il y a d\u2019articles avec un stock &gt;= \u00e0 5 et dont le prix pass\u00e9 en param\u00e8tre est inf\u00e9rieur, puis stocke cette valeur dans un param\u00e8tre sortant.</p> <p>\ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>DELIMITER |                                                      \nCREATE PROCEDURE nb_art_petit_prix (prix INT, OUT stock INT)  \nBEGIN\n    SELECT COUNT(*) INTO stock\n    FROM article\n    WHERE PUart &lt;= prix;                               \nEND |\nDELIMITER ;\n</code></pre> \u25b6\ufe0f Pour appeler la procedure</p> <p>\ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>CALL nb_art_petit_prix(9, @st);\nSELECT @st;\n</code></pre> \u25b6\ufe0f Pour pouvoir l'utiliser, il est n\u00e9cessaire que le SELECT  ne renvoie qu'une seule ligne, et il faut que le nombre de valeurs s\u00e9lectionn\u00e9es et le nombre de variables \u00e0 assigner soient \u00e9gaux : Exemple 1 : <code>SELECT ... INTO</code>  correct avec deux valeurs \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>SELECT id, nom INTO @var1, @var2\nFROM tab1 \nWHERE id = 7;\n\nSELECT @var1, @var2;\n</code></pre> Il existe aussi des Proc\u00e9dure avec deux param\u00e8tres, un entrant et un entrant-sortant.</p>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/cours/#variables-locales","title":"Variables locales","text":"<p>Nous connaissons d\u00e9j\u00e0 les variables utilisateur, qui sont des variables d\u00e9sign\u00e9es par <code>@</code>. Il existe aussi des variables syst\u00e8me, qui sont des variables pr\u00e9d\u00e9finies par MySQL. Voyons maintenant les variables locales, qui peuvent \u00eatre d\u00e9finies dans un bloc d'instructions.</p> <p>D\u00e9claration d'une variable locale  La d\u00e9claration d'une variable locale se fait avec l'instruction <code>DECLARE</code> juste apres le d\u00e9but du bloc d\u2019instruction : <code>DECLARE nom_variable type_variable [DEFAULT valeur_defaut];</code></p> <p>\u25b6\ufe0f Pour changer la valeur d'une variable locale, on peut utiliser <code>SET</code>  ou <code>SELECT ... INTO</code>.</p> <p>Exemple : voici une proc\u00e9dure stock\u00e9e qui donne la date d'aujourd'hui et de demain. \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>DELIMITER |\nCREATE PROCEDURE aujourdhui_demain ()\nBEGIN\n    DECLARE v_date DATE DEFAULT CURRENT_DATE();               \n    -- On d\u00e9clare une variable locale et on lui met une valeur par d\u00e9faut\n\n    SELECT DATE_FORMAT(v_date, '%W %e %M %Y') AS Aujourdhui;\n\n    SET v_date = v_date + INTERVAL 1 DAY;                     \n    -- On change la valeur de la variable locale\n    SELECT DATE_FORMAT(v_date, '%W %e %M %Y') AS Demain;\nEND|\nDELIMITER ;\n</code></pre> \u25b6\ufe0f Appel :  \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>SET lc_time_names = 'fr_FR';\nCALL aujourdhui_demain();\n</code></pre></p>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/cours/#3-modification-dune-ps","title":"3. Modification d'une PS","text":""},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/cours/#suppression-dune-procedure-stockee","title":"Suppression d\u2019une proc\u00e9dure stock\u00e9e","text":"<p>Syntaxe : <code>Drop Procedure Nom_Proc\u00e9dure</code> ;</p>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/cours/#modification-dune-procedure-stockee","title":"Modification d\u2019une proc\u00e9dure stock\u00e9e","text":"<p>Syntaxe : ALTER Procedure Nom_Proc\u00e9dure as Nouvelles instructions</p>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/cours/#4-les-structures-de-mysql","title":"4. Les structures de MySQL","text":""},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/cours/#les-structures-alternatives","title":"les structures alternatives","text":"<p>\ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>IF condition THEN instructions\n[ELSEIF autre_condition THEN instructions\n[ELSEIF ...]]\n[ELSE instructions]\nEND IF;\n</code></pre> Exemple : la proc\u00e9dure suivante affiche 'n\u00e9 avant 2010'  ou 'n\u00e9 apr\u00e8s 2010', selon la date de naissance de l'animal transmis en param\u00e8tre.</p> \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>DELIMITER |\nCREATE PROCEDURE avant_apres_2010(IN p_animal_id INT)\nBEGIN\n    DECLARE v_annee INT;\n\n    SELECT YEAR(date_naissance) INTO v_annee\n    FROM Animal\n    WHERE id = p_animal_id;\n\n    IF v_annee &lt; 2010 THEN\n        SELECT 'n\u00e9 avant 2010' AS naissance;\n    ELSE    -- Pas de THEN\n        SELECT 'n\u00e9 apr\u00e8s 2010' AS naissance;\n    END IF; -- Toujours obligatoire\n\nEND |\nDELIMITER ;\n\nCALL avant_apres_2010(34);   -- N\u00e9 le 20/04/2008\nCALL avant_apres_2010(69);   -- N\u00e9 le 13/02/2012\n</code></pre> <p>Application</p> Enonc\u00e9Correction <p>On souhaite v\u00e9rifier le stock de l'article pass\u00e9 en param\u00e8tre. Si le stock a atteint le seuil minimum, afficher le message 'Rupture de stock'. Sinon afficher 'Stock disponible' \u25b6\ufe0f Ecrire la proc\u00e9dure stock\u00e9e verifier_stock() </p> \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>/* On souhaite v\u00e9rifier si le stock de l'article pass\u00e9 en param\u00e8tre a atteint son seuil minimum.\nSi c'est le cas afficher le message 'Rupture de stock' : */\nDELIMITER |\nCREATE PROCEDURE affichage_rupture(num INT)\nBEGIN\n    SET @QS = (Select QteEnStock from article Where NumArt =num) ;\n    SET @SM = (Select SeuilMin from article Where NumArt =num); \n    If @QS&lt;=@SM THEN\n        SELECT 'Rupture de stock' ;\n    Else \n        SELECT 'Stock disponible' ;\n    END IF;\nEND |\nDELIMITER ;\n\nCALL affichage_rupture2(1)\n</code></pre>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/cours/#linstruction-case","title":"L\u2019instruction case","text":"\ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>CASE valeur_a_comparer\n    WHEN possibilite1 THEN instructions\n    [WHEN possibilite2 THEN instructions] ...\n    [ELSE instructions]\nEND CASE;\n</code></pre> <p>Application</p> Enonc\u00e9correction <p>on reprend la proc\u00e9dure <code>avant_apres_2010()</code>, que l'on r\u00e9\u00e9crit avec <code>CASE</code>, et en passant  le message en param\u00e8tre OUT pour changer un peu.</p> \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>DELIMITER |\nCREATE PROCEDURE avant_apres_2010_case (IN p_animal_id INT, OUT p_message VARCHAR(100))\n BEGIN\n    DECLARE v_annee INT;\n\n    SELECT YEAR(date_naissance) INTO v_annee\n    FROM Animal\n    WHERE id = p_animal_id;\n\n    CASE\n        WHEN v_annee &lt; 2010 THEN\n            SET p_message = 'Je suis n\u00e9 avant 2010.';\n        WHEN v_annee = 2010 THEN\n            SET p_message = 'Je suis n\u00e9 en 2010.';\n        ELSE\n            SET p_message = 'Je suis n\u00e9 apr\u00e8s 2010.';   \n    END CASE;\nEND |\nDELIMITER ;\n\nCALL avant_apres_2010_case(59, @message);   \nSELECT @message;\nCALL avant_apres_2010_case(62, @message);   \nSELECT @message;\nCALL avant_apres_2010_case(69, @message);\nSELECT @message;\n</code></pre> <p>Il faut au minimum une instruction ou un bloc d'instructions par clause <code>WHEN</code>  et par clause <code>ELSE</code>. Un bloc vide <code>BEGIN END;</code>  est donc n\u00e9cessaire si l'on ne veut rien ex\u00e9cuter.</p> <p>Application</p> Enonc\u00e9Correction <p>Afficher la liste des articles (Num\u00e9ro, D\u00e9signation et prix) avec en plus une colonne Observation qui affiche 'Non Disponible' si la quantit\u00e9 en stock est \u00e9gale \u00e0 0, 'Disponible' si la quantit\u00e9 en stock est sup\u00e9rieure au stock Minimum et '\u00e0 Commander' sinon. \u25b6\ufe0f Ecrire la PS correspondante </p> \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>DELIMITER |\nCREATE PROCEDURE affichage_rupture4()\nBEGIN\n    Select NumArt, DesArt, PUArt,\n        Case\n            When QteEnStock=0 then 'Non Disponible'\n            When QteEnStock&gt;SeuilMinimum then 'Disponible'\n            Else '\u00e0 Commander'\n        END AS observation\n        FROM article ;\nEND |\nDELIMITER ;\nCALL affichage_rupture4();\n</code></pre>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/cours/#les-structures-repetitives","title":"les structures r\u00e9p\u00e9titives","text":"<p>Une boucle est une structure qui permet de r\u00e9p\u00e9ter plusieurs fois une s\u00e9rie d'instructions. Il existe trois types de boucles en MySQL : <code>WHILE</code>, <code>LOOP</code>  et <code>REPEAT</code>.</p>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/cours/#la-boucle-while","title":"La boucle WHILE","text":"<p>La boucle WHILE  permet de r\u00e9p\u00e9ter une s\u00e9rie d'instructions tant que la condition donn\u00e9e reste vraie.</p> \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>WHILE condition DO    \n    -- Attention de ne pas oublier le DO, erreur classique\n    instructions\nEND WHILE;\n</code></pre> <p>Exemple : la proc\u00e9dure suivante affiche les nombres entiers de 1 \u00e0 p_nombre (pass\u00e9 en param\u00e8tre).</p> \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>DELIMITER |\nCREATE PROCEDURE compter_jusque_while(IN p_nombre INT)\nBEGIN\n    DECLARE v_i INT DEFAULT 1;\n\n    WHILE v_i &lt;= p_nombre DO\n        SELECT v_i AS nombre; \n\n        SET v_i = v_i + 1;    \n        -- \u00c0 ne surtout pas oublier, sinon la condition restera vraie\n    END WHILE;\nEND |\nDELIMITER ;\nCALL compter_jusque_while(3);\n</code></pre> <p>Application</p> EnonceCorrection <p>Tant que la moyenne des prix des articles n'a pas encore atteint 20 EUROS et le prix le plus \u00e9lev\u00e9 pour un article n'a pas encore atteint 30 EUROS, augmenter les prix de 10% et afficher apr\u00e8s chaque modification effectu\u00e9e la liste des articles. Une fois toutes les modifications effectu\u00e9es, afficher la moyenne des prix et le prix le plus \u00e9lev\u00e9. \u25b6\ufe0f Ecrire la PS correspondante </p> \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>DELIMITER |\nCREATE PROCEDURE application_while()\nBEGIN\n    SET @moyPUart = (Select avg(PUart) from article);\n    SET @maxPUart =(select max(PUart) from article);\n    WHILE (@moyPUart &lt;20  and @maxPUart &lt;30) DO\n        Update article Set puart=puart+(puart*10)/100;\n        /* Select * from article ; */\n    END WHILE ;\n    Select avg(PUart) as moyenne , max(PUart) as Prix_\u00e9lev\u00e9 from article ;\nEND |\nDELIMITER ;\n</code></pre>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/cours/#la-boucle-repeat","title":"La boucle REPEAT","text":"<p>La boucle REPEAT  travaille en quelque sorte de mani\u00e8re oppos\u00e9e \u00e0 WHILE, puisqu'elle ex\u00e9cute des instructions de la boucle jusqu'\u00e0 ce que la condition donn\u00e9e devienne vraie.</p> <p>Exemple : voici la m\u00eame proc\u00e9dure \u00e9crite avec une boucle REPEAT.</p> \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>DELIMITER |\nCREATE PROCEDURE compter_jusque_repeat(IN p_nombre INT)\nBEGIN\n    DECLARE v_i INT DEFAULT 1;\n\n    REPEAT\n        SELECT v_i AS nombre; \n\n        SET v_i = v_i + 1;    \n        -- \u00c0 ne surtout pas oublier, sinon la condition restera vraie\n    UNTIL v_i &gt; p_nombre END REPEAT;\nEND |\nDELIMITER ;\n\nCALL compter_jusque_repeat(3);\n\n-- Condition fausse d\u00e8s le d\u00e9part, on ne rentre pas dans la boucle\nCALL compter_jusque_while(0);   \n\n-- Condition fausse d\u00e8s le d\u00e9part, on rentre quand m\u00eame une fois dans la boucle\nCALL compter_jusque_repeat(0);\n</code></pre>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/cours/#la-boucle-loop","title":"La boucle LOOP","text":"<p>On a gard\u00e9 la boucle LOOP  pour la fin, parce qu'elle est un peu particuli\u00e8re. En effet, voici sa syntaxe : \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>[label:] LOOP\n    instructions\nEND LOOP [label]\n</code></pre> Il n'est question de condition nulle part. En fait, une boucle LOOP doit int\u00e9grer dans ses instructions un \u00e9l\u00e9ment qui va la faire s'arr\u00eater : typiquement, une instruction LEAVE. Sinon, c'est une boucle infinie.</p> <p>Exemple : \u00e0 nouveau une proc\u00e9dure qui affiche les nombres entiers de <code>1 \u00e0 p_nombre</code>. \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>DELIMITER |\nCREATE PROCEDURE compter_jusque_loop(IN p_nombre INT)\nBEGIN\n    DECLARE v_i INT DEFAULT 1;\n\n    boucle_loop: LOOP\n        SELECT v_i AS nombre; \n\n        SET v_i = v_i + 1;\n\n        IF v_i &gt; p_nombre THEN\n            LEAVE boucle_loop;\n        END IF;    \n    END LOOP;\nEND |\nDELIMITER ;\n\nCALL compter_jusque_loop(3);\n</code></pre></p>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/cours/#5-avantages-inconvenients-et-usage-des-procedures-stockees","title":"5. Avantages, inconv\u00e9nients et usage des proc\u00e9dures stock\u00e9es","text":""},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/cours/#avantages","title":"Avantages","text":"<p>Les proc\u00e9dures stock\u00e9es permettent de r\u00e9duire les allers-retours entre le client et le serveur MySQL. En effet, si l'on englobe en une seule proc\u00e9dure un processus demandant l'ex\u00e9cution de plusieurs requ\u00eates, le client ne communique qu'une seule fois avec le serveur (pour demander l'ex\u00e9cution de la proc\u00e9dure) pour ex\u00e9cuter la totalit\u00e9 du traitement. Cela permet donc un certain gain en performance. Elles permettent \u00e9galement de s\u00e9curiser une base de donn\u00e9es. Par exemple, il est possible de restreindre les droits des utilisateurs de fa\u00e7on \u00e0 ce qu'ils puissent uniquement ex\u00e9cuter des proc\u00e9dures. Finis les DELETE  dangereux ou les UPDATE  inconsid\u00e9r\u00e9s. Chaque requ\u00eate ex\u00e9cut\u00e9e par les utilisateurs est cr\u00e9\u00e9e et contr\u00f4l\u00e9e par l'administrateur de la base de donn\u00e9es par l'interm\u00e9diaire des proc\u00e9dures stock\u00e9es.</p> <p>Cela permet ensuite de s'assurer qu'un traitement est toujours ex\u00e9cut\u00e9 de la m\u00eame mani\u00e8re, quelle que soit l'application/le client qui le lance. Il arrive par exemple qu'une m\u00eame base de donn\u00e9es soit exploit\u00e9e par plusieurs applications, lesquelles peuvent \u00eatre \u00e9crites avec diff\u00e9rents langages. Si on laisse chaque application avoir son propre code pour un m\u00eame traitement, il est possible que des diff\u00e9rences apparaissent (distraction, mauvaise communication, erreur ou autre). Par contre, si chaque application appelle la m\u00eame proc\u00e9dure stock\u00e9e, ce risque dispara\u00eet.</p>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/cours/#inconvenients","title":"Inconv\u00e9nients","text":"<p>Les proc\u00e9dures stock\u00e9es ajoutent \u00e9videmment \u00e0 la charge du serveur de donn\u00e9es. Plus on impl\u00e9mente de logique de traitement directement dans la base de donn\u00e9es, moins le serveur est disponible pour son but premier : le stockage de donn\u00e9es.</p> <p>Par ailleurs, certains traitements seront toujours plus simples et plus courts \u00e0 \u00e9crire (et donc \u00e0 maintenir) s'ils sont d\u00e9velopp\u00e9s dans un langage informatique adapt\u00e9. A fortiori lorsqu'il s'agit de traitements complexes. La logique qu'il est possible d'impl\u00e9menter avec MySQL permet de nombreuses choses, mais reste assez basique.</p> <p>Enfin, la syntaxe des proc\u00e9dures stock\u00e9es diff\u00e8re beaucoup d'un SGBD \u00e0 un autre. Par cons\u00e9quent, si l'on d\u00e9sire en changer, il faudra proc\u00e9der \u00e0 un grand nombre de corrections et d'ajustements.</p>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/cours/#conclusion-et-usage","title":"Conclusion et usage","text":"<p>Comme souvent, tout est question d'\u00e9quilibre. Il faut savoir utiliser des proc\u00e9dures quand c'est utile, quand on a une bonne raison de le faire. Il ne sert \u00e0 rien d'en abuser. Pour une base contenant des donn\u00e9es ultrasensibles, une bonne gestion des droits des utilisateurs coupl\u00e9e \u00e0 l'usage de proc\u00e9dures stock\u00e9es peut se r\u00e9v\u00e9ler salutaire. </p> <p>Pour une base de donn\u00e9es destin\u00e9e \u00e0 \u00eatre utilis\u00e9e par plusieurs applications diff\u00e9rentes, on choisira de cr\u00e9er des proc\u00e9dures pour les traitements g\u00e9n\u00e9raux et/ou pour lesquels la moindre erreur peut poser de gros probl\u00e8mes. Pour un traitement long, impliquant de nombreuses requ\u00eates et une logique simple, on peut s\u00e9rieusement gagner en performance en le faisant dans une proc\u00e9dure stock\u00e9e (a fortiori si ce traitement est souvent lanc\u00e9). \u2714\ufe0f \u00c0 vous de voir quelles proc\u00e9dures sont utiles pour votre application et vos besoins.</p> <p>En r\u00e9sum\u00e9</p> <p>\u25b6\ufe0f Une proc\u00e9dure stock\u00e9e est un ensemble d'instructions que l'on peut ex\u00e9cuter sur commande. \u25b6\ufe0f Une proc\u00e9dure stock\u00e9e est un objet de la base de donn\u00e9es stock\u00e9 de mani\u00e8re durable, au m\u00eame titre qu'une table. Elle n'est pas supprim\u00e9e \u00e0 la fin de la session comme l'est une requ\u00eate pr\u00e9par\u00e9e. \u25b6\ufe0f On peut passer des param\u00e8tres \u00e0 une proc\u00e9dure stock\u00e9e, qui peuvent avoir trois sens : IN(entrant), OUT  (sortant) ou INOUT  (les deux). \u25b6\ufe0f SELECT ... INTO  permet d'assigner des donn\u00e9es s\u00e9lectionn\u00e9es \u00e0 des variables ou des param\u00e8tres, \u00e0 condition que le SELECT  ne renvoie qu'une seule ligne, et qu'il y ait autant de valeurs s\u00e9lectionn\u00e9es que de variables \u00e0 assigner. \u25b6\ufe0f Les proc\u00e9dures stock\u00e9es peuvent permettre de gagner en performance en diminuant les allers-retours entre le client et le serveur. Elles peuvent \u00e9galement aider \u00e0 s\u00e9curiser une base de donn\u00e9es et \u00e0 s'assurer que les traitements sensibles sont toujours ex\u00e9cut\u00e9s de la m\u00eame mani\u00e8re. \u25b6\ufe0f Par contre, elle ajoute \u00e0 la charge du serveur et sa syntaxe n'est pas toujours portable d'un SGBD \u00e0 un autre.</p>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/exercices/","title":"Exercices","text":""},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/exercices/#exercice-1","title":"Exercice 1","text":"<p>Cr\u00e9er une proc\u00e9dure stock\u00e9e nomm\u00e9e <code>SP_ListeArticles</code> qui affiche la liste des articles d'une commande dont le num\u00e9ro est donn\u00e9 en param\u00e8tre </p> Correction \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>Create Procedure SP_ListeArticles @NumCom int as Select A.NumArt, NomArt, PUArt, QteCommandee From Article A, LigneCommande LC\nWhere LC.NumArt=A.NumArt and LC.NumCom=@NumCom\n\n--Ex\u00e9cuter cette proc\u00e9dure pour afficher la liste des articles de la commande num\u00e9ro 1 :\nExec SP_ListeArticles 1\n--Ou\nDeclare @nc int\nSet @nc=1\nExec SP_ListeArticles @nc\n</code></pre>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/exercices/#exercice-2","title":"Exercice 2","text":"<p>Cr\u00e9er une proc\u00e9dure stock\u00e9e nomm\u00e9e <code>SP_NbrCommandes</code> qui retourne le nombre de commandes </p> Correction \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>Create Procedure SP_NbrCommandes @Nbr int output as\nSet @Nbr = (Select count(NumCom) from Commande)\n\n--Ex\u00e9cuter cette proc\u00e9dures pour afficher le nombre des commandes\nDeclare @n int\nExec SP_NbrCommandes @n Output\nPrint 'Le nombre de commandes : ' + convert(varchar,@n)\n</code></pre>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/exercices/#exercice-3","title":"Exercice 3","text":"<p>Cr\u00e9er une proc\u00e9dure stock\u00e9e nomm\u00e9e <code>SP_NbrArtCom</code> qui retourne le nombre d'articles d'une commande dont le num\u00e9ro est donn\u00e9 en param\u00e8tre </p> Correction \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>DELIMITER $\nCreate Procedure SP_NbrArtCom2 (IN Num int, OUT Nbr int)\nbegin\n    Select count(NumArt) INTO Nbr\n    from LigneCommande \n    where NumCom=Num ;\nend$\n--Ex\u00e9cuter cette proc\u00e9dure pour afficher le nombre d'articles de la commande num\u00e9ro 1 :\nDeclare @n int\nExec SP_NbrArtCom 1, @n Output\nPrint 'Le nombre d articles de la commande num\u00e9ro 1 est : ' + convert(varchar,@n) \n\n-- Ou\nDeclare @nc int, @n int\nSet @nc=1\nExec SP_NbrArtCom @nc, @n Output\nPrint 'Le nombre d articles de la commande num\u00e9ro ' + convert(varchar,@nc) + ' est : ' +\nconvert(varchar,@n)\n</code></pre>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/exercices/#exercice-4","title":"Exercice 4","text":"<p>Cr\u00e9er une proc\u00e9dure stock\u00e9e <code>SP_NbrArticlesParCommande</code> qui calcule le nombre d'articles par commande</p> Correction \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>Create Procedure SP_NbrArticlesParCommande as\nSelect Commande.NumCom, DatCom, Count(NumArt)\nFrom Commande, LigneCommande\nWhere Commande.NumCom=LigneCommande.NumCom\nGroup by Commande.NumCom, DatCom\n\n--Ex\u00e9cuter cette proc\u00e9dure :\nExec SP_NbrArticlesParCommande\n</code></pre>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/exercices/#exercice-5","title":"Exercice 5","text":"<p>Cr\u00e9er une proc\u00e9dure stock\u00e9e nomm\u00e9e <code>SP_ComPeriode</code> qui affiche la liste des commandes effectu\u00e9es entre deux dates donn\u00e9es en param\u00e8tre </p> Correction \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>Create Procedure SP_ComPeriode @DateD DateTime, @DateF DateTime as\nSelect * from Commande Where datcom between @dateD and @DateF\n\n--Ex\u00e9cuter cette proc\u00e9dure pour afficher la liste des commandes effectu\u00e9es entre le\n--10/10/2006 et le 14/12/2006 :\n\nExec SP_ComPeriode '10/10/2006', '14/12/2006'\n\n--Ou\nDeclare @dd DateTime, @df DateTime\nSet @dd='10/10/2006'\nSet @df='14/12/2006'\nExec SP_ComPeriode @dd, @df\n</code></pre>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/exercices/#exercice-6","title":"Exercice 6","text":"<p>Cr\u00e9er une proc\u00e9dure stock\u00e9e nomm\u00e9e <code>SP_TypeComPeriode</code> qui affiche la liste des commandes effectu\u00e9es entre deux dates pass\u00e9es en param\u00e8tres. En plus si le nombre de ces commandes est sup\u00e9rieur \u00e0 100, afficher P\u00e9riode rouge. Si le nombre de ces commandes est entre 50 et 100 afficher P\u00e9riode jaune sinon afficher P\u00e9riode blanche (exploiter la proc\u00e9dure pr\u00e9c\u00e9dente)</p> Correction \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>Create Procedure SP_TypeComPeriode @DateD DateTime, @DateF DateTime as\nExec SP_ComPeriode @DateD, @DateF\nDeclare @nbr int\nSet @nbr=(Select count(NumCom) from Commande Where datcom between @dateD and\n@DateF)\nIf @nbr &gt;100\nPrint 'P\u00e9riode Rouge'\nElse\nBegin\nIf @nbr&lt;50\nPrint 'P\u00e9riode blanche'\nElse\nPrint 'P\u00e9riode Jaune'\nEnd\n</code></pre>"},{"location":"5_Programmation_SQL/5.1_Procedures_stockees/exercices/#exercice-7","title":"Exercice 7","text":"<p>Cr\u00e9er une proc\u00e9dure stock\u00e9e nomm\u00e9e <code>SP_EnregistrerLigneCom</code> qui re\u00e7oit un num\u00e9ro de commande, un num\u00e9ro d'article et la quantit\u00e9 command\u00e9e : - Si l'article n'existe pas ou si la quantit\u00e9 demand\u00e9e n'est pas disponible afficher un message d'erreur  - Si la commande introduite en param\u00e8tre n'existe pas, la cr\u00e9er  - Ajoute ensuite la ligne de commande et met le stock \u00e0 jour</p> Correction \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>Create Procedure SP_EnregistrerLigneCom @numCom int, @numart int, @qte decimal AS\nif not exists(select numart from article where numart=@numart)\nor (select Qteenstock from article where numart=@numart) &lt; @qte\nBegin\nPrint 'Cet article n''existe pas ou stock est insuffisant'\nReturn\nEnd\nBegin transaction\nif not exists(select numcom from Commande where numCom=@numcom)\ninsert into commande values(@NumCom,getdate())\ninsert into ligneCommande values(@NumCom, @Numart,@Qte)\nupdate article set QteEnStock=QteEnStock- @Qte where NumArt=@NumArt\nCommit Transaction\n</code></pre>"},{"location":"5_Programmation_SQL/5.2_Transactions/cours/","title":"Le transactionnel","text":"<p>Les transactions sont une fonctionnalit\u00e9 absolument indispensable, permettant de s\u00e9curiser une application utilisant une base de donn\u00e9es. Sans transactions, certaines op\u00e9rations risqueraient d'\u00eatre \u00e0 moiti\u00e9 r\u00e9alis\u00e9es, et la moindre erreur, la moindre interruption pourraient avoir des cons\u00e9quences \u00e9normes. En effet, les transactions permettent de regrouper des requ\u00eates dans des blocs, et de faire en sorte que tout le bloc soit ex\u00e9cut\u00e9 en une seule fois, cela afin de pr\u00e9server l'int\u00e9grit\u00e9 des donn\u00e9es de la base.  Une transaction permet d'ex\u00e9cuter un groupe d'instructions. Si pour une raison ou une autre l'une de ces instructions n'a pas pu \u00eatre ex\u00e9cut\u00e9e, tous le groupe d'instructions est annul\u00e9 (le tout ou rien) : \u25b6\ufe0f  Pour d\u00e9marrer une transaction on utilise l'instruction <code>START TRANSACTION</code> \u25b6\ufe0f  Pour valider la transaction et rendre les traitements qui lui sont associ\u00e9s effectifs, on utilise l'instruction <code>COMMIT</code> \u25b6\ufe0f  interrompre une transaction en cours qui n'a pas encore \u00e9t\u00e9 valid\u00e9e, on utilise l'instruction <code>ROLLBACK</code> \u25b6\ufe0f  Si plusieurs transactions peuvent \u00eatre en cours, on peut leur attribuer des noms pour les distinguer</p>"},{"location":"5_Programmation_SQL/5.2_Transactions/cours/#syntaxe","title":"Syntaxe","text":"\ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>START TRANSACTION\n    [transaction_characteristic [, transaction_characteristic] ...]\n\ntransaction_characteristic: {\n    WITH CONSISTENT SNAPSHOT\n  | READ WRITE\n  | READ ONLY\n}\n\nBEGIN [WORK]\nCOMMIT [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nROLLBACK [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nSET autocommit = {0 | 1}\n</code></pre>"},{"location":"5_Programmation_SQL/5.2_Transactions/cours/#exemple","title":"Exemple","text":"\ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>START TRANSACTION;\nSELECT @A:=SUM(salary) FROM table1 WHERE type=1;\nUPDATE table2 SET summary=@A WHERE type=1;\nCOMMIT;\n</code></pre>"},{"location":"5_Programmation_SQL/5.2_Transactions/cours/#application","title":"Application","text":"<p>Supposons qu'il n'existe pas de contrainte cl\u00e9 \u00e9trang\u00e8re entre le champ <code>NumCom</code> de la table <code>LigneCommande</code> et le champ <code>NumCom</code> de la <code>Commande</code>. On souhaite supprimer la commande num\u00e9ro 5 ainsi que la liste de ces articles.  Le programme serait :</p> <p>```sql Delete from Commande where NumCom=5 Delete from LigneCommande where NumCom=5 \ud83d\udccb Texte<pre><code>Mais si, juste apr\u00e8s l'ex\u00e9cution de la premi\u00e8re instruction et alors que la deuxi\u00e8me n'a pas encore eu lieu, un probl\u00e8me survient (une coupure de courant par exemple) la base de donn\u00e9es deviendra incoh\u00e9rente car on aura des lignes de commande pour une commande qui n'existe pas.&lt;br /&gt;\nEn pr\u00e9sence d'une transaction, le programme n'ayant pas atteint l'instruction Commit Tran, aurait annul\u00e9 toutes les instructions depuis Begin Tran. Le programme devra \u00eatre alors :\n\n ```sql\nSTART TRANSACTION;\nDelete from Commande where NumCom=5\nDelete from LigneCommande where NumCom=5\nCOMMIT;\n</code></pre></p>"},{"location":"5_Programmation_SQL/5.3_curseurs/cours/","title":"Les curseurs","text":""},{"location":"5_Programmation_SQL/5.3_curseurs/cours/#definition","title":"d\u00e9finition","text":"<p>Nous avons vu qu'il \u00e9tait possible d'exploiter le r\u00e9sultat d'un <code>SELECT</code> dans un bloc d'instructions en utilisant la commande <code>SELECT colonne(s) INTO variable(s)</code>, qui assigne les valeurs s\u00e9lectionn\u00e9es \u00e0 des variables. Cependant, <code>SELECT ... INTO</code>  ne peut \u00eatre utilis\u00e9 que pour des requ\u00eates qui ne ram\u00e8nent qu'une seule ligne de r\u00e9sultats. Les curseurs permettent de parcourir un jeu de r\u00e9sultats d'une requ\u00eate <code>SELECT</code>, quel que soit le nombre de lignes r\u00e9cup\u00e9r\u00e9es, et d'en exploiter les valeurs.</p> <p>Quatre \u00e9tapes sont n\u00e9cessaires pour utiliser un curseur. - D\u00e9claration du curseur : avec une instruction <code>DECLARE</code>. - Ouverture du curseur : on ex\u00e9cute la requ\u00eate <code>SELECT</code> du curseur et on stocke le r\u00e9sultat dans celui-ci. - Parcours du curseur : on parcourt une \u00e0 une les lignes. - Fermeture du curseur.</p>"},{"location":"5_Programmation_SQL/5.3_curseurs/cours/#syntaxe","title":"Syntaxe","text":""},{"location":"5_Programmation_SQL/5.3_curseurs/cours/#declaration-du-curseur","title":"D\u00e9claration du curseur","text":"<p>Comme toutes les instructions <code>DECLARE</code>, la d\u00e9claration d'un curseur doit se faire au d\u00e9but du bloc d'instructions pour lequel celui-ci est d\u00e9fini. Plus pr\u00e9cis\u00e9ment, on d\u00e9clare les curseurs apr\u00e8s les variables locales et les conditions, mais avant les gestionnaires d'erreurs.</p> \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>DECLARE nom_curseur CURSOR FOR requete_select;\nUn curseur est donc compos\u00e9 d'un nom, et d'une requ\u00eate SELECT.\nExemple :\nDECLARE curseur_client CURSOR \n    FOR SELECT * \n    FROM Client;\n</code></pre>"},{"location":"5_Programmation_SQL/5.3_curseurs/cours/#ouverture-et-fermeture-du-curseur","title":"Ouverture et fermeture du curseur","text":"<p>En d\u00e9clarant le curseur, on a donc associ\u00e9 un nom et une requ\u00eate <code>SELECT</code>. L'ouverture du curseur va provoquer l'ex\u00e9cution de la requ\u00eate <code>SELECT</code>, ce qui va produire un jeu de r\u00e9sultats. Une fois que l'on aura parcouru les r\u00e9sultats, il n'y aura plus qu'\u00e0 fermer le curseur. Si l'on ne le fait pas explicitement, le curseur sera ferm\u00e9 \u00e0 la fin du bloc d'un <code>OPEN nom_curseur</code>;</p> \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>  -- Parcours du curseur et instructions diverses\nCLOSE nom_curseur;.\n</code></pre>"},{"location":"5_Programmation_SQL/5.3_curseurs/cours/#parcours-du-curseur","title":"Parcours du curseur","text":"<p>Une fois que le curseur a \u00e9t\u00e9 ouvert et le jeu de r\u00e9sultats r\u00e9cup\u00e9r\u00e9, le curseur place un pointeur sur la premi\u00e8re ligne de r\u00e9sultats. Avec la commande FETCH, on r\u00e9cup\u00e8re la ligne sur laquelle pointe le curseur, et on fait avancer le pointeur vers la ligne de r\u00e9sultats suivante. On peut comparer ce fonctionnement avec la lecture de requ\u00eate en PHP.</p> \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>FETCH nom_curseur INTO variable(s);\n</code></pre> <p>Bien entendu, comme pour <code>SELECT ... INTO</code>, il faut donner autant de variables dans la clause <code>INTO</code>  que l'on a r\u00e9cup\u00e9r\u00e9 de colonnes dans la clause <code>SELECT</code>  du curseur.</p> <p>Exemple : la proc\u00e9dure suivante parcourt les deux premi\u00e8res lignes d\u2019une table Client avec un curseur.</p> \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>DELIMITER |\nCREATE PROCEDURE parcours_deux_clients()\nBEGIN\n    DECLARE v_nom, v_prenom VARCHAR(100);\n\n    DECLARE curs_clients CURSOR\n        FOR SELECT nom, prenom  -- Le SELECT r\u00e9cup\u00e8re deux colonnes\n        FROM Client\n        ORDER BY nom, prenom;   \n        -- On trie les clients par ordre alphab\u00e9tique\n\n    OPEN curs_clients;  -- Ouverture du curseur\n\n    FETCH curs_clients INTO v_nom, v_prenom;    \n    -- On r\u00e9cup\u00e8re la premi\u00e8re ligne et on assigne les valeurs r\u00e9cup\u00e9r\u00e9es \u00e0 nos variables locales\n    SELECT CONCAT(v_prenom, ' ', v_nom) AS 'Premier client';\n\n    FETCH curs_clients INTO v_nom, v_prenom;\n    -- On r\u00e9cup\u00e8re la seconde ligne et on assigne les valeurs r\u00e9cup\u00e9r\u00e9es \u00e0 nos variables locales\n    SELECT CONCAT(v_prenom, ' ', v_nom) AS 'Second client';\n\n    CLOSE curs_clients;     -- Fermeture du curseur\nEND|\nDELIMITER ;\n\nCALL parcours_deux_clients();\n</code></pre>"},{"location":"5_Programmation_SQL/5.3_curseurs/cours/#restrictions","title":"Restrictions","text":"<p><code>FETCH</code>  est la seule commande permettant de r\u00e9cup\u00e9rer une partie d'un jeu de r\u00e9sultats d'un curseur, et elle ne permet qu'une chose : r\u00e9cup\u00e9rer la ligne de r\u00e9sultats suivante. Il n'est pas possible de sauter une ou plusieurs lignes ni d'aller rechercher une ligne pr\u00e9c\u00e9dente. On ne peut que parcourir les lignes une \u00e0 une, de la premi\u00e8re \u00e0 la derni\u00e8re. Ensuite, il n'est pas possible de modifier une ligne directement \u00e0 partir d'un curseur. Il s'agit d'une restriction particuli\u00e8re \u00e0 MySQL. D'autres SGBD vous permettent des requ\u00eates d'<code>UPDATE</code> directement sur les curseurs.</p>"},{"location":"5_Programmation_SQL/5.3_curseurs/cours/#parcourir-intelligemment-tous-les-resultats-dun-curseur","title":"Parcourir intelligemment tous les r\u00e9sultats d'un curseur","text":"<p>Pour r\u00e9cup\u00e9rer une ligne de r\u00e9sultats, on utilise donc <code>FETCH</code>. Dans la proc\u00e9dure <code>parcours_deux_clients()</code>, on voulait r\u00e9cup\u00e9rer les deux premi\u00e8res lignes, on a donc utilis\u00e9 deux <code>FETCH</code>. Cependant, la plupart du temps, on ne veut pas seulement utiliser les deux premi\u00e8res lignes, mais toutes ! Or, sauf exception, on ne sait pas combien de lignes seront s\u00e9lectionn\u00e9es.</p> <p>On veut donc parcourir une \u00e0 une les lignes de r\u00e9sultats et leur appliquer un traitement, sans savoir \u00e0 l'avance combien de fois ce traitement devra \u00eatre r\u00e9p\u00e9t\u00e9. Pour cela, on utilise une boucle ! <code>WHILE</code>, <code>REPEAT</code> ou <code>LOOP</code>. Il n'y a plus qu'\u00e0 trouver une condition pour arr\u00eater la boucle une fois tous les r\u00e9sultats parcourus.</p>"},{"location":"5_Programmation_SQL/5.3_curseurs/cours/#condition-darret","title":"Condition d'arr\u00eat","text":"<p>Voyons ce qui se passe lorsque l'on fait un <code>FETCH</code> alors qu'il n'y a plus, ou pas, de r\u00e9sultats. Voici une proc\u00e9dure qui s\u00e9lectionne les clients selon une ville donn\u00e9e en param\u00e8tre. Les lignes sont r\u00e9cup\u00e9r\u00e9es et affich\u00e9es gr\u00e2ce au <code>FETCH</code>, plac\u00e9 dans une boucle <code>LOOP</code>. Je rappelle que cette boucle ne d\u00e9finit pas de condition d'arr\u00eat : il est n\u00e9cessaire d'ajouter une instruction <code>LEAVE</code>  pour l'arr\u00eater. Ici, pour tester, on ne mettra pas d'instruction <code>LEAVE</code>.</p> \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>DELIMITER |\nCREATE PROCEDURE test_condition(IN p_ville VARCHAR(100))\nBEGIN\n    DECLARE v_nom, v_prenom VARCHAR(100);\n\n    DECLARE curs_clients CURSOR\n        FOR SELECT nom, prenom\n        FROM Client\n        WHERE ville = p_ville;\n\n    OPEN curs_clients;                                    \n\n    LOOP                                                  \n        FETCH curs_clients INTO v_nom, v_prenom;                   \n        SELECT CONCAT(v_prenom, ' ', v_nom) AS 'Client';\n    END LOOP;\n\n    CLOSE curs_clients; \nEND|\nDELIMITER ;\n</code></pre> <p>Exemple : Pour afficher la liste des articles sous la forme : L'article Num\u00e9ro ........  portant la d\u00e9signation \u2026\u2026\u2026co\u00fbte \u2026. \u2026..&gt;</p> <p>\u25b6\ufe0f Ecrire le curseur correspondant </p> Correction \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>Declare @a int, @b Varchar(10), @c real\nDeclare Cur_ListeArt Cursor for Select NumArt, DesArt,puart from article\nOpen Cur_ListeArt\nFetch Next from Cur_ListeArt into @a,@b,@c\nWhile @@fetch_status=0\nBegin\nPrint 'L''article num\u00e9ro ' + convert(varchar,@a) + ' portant la d\u00e9signation ' + @b+ ' co\u00fbte    ' +     convert(varchar,@c)\nFetch Next from Cur_ListeArt into @a,@b,@c\nEnd\nClose Cur_ListeArt\nDeallocate Cur_ListeArt\n</code></pre>"},{"location":"5_Programmation_SQL/5.3_curseurs/exercices/","title":"Exercices","text":""},{"location":"5_Programmation_SQL/5.3_curseurs/exercices/#exercice-1","title":"Exercice 1","text":"<p>Ecrire un programme qui pour chaque commande Affiche le num\u00e9ro et la date de commande sous la forme :  Commande N\u00b0 : \u2026\u2026 Effectu\u00e9e le : \u2026Pour un montant de \u2026</p> Correction"},{"location":"5_Programmation_SQL/5.3_curseurs/exercices/#exercice-2","title":"Exercice 2","text":"<p>Ecrire un programme qui pour chaque commande v\u00e9rifie si cette commande a au moins un article. Si c'est le cas affiche son num\u00e9ro et la liste de ses articles sinon affiche un message d'erreur (Attention ce cours ne contient pas la gestion des erreurs) : Aucun article pour la commande \u2026. Elle sera supprim\u00e9e et supprime cette commande</p> Correction"},{"location":"5_Programmation_SQL/5.4_Triggers_d%C3%A9clencheurs/cours/","title":"Les triggers ou d\u00e9clencheurs","text":"<p>Les triggers (ou d\u00e9clencheurs) sont des objets de la base de donn\u00e9es. Attach\u00e9s \u00e0 une table, ils vont d\u00e9clencher l'ex\u00e9cution d'une instruction, ou d'un bloc d'instructions, lorsqu'une ou plusieurs lignes sont ins\u00e9r\u00e9es, supprim\u00e9es ou modifi\u00e9es dans la table \u00e0 laquelle ils sont attach\u00e9s.</p> <p>Nous allons voir comment ils fonctionnent exactement, comment on peut les cr\u00e9er et les supprimer, et surtout, comment on peut s'en servir et quelles sont leurs restrictions.</p>"},{"location":"5_Programmation_SQL/5.4_Triggers_d%C3%A9clencheurs/cours/#principe-et-usage","title":"Principe et usage","text":""},{"location":"5_Programmation_SQL/5.4_Triggers_d%C3%A9clencheurs/cours/#quest-ce-quun-trigger","title":"Qu'est-ce qu'un trigger ?","text":"<p>Tout comme les proc\u00e9dures stock\u00e9es, les triggers servent \u00e0 ex\u00e9cuter une ou plusieurs instructions. Mais \u00e0 la diff\u00e9rence des proc\u00e9dures, il n'est pas possible d'appeler un trigger : un trigger doit \u00eatre d\u00e9clench\u00e9 par un \u00e9v\u00e9nement.</p> <p>Un trigger est attach\u00e9 \u00e0 une table et peut \u00eatre d\u00e9clench\u00e9 par :</p> <p>une insertion dans la table (requ\u00eate <code>INSERT</code>)      la suppression d'une partie des donn\u00e9es de la table (requ\u00eate <code>DELETE</code>)      la modification d'une partie des donn\u00e9es de la table (requ\u00eate <code>UPDATE</code>)</p> <p>Par ailleurs, une fois le trigger d\u00e9clench\u00e9, ses instructions peuvent \u00eatre ex\u00e9cut\u00e9es soit juste avant l'ex\u00e9cution de l'\u00e9v\u00e9nement d\u00e9clencheur, soit juste apr\u00e8s.</p>"},{"location":"5_Programmation_SQL/5.4_Triggers_d%C3%A9clencheurs/cours/#que-fait-un-trigger","title":"Que fait un trigger ?","text":"<p>Un trigger ex\u00e9cute un traitement pour chaque ligne ins\u00e9r\u00e9e, modifi\u00e9e ou supprim\u00e9e par l'\u00e9v\u00e9nement d\u00e9clencheur. Donc si l'on ins\u00e8re cinq lignes, les instructions du trigger seront ex\u00e9cut\u00e9es cinq fois, chaque it\u00e9ration permettant de traiter les donn\u00e9es d'une des lignes ins\u00e9r\u00e9es.</p> <p>Les instructions d'un trigger suivent les m\u00eames principes que les instructions d'une proc\u00e9dure stock\u00e9e. S'il y a plus d'une instruction, il faut les mettre \u00e0 l'int\u00e9rieur d'un bloc d'instructions. Les structures que nous avons vues dans les deux chapitres pr\u00e9c\u00e9dents sont bien s\u00fbr utilisables (structures conditionnelles, boucles, gestionnaires d'erreurs, etc.), avec toutefois quelques restrictions que nous verrons en fin de chapitre.  Un trigger peut modifier et/ou ins\u00e9rer des donn\u00e9es dans n'importe quelle table sauf les tables utilis\u00e9es dans la requ\u00eate qui l'a d\u00e9clench\u00e9. En ce qui concerne la table \u00e0 laquelle le trigger est attach\u00e9 (qui est forc\u00e9ment utilis\u00e9e par l'\u00e9v\u00e9nement d\u00e9clencheur), le trigger peut lire et modifier uniquement la ligne ins\u00e9r\u00e9e, modifi\u00e9e ou supprim\u00e9e qu'il est en train de traiter.</p>"},{"location":"5_Programmation_SQL/5.4_Triggers_d%C3%A9clencheurs/cours/#a-quoi-sert-un-trigger","title":"\u00c0 quoi sert un trigger ?","text":"<p>On peut faire de nombreuses choses avec un trigger. Voici quelques exemples d'usage fr\u00e9quent de ces objets. </p>"},{"location":"5_Programmation_SQL/5.4_Triggers_d%C3%A9clencheurs/cours/#contraintes-et-verifications-de-donnees","title":"Contraintes et v\u00e9rifications de donn\u00e9es","text":"<p>MySQL n'impl\u00e9mente pas de contraintes d'assertion, qui sont des contraintes permettant de limiter les valeurs accept\u00e9es par une colonne (limiter une colonne TINYINT  \u00e0 TRUE  (1) ou FALSE  (0), par exemple). Avec des triggers se d\u00e9clenchant avant l'INSERT  et avant l'UPDATE, on peut v\u00e9rifier les valeurs d'une colonne lors de l'insertion ou de la modification, et les corriger si elles ne font pas partie des valeurs acceptables, ou bien faire \u00e9chouer la requ\u00eate. On peut ainsi pallier l'absence de contraintes d'assertion.</p>"},{"location":"5_Programmation_SQL/5.4_Triggers_d%C3%A9clencheurs/cours/#integrite-des-donnees","title":"Int\u00e9grit\u00e9 des donn\u00e9es","text":"<p>Les triggers sont parfois utilis\u00e9s pour remplacer les options des cl\u00e9s \u00e9trang\u00e8res <code>ON UPDATE RESTRICT|CASCADE|SET NULL</code>  et <code>ON DELETE RESTRICT|CASCADE|SET NULL</code>, notamment pour des tables MyISAM qui sont non transactionnelles et ne supportent pas les cl\u00e9s \u00e9trang\u00e8res. Cela peut aussi \u00eatre utilis\u00e9 avec des tables transactionnelles, dans les cas o\u00f9 le traitement \u00e0 appliquer pour garder des donn\u00e9es coh\u00e9rentes est plus complexe que ce qui est permis par les options de cl\u00e9s \u00e9trang\u00e8res.</p> <p>Par exemple, dans certains syst\u00e8mes, on veut pouvoir appliquer deux syst\u00e8mes de suppression : - une vraie suppression pure et dure, avec effacement des donn\u00e9es, donc une requ\u00eate DELETE   - un archivage, qui masquera les donn\u00e9es dans l'application, mais les conservera dans la base de donn\u00e9es.</p> <p>Dans ce cas, une solution possible est d'ajouter aux tables contenant des donn\u00e9es archivables une colonne archive, pouvant contenir 0 (la ligne n'est pas archiv\u00e9e) ou 1 (la ligne est archiv\u00e9e). Pour une vraie suppression, on peut utiliser simplement un <code>ON DELETE RESTRICT|CASCADE|SET NULL</code> qui se r\u00e9percutera sur les tables r\u00e9f\u00e9ren\u00e7ant les donn\u00e9es supprim\u00e9es. Par contre, dans le cas d'un archivage, on utilisera plut\u00f4t un trigger pour traiter les lignes qui r\u00e9f\u00e9rencent les donn\u00e9es archiv\u00e9es, par exemple en les archivant \u00e9galement.</p>"},{"location":"5_Programmation_SQL/5.4_Triggers_d%C3%A9clencheurs/cours/#historisation-des-actions","title":"Historisation des actions","text":"<p>On veut parfois garder une trace des actions effectu\u00e9es sur la base de donn\u00e9es, c'est-\u00e0-dire, par exemple, savoir qui a modifi\u00e9 telle ligne, et quand. Avec les triggers, rien de plus simple, il suffit de mettre \u00e0 jour des donn\u00e9es d'historisation \u00e0 chaque insertion, modification ou suppression, soit directement dans la table concern\u00e9e, soit dans une table utilis\u00e9e sp\u00e9cialement et exclusivement pour garder un historique des actions.</p>"},{"location":"5_Programmation_SQL/5.4_Triggers_d%C3%A9clencheurs/cours/#mise-a-jour-dinformations-qui-dependent-dautres-donnees","title":"Mise \u00e0 jour d'informations qui d\u00e9pendent d'autres donn\u00e9es","text":"<p>Comme pour les proc\u00e9dures stock\u00e9es, une partie de la logique \"business\" de l'application peut \u00eatre cod\u00e9e directement dans la base de donn\u00e9es gr\u00e2ce aux triggers, plut\u00f4t que du c\u00f4t\u00e9 applicatif (en PHP, Java ou quel que soit le langage de programmation utilis\u00e9). \u00c0 nouveau, cela peut permettre d'harmoniser un traitement \u00e0 travers plusieurs applications utilisant la m\u00eame base de donn\u00e9es. Par ailleurs, lorsque certaines informations d\u00e9pendent de la valeur de certaines donn\u00e9es, on peut en g\u00e9n\u00e9ral les retrouver en faisant une requ\u00eate <code>SELECT</code>. Dans ce cas, il n'est pas indispensable de stocker ces informations. Cependant, utiliser les triggers pour stocker ces informations peut faciliter la vie de l'utilisateur et peut aussi faire gagner en performance, par exemple, si l'on a tr\u00e8s souvent besoin de cette information, ou si la requ\u00eate \u00e0 faire pour trouver cette information est longue \u00e0 ex\u00e9cuter. C'est typiquement cet usage qui est fait des triggers dans ce que l'on appelle les \"vues mat\u00e9rialis\u00e9es\".</p>"},{"location":"5_Programmation_SQL/5.4_Triggers_d%C3%A9clencheurs/cours/#creation-des-triggers","title":"Cr\u00e9ation des triggers","text":""},{"location":"5_Programmation_SQL/5.4_Triggers_d%C3%A9clencheurs/cours/#syntaxe","title":"Syntaxe","text":"<p>Pour cr\u00e9er un trigger, on utilise la commande suivante : \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>CREATE TRIGGER nom_trigger moment_trigger evenement_trigger\nON nom_table FOR EACH ROW\ncorps_trigger;\n</code></pre> \u27a1\ufe0f <code>CREATE TRIGGER nom_trigger</code>  : les triggers ont donc un nom. \u27a1\ufe0f <code>moment_trigger`` evenement_trigger</code>  : servent \u00e0 d\u00e9finir quand et comment le trigger est d\u00e9clench\u00e9. \u27a1\ufe0f <code>ON nom_table</code>  : c'est l\u00e0 que l'on d\u00e9finit \u00e0 quelle table le trigger est attach\u00e9. \u27a1\ufe0f <code>FOR EACH ROW</code>  : signifie litt\u00e9ralement \"pour chaque ligne\", sous-entendu \"pour chaque ligne ins\u00e9r\u00e9e/supprim\u00e9e/modifi\u00e9e\" selon ce qui a d\u00e9clench\u00e9 le trigger. \u27a1\ufe0f <code>corps_trigger</code>  : c'est le contenu du trigger. Comme pour les proc\u00e9dures stock\u00e9es, il peut s'agir soit d'une seule instruction, soit d'un bloc d'instructions.</p>"},{"location":"5_Programmation_SQL/5.4_Triggers_d%C3%A9clencheurs/cours/#evenement-declencheur","title":"\u00c9v\u00e9nement d\u00e9clencheur","text":"<p>Trois \u00e9v\u00e9nements diff\u00e9rents peuvent d\u00e9clencher l'ex\u00e9cution des instructions d'un trigger : \u27a1\ufe0f l'insertion de lignes (INSERT) dans la table attach\u00e9e au trigger  \u27a1\ufe0f la modification de lignes (UPDATE) de cette table  \u27a1\ufe0f la suppression de lignes (DELETE) de la table. Un trigger est d\u00e9clench\u00e9 soit par INSERT, soit par UPDATE, soit par DELETE. Il ne peut pas \u00eatre d\u00e9clench\u00e9 par deux \u00e9v\u00e9nements diff\u00e9rents. On peut par contre cr\u00e9er plusieurs triggers par table pour couvrir chaque \u00e9v\u00e9nement.</p> <p>\u25b6\ufe0f Avant ou apr\u00e8s Lorsqu'un trigger est d\u00e9clench\u00e9, ses instructions peuvent \u00eatre ex\u00e9cut\u00e9es \u00e0 deux moments diff\u00e9rents : soit juste avant que l'\u00e9v\u00e9nement d\u00e9clencheur n'ait lieu (<code>BEFORE</code>), soit juste apr\u00e8s (<code>AFTER</code>).</p> <p>Donc, si vous avez un trigger <code>BEFORE UPDATE</code> sur la table <code>A</code>, l'ex\u00e9cution d'une requ\u00eate <code>UPDATE</code> sur cette table va d'abord d\u00e9clencher l'ex\u00e9cution des instructions du trigger, ensuite seulement les lignes de la table seront modifi\u00e9es.</p> <p>Exemple : Pour cr\u00e9er un trigger sur la table <code>Article</code>, d\u00e9clench\u00e9 par une insertion et s'ex\u00e9cutant apr\u00e8s ladite insertion, on utilisera la syntaxe suivante : \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>CREATE TRIGGER after_insert_article AFTER INSERT\nON Article FOR EACH ROW\ncorps_trigger;\n</code></pre></p>"},{"location":"5_Programmation_SQL/5.4_Triggers_d%C3%A9clencheurs/cours/#regle-et-convention","title":"R\u00e8gle et convention","text":"<p>Il ne peut exister qu'un seul trigger par combinaison <code>moment_trigger/evenement_trigger</code> par table. Donc un seul trigger <code>BEFORE UPDATE</code> par table, un seul <code>AFTER DELETE</code>, etc...</p> <p>\u00c9tant donn\u00e9 qu'il existe deux possibilit\u00e9s pour le moment d'ex\u00e9cution, et trois pour l'\u00e9v\u00e9nement d\u00e9clencheur, on a donc un maximum de six triggers par table. Cette r\u00e8gle \u00e9tant \u00e9tablie, il existe une convention quant \u00e0 la mani\u00e8re de nommer ses triggers, que je vous encourage \u00e0 suivre : <code>nom_trigger = moment_evenement_table</code>. Donc le trigger <code>BEFORE UPDATE ON Animal</code>  aura pour nom : <code>before_update_animal</code>.</p>"},{"location":"5_Programmation_SQL/5.4_Triggers_d%C3%A9clencheurs/cours/#old-et-new","title":"OLD et NEW","text":"<p>Dans le corps du trigger, MySQL met \u00e0 disposition deux mots-cl\u00e9s : OLD  et NEW. \u25b6\ufe0f OLD  repr\u00e9sente les valeurs des colonnes de la ligne trait\u00e9e avant qu'elle ne soit modifi\u00e9e par l'\u00e9v\u00e9nement d\u00e9clencheur. Ces valeurs peuvent \u00eatre lues, mais pas modifi\u00e9es. \u25b6\ufe0f NEW  repr\u00e9sente les valeurs des colonnes de la ligne trait\u00e9e apr\u00e8s qu'elle a \u00e9t\u00e9 modifi\u00e9e par l'\u00e9v\u00e9nement d\u00e9clencheur. Ces valeurs peuvent \u00eatre lues et modifi\u00e9es. Il n'y a que dans le cas d'un trigger <code>UPDATE</code> que <code>OLD</code> et <code>NEW</code>  coexistent. Lors d'une insertion, <code>OLD</code> n'existe pas, puisque la ligne n'existe pas avant l'\u00e9v\u00e9nement d\u00e9clencheur. Dans le cas d'une suppression, c'est <code>NEW</code>  qui n'existe pas, puisque la ligne n'existera plus apr\u00e8s l'\u00e9v\u00e9nement d\u00e9clencheur.</p>"},{"location":"5_Programmation_SQL/5.4_Triggers_d%C3%A9clencheurs/cours/#suppression-des-triggers","title":"Suppression des triggers","text":"<p>Encore une fois, la commande <code>DROP</code> permet de supprimer un trigger. \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>DROP TRIGGER nom_trigger;\n</code></pre> Tout comme pour les proc\u00e9dures stock\u00e9es, il n'est pas possible de modifier un trigger. Il faut le supprimer puis le recr\u00e9er diff\u00e9remment. Par ailleurs, si l'on supprime une table, on supprime \u00e9galement tous les triggers qui y sont attach\u00e9s.</p>"},{"location":"5_Programmation_SQL/5.4_Triggers_d%C3%A9clencheurs/cours/#fonctionnement-des-tables-inserted-et-deleted","title":"Fonctionnement des tables inserted et deleted","text":"<p>Au cours des op\u00e9rations d'ajout, de suppression et de modification, le syst\u00e8me utilise les tables temporaires <code>inserted</code> et <code>deleted</code>. Ces tables ne sont accessibles qu'au niveau des triggers et leur contenu est perdu d\u00e8s que les triggers sont valid\u00e9s.  Action d'ajout : Les enregistrements ajout\u00e9s sont plac\u00e9s dans une table temporaire nomm\u00e9e <code>inserted</code> \u25b6\ufe0f Action de suppression : Les enregistrements supprim\u00e9s sont plac\u00e9s dans une table temporaire nomm\u00e9e deleted. \u25b6\ufe0f Action de modification :  L'op\u00e9ration de modification est interpr\u00e9t\u00e9e comme une op\u00e9ration de suppression des anciennes informations et d'ajout des nouvelles informations. </p> <p>C'est pourquoi le syst\u00e8me utilise dans ce cas les deux tables temporaires <code>deleted</code> et <code>inserted</code>. En fait quand un utilisateur demande \u00e0 modifier des enregistrements, ceux ci sont d'abord sauvegard\u00e9s dans la table temporaire <code>deleted</code> et la copie modifi\u00e9e est enregistr\u00e9e dans la table <code>inserted</code>.</p>"},{"location":"5_Programmation_SQL/5.4_Triggers_d%C3%A9clencheurs/cours/#exemple-de-triggers","title":"Exemple de triggers","text":"<p>Le trigger suivant \u00e0 la suppression d'une ligne de commande, remet \u00e0 jour le stock et v\u00e9rifie s'il s'agit de la derni\u00e8re ligne pour cette commande. Si c'est le cas la commande est supprim\u00e9e :</p> \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>DELIMITER |\nCreate Trigger Tr_Supprimer_Ligne AFTER DELETE\nOn LigneCommande FOR EACH ROW\nBEGIN\n    Update article \n    set QteEnStock = QteEnStock + OLD.QteCommandee where OLD.numart=article.numart;\n    Delete from commande where numcom not in (select numcom from lignecommande);\nEND |\nDELIMITER ;\n</code></pre>"},{"location":"5_Programmation_SQL/5.4_Triggers_d%C3%A9clencheurs/exercices/","title":"Exercices","text":""},{"location":"5_Programmation_SQL/5.4_Triggers_d%C3%A9clencheurs/exercices/#exercice-1","title":"Exercice 1","text":"<p>Le trigger suivant interdit la modification des commandes</p> Correction \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>Create Trigger Tr_Emp\u00eacher_Modif\nOn Commande\nFor Update\nAs\nRollback\n</code></pre>"},{"location":"5_Programmation_SQL/5.4_Triggers_d%C3%A9clencheurs/exercices/#exercice-2","title":"Exercice 2","text":"<p>Le trigger suivant interdit la modification du num\u00e9ro de commande et v\u00e9rifie si la date saisie pour la date de commande est sup\u00e9rieure ou \u00e9gale \u00e0 la date du jour</p> Correction \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>Create Trigger Tr_Emp\u00eacher_Modif_Numcom\nOn Commande\nFor Update\nAs\nif update(NumCom)\n    Begin\n    Raiserror('le num\u00e9ro de commande ne peut \u00eatre modifi\u00e9',15,120)\n    Rollback\nEnd\nif update(DatCom)\n    Begin\n    if ((select count (DatCom) from inserted\n        Where datediff(day,datcom,getdate() )&gt;0)&lt;&gt; 0)\n        Begin\n        Raiserror('La date de commande ne peut pas \u00eatre inf\u00e9rieur \u00e0 la date en cours',15,120)\n        Rollback\n    End\nEnd\n</code></pre>"},{"location":"5_Programmation_SQL/5.4_Triggers_d%C3%A9clencheurs/exercices/#exercice-3","title":"Exercice 3","text":"<p>Le trigger suivant emp\u00eache la suppression des commandes ayant des articles associ\u00e9s Remarque : Ce trigger ne se d\u00e9clenchera pas s'il existe une contrainte cl\u00e9 \u00e9trang\u00e8re entre le champ NumCom de la table ligneCommande et le champ NumCom de la table commande.</p> Correction \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>Create Trigger Tr_Emp\u00eacher_Suppr\nOn Commande\nFor Delete\nAs\nDeclare @a int\nset @a =(Select count(numart) from lignecommande, deleted where lignecommande.numcom =deleted.numcom)\nif (@a&gt;0)\nBegin\nRaiserror('Op\u00e9ration annul\u00e9e. Une ou plusieurs commandes ont des articles enregistr\u00e9s',15,120)\nRollback\nEnd\n</code></pre>"},{"location":"5_Programmation_SQL/5.4_Triggers_d%C3%A9clencheurs/exercices/#exercice-4","title":"Exercice 4","text":"<p>Le trigger suivant \u00e0 l'ajout d'une ligne de commande v\u00e9rifie si les quantit\u00e9s sont disponibles et met le stock \u00e0 jour</p> Correction \ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>Create Trigger Tr_Ajouter_Ligne\nOn LigneCommande\nFor Insert\nAs\nDeclare @a int\nset @a=(select count(numart) from inserted, article\nwhere article.numart = inserted.numart\nand QteCommandee &gt;QteEnStock)\nif (@a &gt;0)\nBegin\nRaiserror('Ajout refus\u00e9. Quantit\u00e9s demand\u00e9es non disponibles en stock',15,120)\nRollback\nEnd\nElse\nUpdate article set QteEnStock = QteEnStock \u2013\n(select Sum(QteCommandee) from inserted where\narticle.NumArt=inserted.NumArt)\nFrom article, inserted where inserted.numart=article.numart\n</code></pre>"},{"location":"5_Programmation_SQL/5.4_Triggers_d%C3%A9clencheurs/exercices/#exercice-5","title":"Exercice 5","text":"<p>Le trigger suivant \u00e0 la modification d'une ligne de commande v\u00e9rifie si les quantit\u00e9s sont disponibles et met le stock \u00e0 jour</p> Correction <p>\ud83d\uddc2\ufe0f Requ\u00eate SQL<pre><code>Create Trigger Tr_Modifier_Ligne\nOn LigneCommande\nFor Update\nAs\nDeclare @a int\nset @a=(select count(numart) from inserted, deleted, article\nwhere article.numart = inserted.numart\nand article.numart = deleted.numart\nand inserted.QteCommandee &gt; QteEnStock+deleted.QteCommandee)\nif (@a &gt;0)\nBegin\nRaiserror('Modification refus\u00e9e. Quantit\u00e9s demand\u00e9es non disponibles en stock',15,120)\nRollback\nEnd\nElse\nupdate article set QteEnStock = QteEnStock\n+ (select Sum(QteCommandee) from deleted where deleted.NumArt=Article.NumArt)\n\u2013  (select Sum(QteCommandee) from inserted where\ninserted.NumArt=Article.NumArt)\nFrom article, inserted, deleted\nwhere inserted.numart = article.numart\nand article.numart = deleted.numart\n</code></pre> Remarque : Si le trigger d\u00e9clench\u00e9 effectue une op\u00e9ration sur une autre table, les triggers associ\u00e9s \u00e0 cette table sont alors d\u00e9clench\u00e9s (principe de cascade)</p>"},{"location":"6_Cybers%C3%A9curit%C3%A9/ressources/","title":"Pages de ressources en Cybers\u00e9curit\u00e9 SLAM","text":"<ul> <li>SecNumAcademie</li> </ul>"},{"location":"6_Cybers%C3%A9curit%C3%A9/ressources/#ressources-challenge","title":"Ressources Challenge","text":"<ul> <li>hallenges Kids</li> <li>Root-me</li> <li>Cyber-Learning.fr, cr\u00e9er par et pour le SIO</li> <li>The OSINT project</li> <li>Hackropole propos\u00e9 par ANSII</li> </ul>"},{"location":"6_Cybers%C3%A9curit%C3%A9/ressources/#ressources-support-de-cours","title":"Ressources support de cours","text":"<ul> <li>Cyber Edu</li> </ul>"},{"location":"7_Epreuves/sommaire/","title":"Descriptf des \u00e9preuves","text":"<ol> <li>Epreuve E4, oral pro</li> <li>Epreuve E5, \u00e9preuve pratique</li> <li>Epreuve E6, \u00e9preuve \u00e9crite Cyber</li> </ol>"},{"location":"7_Epreuves/info/E4/","title":"Pr\u00e9paration de l'\u00e9preuve E4","text":"<p>1 \u2013 Objectif Cette \u00e9preuve vise \u00e0 \u00e9valuer chez la personne candidate l\u2019acquisition des comp\u00e9tences d\u00e9crites dans le bloc de comp\u00e9tences \u00ab Support et mise \u00e0 disposition de services informatiques \u00bb, \u00e0 savoir : - [ ] g\u00e9rer le patrimoine informatique  - [ ] r\u00e9pondre aux incidents et demandes d\u2019assistance et d\u2019\u00e9volution  - [ ] d\u00e9velopper la pr\u00e9sence en ligne de l\u2019organisation  - [ ] travailler en mode projet  - [ ] mettre \u00e0 disposition des utilisateurs un service informatique  - [ ] organiser son d\u00e9veloppement professionnel</p> <p>2 \u2013 Modalit\u00e9s d\u2019\u00e9valuation Cette \u00e9preuve est orale, Elle prend appui sur des r\u00e9alisations professionnelles v\u00e9cues par la personne candidate au cours de sa formation et recens\u00e9es son portfolio.  La commission d\u2019\u00e9valuation dispose d\u2019un dossier remis par la personne candidate. Contenu du dossier E4 : - [ ] Attestations de stage - [ ] Portfolio numerique, accessible en ligne - [ ] Portefeuille de comp\u00e9tence Vous trouverez la fiche d'\u00e9valuation ici</p>"},{"location":"7_Epreuves/info/E5/","title":"Pr\u00e9paration de l'\u00e9preuve E5","text":"<p>1 \u2013 Objectif  Cette \u00e9preuve vise \u00e0 \u00e9valuer chez la personne candidate l\u2019acquisition des comp\u00e9tences d\u00e9crites dans le bloc de comp\u00e9tences \u00ab Conception et d\u00e9veloppement d\u2019applications \u00bb propre \u00e0 l\u2019option \u00abSolutions logicielles et applications m\u00e9tiers\u00bb, \u00e0 savoir : - [ ] concevoir et d\u00e9velopper une solution applicative  - [ ] assurer la maintenance corrective ou \u00e9volutive d\u2019une solution applicative  - [ ] g\u00e9rer les donn\u00e9es </p> <p>2 - Pr\u00e9paration L\u2019\u00e9preuve prend appui sur deux r\u00e9alisations professionnelles r\u00e9alis\u00e9s en cours d'ann\u00e9e en Atelier.   GNote (java + API Resful)  GSB (Laraval + MySQL)</p> <p>La commission d\u2019\u00e9valuation choisit une des deux r\u00e9alisations pour laquelle elle va \u00e9tablir une expression de besoins que la personne candidate doit traiter. L\u2019expression des besoins remise au candidat est r\u00e9dig\u00e9e pr\u00e9alablement par la commission \u00e0 partir de l\u2019une des situations professionnelles pr\u00e9sentes dans le dossier. Le dossier est compos\u00e9 de :  - d'une fiche de contexte mod\u00e8le pour chacun des contexte     - les sp\u00e9cifications fonctionnelles de la production attendue (au besoin illustr\u00e9es par des sch\u00e9mas, diagrammes ou encore images \u00e9cran)      - \u00e9ventuellement la nature de la documentation professionnelle \u00e0 pr\u00e9senter \u00e0 l\u2019appui de la solution (rapport de test, documentation technique, rapport d\u2019incident, etc.)</p> <p>3 - D\u00e9roulement de l'\u00e9preuve Premi\u00e8re phase  pr\u00e9paration de 30 minutes suivie d\u2019un entretien de 20 minutes maximum  Sur la base de l'expression des besoins founi par le jury en d\u00e9but d'\u00e9preuves, le candidat doit :      - de pr\u00e9senter l\u2019analyse et l\u2019interpr\u00e9tation de l\u2019expression des besoins      - de proposer des sp\u00e9cifications techniques et le choix des outils les plus adapt\u00e9s pour la r\u00e9alisation attendue       - de pr\u00e9senter la d\u00e9marche envisag\u00e9e pour r\u00e9pondre aux besoins exprim\u00e9s </p> <p>Deuxi\u00e8me phase  pr\u00e9paration d\u2019une heure suivie d\u2019un entretien de 20 minutes maximum  R\u00e9alisation de la solution attendue et pr\u00e9sent\u00e9e lors de la premi\u00e8re phase. Au terme de la pr\u00e9paration, le jury proc\u00e8de \u00e0 la recette de la solution et m\u00e8ne un entretien d\u2019explicitation</p> <p> L\u2019usage de l\u2019environnement de travail est plac\u00e9 sous la seule responsabilit\u00e9 de la personne candidate, dans le respect des consignes de s\u00e9curit\u00e9, de sauvegarde des donn\u00e9es et des ressources utilis\u00e9es.</p>"},{"location":"7_Epreuves/info/E6/","title":"Epreuve \u00e9crite Cybers\u00e9curit\u00e9","text":"<ul> <li>Lien vers les annales de l'\u00e9preuve E6</li> </ul>"},{"location":"8_PostBTS/sommaire/","title":"Ressources pour la poursuite d'\u00e9tude Post-BTS","text":"<ul> <li>site ressources Pole Excellence Cyber Bretagne</li> </ul>"},{"location":"8_PostBTS/sommaire/#les-possibilites","title":"Les possibilit\u00e9s","text":"<ol> <li>Licence pro en initial</li> <li>Licence pro en alternance</li> <li>Fac</li> <li>Ecoles d'ing\u00e9nieur</li> </ol>"},{"location":"8_PostBTS/sommaire/#panorama-des-metiers","title":"Panorama des m\u00e9tiers","text":"<ul> <li>Panorama des m\u00e9tiers Cyber</li> <li>Panorama des m\u00e9tiers informatique</li> </ul>"},{"location":"8_PostBTS/possibilit%C3%A9s/7.1_LP_initial/","title":"LP en formation initiale","text":""},{"location":"8_PostBTS/possibilit%C3%A9s/7.1_LP_initial/#lp-developpeur-web-full-stack","title":"LP Developpeur web Full Stack","text":"<p> La rochelle</p>"},{"location":"8_PostBTS/possibilit%C3%A9s/7.1_LP_initial/#bachelor-concepteur-en-developpement-informatique","title":"Bachelor concepteur en d\u00e9veloppement informatique","text":"<p> Cesi</p>"},{"location":"8_PostBTS/possibilit%C3%A9s/7.2_LP_alt/","title":"Licence Pro/Bachelor en alternance","text":""},{"location":"8_PostBTS/possibilit%C3%A9s/7.2_LP_alt/#bachelor-securite-informatique","title":"Bachelor S\u00e9curit\u00e9 Informatique","text":"<p> De la salle Rennes</p>"},{"location":"8_PostBTS/possibilit%C3%A9s/7.2_LP_alt/#bachelor-concepteur-developpeur-dapplications","title":"Bachelor Concepteur D\u00e9veloppeur d'Applications","text":"<p> Le Mans </p>"},{"location":"8_PostBTS/possibilit%C3%A9s/7.2_LP_alt/#bachelor-administrateur-dinfrastructures-securisees","title":"Bachelor Administrateur d'Infrastructures S\u00e9curis\u00e9es","text":"<p> Le Mans</p>"},{"location":"8_PostBTS/possibilit%C3%A9s/7.2_LP_alt/#lp-analyste-en-securite-des-systemes-telecoms-reseaux-et-informatiques-asstri","title":"LP Analyste en s\u00e9curit\u00e9 des syst\u00e8mes t\u00e9l\u00e9coms, r\u00e9seaux et informatiques (ASSTRI)","text":"<p> CNAM Saint Brieuc</p>"},{"location":"8_PostBTS/possibilit%C3%A9s/7.2_LP_alt/#licence-professionnelle-conception-developpement-et-test-de-logiciels","title":"Licence Professionnelle : Conception D\u00e9veloppement et Test de Logiciels","text":"<p> CFA Laval</p>"},{"location":"8_PostBTS/possibilit%C3%A9s/7.2_LP_alt/#lp-developpeur-web-full-stack","title":"LP Developpeur web Full Stack","text":"<ul> <li> Universit\u00e9 La rochelle</li> </ul>"},{"location":"8_PostBTS/possibilit%C3%A9s/7.2_LP_alt/#lp-applications-web-parcours-web-designer-integrateur","title":"LP applications Web parcours Web designer int\u00e9grateur","text":"<p> Universit\u00e9 La rochelle</p>"},{"location":"8_PostBTS/possibilit%C3%A9s/7.2_LP_alt/#bachelor-developpement","title":"Bachelor D\u00e9veloppement","text":"<p> SupDeVonci Rennes Ynov Cesi </p>"},{"location":"8_PostBTS/possibilit%C3%A9s/7.2_LP_alt/#les-ecoles","title":"Les \u00e9coles","text":"<p> ENI BAC+4 concepteur developpeur d applications </p>"},{"location":"8_PostBTS/possibilit%C3%A9s/7.3_fac/","title":"7.3 fac","text":""},{"location":"8_PostBTS/possibilit%C3%A9s/7.3_fac/#universite-de-rennes","title":"Universit\u00e9 de Rennes","text":"<p>L'universit\u00e9 propose deux parcours Informatique (g\u00e9n\u00e9rale) et M\u00e9thodes Informatiques Appliqu\u00e9es \u00e0 la Gestion des Entreprises (MIAGE)</p> <p> ISTIC</p>"},{"location":"8_PostBTS/possibilit%C3%A9s/7.4_Ecoles/","title":"Poursuites d'\u00e9tudes en ecole","text":""}]}